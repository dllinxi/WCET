

include "nmp/state.nmp"

let proc = "ppc"
let with_vle = 1
let bit_order = "uppermost" // Be careful ; this is not the convention used in PPC manuals.
let M_is_little = "MSR & (0x01<<MSR_LE)" // MSR should be correctly initialized in the init rule below

let gliss_isize = "32,16"

// pseudo-IS selector
reg VLE[1,card(1)]

op multi = normal_isa | vle_isa


// normal instruction set
op normal_isa(x: instrs32)
	syntax = x.syntax
	image = x.image
	action = {
		PIA = CIA;
		CIA = NIA;
		NIA = NIA + 4;
		x.action;
	}
	instruction_set_select = VLE == 0
	instruction_set_name = "PPC"

op instrs32  =    uisa_instr
                | vea_instr
                | oea_instr
//                | essp_fp_instr


// VLE instruction set
op vle_isa(x: vle)
	syntax = x.syntax
	image = x.image
	action = { x.action; }
	instruction_set_select = VLE == 1
	instruction_set_name = "VLE"

op vle = vle16 	| vle32

op vle16(x: vle16_list)
	syntax = x.syntax
	image = x.image
	action = {
		PIA = CIA;
		CIA = NIA;
		NIA = NIA + 2;
		x.action;
	}

op vle32(x: vle32_all)
	syntax = x.syntax
	image = x.image
	action = {
		PIA = CIA;
		CIA = NIA;
		NIA = NIA + 4;
		x.action;
	}

op vle32_all =
	  vle32_list
	| vle_normal
	| vle_book_e
//	| essp_fp_instr

op vle_normal =
	  add							// add, add., addo, addo.
	| add_carrying					// addc
	| add_carry_cr_update			// addc.
	| add_carry_overflow			// addco
	| add_carry_overflow_cr_update	// addco.
	| add_extend					// adde
	| add_extend_cr_update			// adde.
	| add_extend_overflow			// addeo
	| add_extd_overflow_cr_upd		// addeo.
	| add_me						// addme
	| add_me_cr_update				// addme.
	| add_me_overflow				// addmeo
	| add_me_overflow_cr_update		// addmeo.
	| add_ze						// addze
	| add_ze_cr_update				// addze.
	| add_ze_overflow				// addzeo
	| add_ze_overflow_cr_update		// addzeo.
	| and
	| and_cr_update					// and.
	| andc							// andc
	| andc_cr_update				// andc.
	| cmp
	| cmp_log						// cmpl
	| cntlzw
	| cntlzw_cr_update				// cntlzw.
	| divw
	| divw_cr_update				// divw.
	| divw_overflow					// divwo
	| divw_overflow_cr_upd			// divwo.
	| divwus						// divwu
	| divwus_cr_update				// divwu.
	| divwus_overflow				// divwuo
	| divwus_overflow_cr_upd		// divwuo.
	| eqv
	| eqv_cr_update					// eqv.
	| extsb
	| extsb_cr_update				// extsb.
	| extsh
	| extsh_cr_update				// extsh.
	| isel
	| lb_zero_indexed				// lbzx
	| lb_zero_update_indexed		// lbzux
	| lhw_alg_indexed				// lhax
	| lhw_alg_update_indexed		// lhaux
	| lhw_br_index					// lhbrx
	| lhw_zero_indexed				// lhzx
	| lhw_zero_update_indexed		// lhzux
	| lw_zero_indexed				// lwzx
	| lw_zero_update_indexed		// lwzux
	| lw_br_index					// lwbrx
	| lwarx
	| mov_from_spr
	| mov_to_cr_field				// mtcrf
	| mov_to_cr_xer					// mcrxr
	| mov_to_spr
	| mult_hi						// mulhw
	| mult_hi_cr_update				// mulhw.
	| mult_hi_us					// mulhwu
	| mult_hi_us_cr_update			// mulhwu.
	| mult_lw						// mulw
	| mult_lw_cr_update				// mulw.
	| mult_lw_overflow				// mullwo
	| mult_lw_overflow_cr_upd		// mullwo.
	| nand
	| nand_cr_update				// nand.
	| neg
	| neg_cr_update					// neg.
	| neg_overflow					// nego
	| neg_overflow_cr_upd			// nego.
	| nor
	| nor_cr_update					// nor.
	| oea_mfmsr						// mfmsr
	| oea_mfspr	
	| oea_mtmsr						// mtmsr
	| oea_mtspr
	| or
	| or_cr_update					// or.
	| orc
	| orc_cr_update					// orc.
	| slw
	| slw_cr_update					// slw.
	| sraw
	| sraw_cr_update				// sraw.
	| srawi
	| srawi_cr_update				// srawi.
	| srw
	| srw_cr_update					// srw.
	| st_byte_indexed				// stbx
	| st_byte_update_indexed		// stbux
	| st_half_word_indexed			// sthx
	| st_half_word_update_indexed	// sthux
	| st_word_indexed				// stwx
	| st_word_update_indexed		// stwux
	| sthw_br_index					// sthbrx
	| ststw_index					// stswx
	| ststw_imm						// stswi
	| stw_br_index					// stwbrx
	| stwcx							// stwcx.
	| sub							// subf
	| sub_cr_update					// subf.
	| sub_overflow_enable			// subfo
	| sub_crup_overen				// subfo.
	| sub_carrying					// subfc
	| sub_carry_cr_update			// subfc.
	| sub_carry_overflow			// subfco
	| sub_carry_overflow_cr_update	// subfco.
	| sub_extend					// subfe
	| sub_extend_cr_update			// subfe.
	| sub_extend_overflow			// subfeo
	| sub_extd_overflow_cr_upd		// subfeo.
	| sub_me						// subfme
	| sub_me_cr_update				// subfme.
	| sub_me_overflow				// subfmeo
	| sub_me_overflow_cr_update		// subfmeo.
	| sub_ze						// subfze
	| sub_ze_cr_update				// subfze.
	| sub_ze_overflow				// subfzeo
	| sub_ze_overflow_cr_update		// subfzeo.
	| mov_from_cr 					// mfcr
	| tw
	| vea_dcba						// dcba
	| vea_dcbf						// dcbf
	| vea_dcbi						// dcbi
	| vea_dcbst						// dcbst
	| vea_dcbt						// dcbt
	| vea_dcbtst					// dcbtst	
	| vea_dcbz						// dcbz
	| vea_icbi						// icbi
	| xor
	| xor_cr_update					// xor.


op vle_book_e =
	  icbt
	| mbar
	| mfdcr
	| mtdcr
	| msync
	| tlbivax
	| tlbre
	| tlbsx
	| tlbsync
	| tlbwe
	| wrtee
	| wrteei


// instructions files
include op "nmp/vle.nmp"
include op "nmp/book_e.nmp"
include op "nmp/uisa_fp_instr.nmp"
include op "nmp/essp_fp_instr.nmp"
include op "nmp/vea_instr.nmp"
include op "nmp/oea_instr.nmp"
include op "nmp/ppc32.nmp"
