/* Generated by gep (117/07/07 15:08:30) copyright (c) 2008 IRIT - UPS */

#ifndef GLISS_PPC_INCLUDE_PPC_CODE_TABLE_H
#define GLISS_PPC_INCLUDE_PPC_CODE_TABLE_H


#if defined(__cplusplus)
extern  "C"
{
#endif

#include <ppc/api.h>
#include <ppc/macros.h>

/* module headers */
#include <ppc/fpi.h>


#include <ppc/mem.h>
#include <ppc/grt.h>
#include <ppc/error.h>
#include <ppc/gen_int.h>
#include <ppc/loader.h>
#include <ppc/syscall.h>
#include <ppc/sysparm.h>
#include <ppc/code.h>
#include <ppc/exception.h>
#include <ppc/fpi.h>
#include <ppc/env.h>
#include <ppc/vea.h>


/* switch optimisation tables */


/* TODO: add some error messages when malloc fails */
#define gliss_error(e) fprintf(stderr, "%s\n", (e))

#define PPC__SIZE	16
static void ppc_instr_UNKNOWN_code(ppc_state_t *state, ppc_inst_t *inst) {
	/* must not be executed ! */
	ppc_execute_unknown(state, PPC_UNKNOWN___IADDR);
}

static void ppc_instr_WRTEE_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(PPC_WRTEE_D_x_x_E)), 15, 15);

}

static void ppc_instr_WRTEE_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_bit32(PPC_GPR[PPC_WRTEE_RD_x_x_rS], 15))), 15, 15);

}

static void ppc_instr_TLBWE_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_TLBSYNC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_TLBSX_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_TLBRE_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_TLBIVAX_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_MSYNC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_MTDCR_D__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_MFDCR__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_MBAR_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_ICBT_D__RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_XOR__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_XOR__RD_RD_RD_x_x_rs_r] ^ PPC_GPR[PPC_XOR__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_XOR__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_XOR_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_XOR_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_XOR_RD_RD_RD_x_x_rs_r] ^ PPC_GPR[PPC_XOR_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_ICBI_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_ICBI_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_ICBI_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_ICBI_RD_RD_x_x_rb_r])));

}

static void ppc_instr_DCBZ_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_WORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBZ_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBZ_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBZ_RD_RD_x_x_rb_r])));
	TMP_WORD = (TMP_EA - (TMP_EA % 32));
	TMP_SWORD = ((int32_t)(0));
gliss_DCBZ_RD_RD_0_:
	if((TMP_SWORD < ((int32_t)(32)))) {
		ppc_mem_write8(PPC_M, (((int32_t)(TMP_WORD)) + TMP_SWORD), ((uint8_t)(0)));
		TMP_SWORD = (TMP_SWORD + ((int32_t)(1)));
goto gliss_DCBZ_RD_RD_0_;
	}

}

static void ppc_instr_DCBTST_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBTST_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBTST_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBTST_RD_RD_x_x_rb_r])));

}

static void ppc_instr_DCBT_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBT_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBT_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBT_RD_RD_x_x_rb_r])));

}

static void ppc_instr_DCBST_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBST_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBST_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBST_RD_RD_x_x_rb_r])));

}

static void ppc_instr_DCBI_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBI_RD__RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBI_RD__RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBI_RD__RD_x_x_rb_r])));
	InvalidateDataCacheBlock(TMP_EA);

}

static void ppc_instr_DCBF_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBF_RD__RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBF_RD__RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBF_RD__RD_x_x_rb_r])));
	FlushDataCacheBlock(TMP_EA);

}

static void ppc_instr_DCBA_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBA_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBA_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBA_RD_RD_x_x_rb_r])));

}

static void ppc_instr_TW_D_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_TW_D_RD_RD_x_x_to)) == 1) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r])))
		;
	if(((((uint32_t)(PPC_TW_D_RD_RD_x_x_to)) == 2) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r])))
		;
	if(((((uint32_t)(PPC_TW_D_RD_RD_x_x_to)) == 4) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] == PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r])))
		;
	if((((uint8_t)((((uint32_t)(PPC_TW_D_RD_RD_x_x_to)) == 8))) & ((((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] < 0)) | (((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] > 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r]))))) | (((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] < 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r])))))))
		;
	if((((uint8_t)((((uint32_t)(PPC_TW_D_RD_RD_x_x_to)) == 16))) & ((((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] > 0)) | (((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] > 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r]))))) | (((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r] < 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_x_x_rb_r])))))))
		;

}

static void ppc_instr_MFCR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[0])), ((4 * 0) + 3), (4 * 0));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[1])), ((4 * 1) + 3), (4 * 1));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[2])), ((4 * 2) + 3), (4 * 2));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[3])), ((4 * 3) + 3), (4 * 3));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[4])), ((4 * 4) + 3), (4 * 4));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[5])), ((4 * 5) + 3), (4 * 5));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[6])), ((4 * 6) + 3), (4 * 6));
	PPC_GPR[PPC_MFCR_RD_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_x_x_rd], ((int32_t)(PPC_CR[7])), ((4 * 7) + 3), (4 * 7));

}

static void ppc_instr_SUBFZEO__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (0 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] < ((int32_t)(0))) && (0 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] >= 0)) {
			if((0 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((0 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFZEO__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFZEO_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (0 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] < ((int32_t)(0))) && (0 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] >= 0)) {
			if((0 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((0 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFZEO_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFZE__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZE__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZE__RD_RD_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZE__RD_RD_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZE__RD_RD_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZE__RD_RD_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFZE__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFZE_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZE_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZE_RD_RD_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZE_RD_RD_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZE_RD_RD_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZE_RD_RD_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFZE_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFMEO__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (-1 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] < ((int32_t)(0))) && (-1 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] >= 0)) {
			if((-1 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((-1 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFMEO__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFMEO_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (-1 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] < ((int32_t)(0))) && (-1 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] >= 0)) {
			if((-1 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((-1 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFMEO_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFME__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFME__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFME__RD_RD_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFME__RD_RD_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFME__RD_RD_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFME__RD_RD_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFME__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFME_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFME_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFME_RD_RD_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFME_RD_RD_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFME_RD_RD_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFME_RD_RD_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFME_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFEO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] < ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] >= 0)) {
			if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rb_r] < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFEO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFEO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] >= ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] < ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] >= 0)) {
			if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rb_r] < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFEO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFE__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFE__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFE_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFE_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFCO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFCO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFCO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFCO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFC__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFC__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFC_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_ra_r] > PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_ra_r] >= PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFC_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if((PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	if((PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBF__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBF__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBF__RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));
	PPC_GPR[PPC_SUBF__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBF_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_SUBF_RD_RD_RD_x_x_rd] = ((~PPC_GPR[PPC_SUBF_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_SUBF_RD_RD_RD_x_x_rb_r]) + ((int32_t)(1)));

}

static void ppc_instr_STWCX__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int8_t TMP_RESERVE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWCX__RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWCX__RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWCX__RD_RD_RD_x_x_rb_r])));
	if((((int32_t)(TMP_RESERVE)) == ((int32_t)(1)))) {
		ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWCX__RD_RD_RD_x_x_rs_r]);
		PPC_CR[7] = ((uint8_t)(2));
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
		TMP_RESERVE = ((int8_t)(0));
	}
	else {
		PPC_CR[7] = ((uint8_t)(0));
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_STWBRX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWBRX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWBRX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWBRX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWBRX_RD_RD_RD_x_x_rs]);

}

static void ppc_instr_STSWI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_STSWI_RD_RD_D_x_x_rs)) - 1);
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_STSWI_RD_RD_D_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STSWI_RD_RD_D_x_x_ra_r];
	TMP_EA = __gtmp_0;
	if((((uint32_t)(PPC_STSWI_RD_RD_D_x_x_NB_NB)) == 0))
		__gtmp_1 = 32;
	else
		__gtmp_1 = ((uint32_t)(PPC_STSWI_RD_RD_D_x_x_NB_NB));
	if((__gtmp_1 == 0))
		TMP_SWORD = ((int32_t)(32));
	else {
		if((((uint32_t)(PPC_STSWI_RD_RD_D_x_x_NB_NB)) == 0))
			__gtmp_2 = 32;
		else
			__gtmp_2 = ((uint32_t)(PPC_STSWI_RD_RD_D_x_x_NB_NB));
		TMP_SWORD = __gtmp_2;
	}
gliss_STSWI_RD_RD_D_0_:
	if((TMP_SWORD >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0))
			TMP_WORD = ((TMP_WORD + 1) % 32);
		ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32_generic(PPC_GPR[TMP_WORD], (31 - ((uint32_t)(TMP_BYTE))), ((31 - ((uint32_t)(TMP_BYTE))) - 7), 1 ))));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SWORD = (TMP_SWORD - ((int32_t)(1)));
goto gliss_STSWI_RD_RD_D_0_;
	}

}

static void ppc_instr_STSWX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	int8_t TMP_SBYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_STSWX_RD_RD_RD_x_x_rs)) - 1);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_XER, 6, 0)));
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_STSWX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STSWX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STSWX_RD_RD_RD_x_x_rb_r])));
gliss_STSWX_RD_RD_RD_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0))
			TMP_WORD = ((TMP_WORD + 1) % 32);
		ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32_generic(PPC_GPR[TMP_WORD], (31 - ((uint32_t)(TMP_BYTE))), ((31 - ((uint32_t)(TMP_BYTE))) - 7), 1 ))));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_STSWX_RD_RD_RD_0_;
	}

}

static void ppc_instr_STHBRX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHBRX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STHBRX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STHBRX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHBRX_RD_RD_RD_x_x_rs])));

}

static void ppc_instr_STWUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWUX_RD_RD_RD_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STWUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_STWUX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWUX_RD_RD_RD_x_x_rs]);
	PPC_GPR[PPC_STWUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STWX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWX_RD_RD_RD_x_x_rs]);

}

static void ppc_instr_STHUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHUX_RD_RD_RD_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STHUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_STHUX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHUX_RD_RD_RD_x_x_rs])));
	PPC_GPR[PPC_STHUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STHX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STHX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STHX_RD_RD_RD_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHX_RD_RD_RD_x_x_rs])));

}

static void ppc_instr_STBUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STBUX_RD_RD_RD_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STBUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_STBUX_RD_RD_RD_x_x_rb_r])));
	TMP_SWORD = PPC_GPR[PPC_STBUX_RD_RD_RD_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));
	PPC_GPR[PPC_STBUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STBX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STBX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STBX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STBX_RD_RD_RD_x_x_rb_r])));
	TMP_SWORD = PPC_GPR[PPC_STBX_RD_RD_RD_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));

}

static void ppc_instr_SRW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = (31 - ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRW__RD_RD_RD_x_x_rb_r], 4, 0))));
	TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, TMP_WORD1, 0, 1 ), TMP_WORD1, 0, 1);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRW__RD_RD_RD_x_x_rb_r], 5))) == 0))
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRW__RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRW__RD_RD_RD_x_x_rb_r], 4, 0)) & TMP_WORD)));
	else
		TMP_RES = ((int32_t)(0));
	PPC_GPR[PPC_SRW__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = (31 - ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRW_RD_RD_RD_x_x_rb_r], 4, 0))));
	TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, TMP_WORD1, 0, 1 ), TMP_WORD1, 0, 1);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRW_RD_RD_RD_x_x_rb_r], 5))) == 0))
		PPC_GPR[PPC_SRW_RD_RD_RD_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRW_RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRW_RD_RD_RD_x_x_rb_r], 4, 0)) & TMP_WORD)));
	else
		PPC_GPR[PPC_SRW_RD_RD_RD_x_x_ra] = ((int32_t)(0));

}

static void ppc_instr_SRAWI__RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAWI__RD_RD_D_x_x_rs_r], 31))) == 0)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_SRAWI__RD_RD_D_x_x_sh))), 0, 1 ), (31 - ((uint32_t)(PPC_SRAWI__RD_RD_D_x_x_sh))), 0, 1);
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRAWI__RD_RD_D_x_x_rs_r] >> PPC_SRAWI__RD_RD_D_x_x_sh) & TMP_WORD)));
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	else {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, 31, (32 - ((uint32_t)(PPC_SRAWI__RD_RD_D_x_x_sh))), 1 ), 31, (32 - ((uint32_t)(PPC_SRAWI__RD_RD_D_x_x_sh))), 1);
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRAWI__RD_RD_D_x_x_rs_r] >> PPC_SRAWI__RD_RD_D_x_x_sh) | TMP_WORD)));
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, PPC_SRAWI__RD_RD_D_x_x_sh, 0, 1 ), PPC_SRAWI__RD_RD_D_x_x_sh, 0, 1);
		TMP_WORD = (TMP_WORD & ((uint32_t)(PPC_GPR[PPC_SRAWI__RD_RD_D_x_x_rs_r])));
		if((TMP_WORD != 0))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	PPC_GPR[PPC_SRAWI__RD_RD_D_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRAWI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_rs_r], 31))) == 0)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_x_x_sh))), 0, 1 ), (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_x_x_sh))), 0, 1);
		PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_rs_r] >> PPC_SRAWI_RD_RD_D_x_x_sh) & TMP_WORD)));
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	else {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, 31, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_x_x_sh))), 1 ), 31, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_x_x_sh))), 1);
		PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_rs_r] >> PPC_SRAWI_RD_RD_D_x_x_sh) | TMP_WORD)));
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, PPC_SRAWI_RD_RD_D_x_x_sh, 0, 1 ), PPC_SRAWI_RD_RD_D_x_x_sh, 0, 1);
		TMP_WORD = (TMP_WORD & ((uint32_t)(PPC_GPR[PPC_SRAWI_RD_RD_D_x_x_rs_r])));
		if((TMP_WORD != 0))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}

}

static void ppc_instr_SRAW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rb_r], 4, 0)));
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rb_r], 5))) == 0))
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - TMP_WORD1), 0, 1 ), (31 - TMP_WORD1), 0, 1);
	TMP_WORD1 = 0;
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rs_r], 31))) == 1))
		TMP_WORD1 = ~TMP_WORD1;
	TMP_RES = ((int32_t)((((PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rb_r], 4, 0)) & TMP_WORD) | (TMP_WORD1 & ~TMP_WORD))));
	if(((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rs_r], 31))) == 1) & (((PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_rb_r], 4, 0)) & ~TMP_WORD) != 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	PPC_GPR[PPC_SRAW__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRAW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rb_r], 4, 0)));
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rb_r], 5))) == 0))
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - TMP_WORD1), 0, 1 ), (31 - TMP_WORD1), 0, 1);
	TMP_WORD1 = 0;
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rs_r], 31))) == 1))
		TMP_WORD1 = ~TMP_WORD1;
	PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_ra] = ((int32_t)((((PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rb_r], 4, 0)) & TMP_WORD) | (TMP_WORD1 & ~TMP_WORD))));
	if(((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rs_r], 31))) == 1) & (((PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_x_x_rb_r], 4, 0)) & ~TMP_WORD) != 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);

}

static void ppc_instr_SLW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SLW__RD_RD_RD_x_x_rb_r], 5))) == 0))
		TMP_RES = ((int32_t)((PPC_GPR[PPC_SLW__RD_RD_RD_x_x_rs_r] << ppc_field32(PPC_GPR[PPC_SLW__RD_RD_RD_x_x_rb_r], 4, 0))));
	else
		TMP_RES = ((int32_t)(0));
	PPC_GPR[PPC_SLW__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SLW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SLW_RD_RD_RD_x_x_rb_r], 5))) == 0))
		PPC_GPR[PPC_SLW_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_SLW_RD_RD_RD_x_x_rs_r] << ppc_field32(PPC_GPR[PPC_SLW_RD_RD_RD_x_x_rb_r], 4, 0))));
	else
		PPC_GPR[PPC_SLW_RD_RD_RD_x_x_ra] = ((int32_t)(0));

}

static void ppc_instr_ORC__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_ORC__RD_RD_RD_x_x_rs_r] | ~PPC_GPR[PPC_ORC__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_ORC__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ORC_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_ORC_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_ORC_RD_RD_RD_x_x_rs_r] | ~PPC_GPR[PPC_ORC_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_OR__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_OR__RD_RD_RD_x_x_rs_r] | PPC_GPR[PPC_OR__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_OR__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_OR_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_OR_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_OR_RD_RD_RD_x_x_rs_r] | PPC_GPR[PPC_OR_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_MTSPR_D_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MTSPR_D_RD_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD = ((TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15)) | 16);
	switch(TMP_WORD) {
	case 1022LU:
		PPC_THRM[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1021LU:
		PPC_THRM[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1020LU:
		PPC_THRM[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1019LU:
		PPC_ICTC = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1017LU:
		PPC_L2CR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1016LU:
		PPC_L2PM = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1013LU:
		PPC_DABR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1011LU:
		PPC_HID[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1010LU:
		PPC_IABR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1009LU:
		PPC_HID[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1008LU:
		PPC_HID[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 982LU:
		PPC_RPA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 981LU:
		PPC_ICMP = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 980LU:
		PPC_IMISS = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 979LU:
		PPC_HASH[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 978LU:
		PPC_HASH[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 977LU:
		PPC_DCMP = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 976LU:
		PPC_DMISS = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 958LU:
		PPC_PMC[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 957LU:
		PPC_PMC[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 956LU:
		PPC_MMCR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 955LU:
		PPC_SIA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 954LU:
		PPC_PMC[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 953LU:
		PPC_PMC[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 952LU:
		PPC_MMCR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 942LU:
		PPC_UPMC[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 941LU:
		PPC_UPMC[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 940LU:
		PPC_UMMCR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 939LU:
		PPC_USIA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 938LU:
		PPC_UPMC[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 937LU:
		PPC_UPMC[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 936LU:
		PPC_UMMCR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 575LU:
		PPC_DBAT[15] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 574LU:
		PPC_DBAT[14] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 573LU:
		PPC_DBAT[13] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 572LU:
		PPC_DBAT[12] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 571LU:
		PPC_DBAT[11] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 570LU:
		PPC_DBAT[10] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 569LU:
		PPC_DBAT[9] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 568LU:
		PPC_DBAT[8] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 567LU:
		PPC_IBAT[15] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 566LU:
		PPC_IBAT[14] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 565LU:
		PPC_IBAT[13] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 564LU:
		PPC_IBAT[12] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 563LU:
		PPC_IBAT[11] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 562LU:
		PPC_IBAT[10] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 561LU:
		PPC_IBAT[9] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 560LU:
		PPC_IBAT[8] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 543LU:
		PPC_DBAT[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 542LU:
		PPC_DBAT[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 541LU:
		PPC_DBAT[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 540LU:
		PPC_DBAT[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 539LU:
		PPC_DBAT[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 538LU:
		PPC_DBAT[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 537LU:
		PPC_DBAT[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 536LU:
		PPC_DBAT[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 535LU:
		PPC_IBAT[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 534LU:
		PPC_IBAT[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 533LU:
		PPC_IBAT[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 532LU:
		PPC_IBAT[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 531LU:
		PPC_IBAT[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 530LU:
		PPC_IBAT[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 529LU:
		PPC_IBAT[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 528LU:
		PPC_IBAT[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 287LU:
		PPC_PVR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 285LU:
		PPC_TB = ppc_set_field32(PPC_TB, ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs])), 63, (63 - (32 - 1)));
		break;
	case 284LU:
		PPC_TB = ppc_set_field32(PPC_TB, ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs])), 31, (31 - (32 - 1)));
		break;
	case 282LU:
		PPC_EAR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 279LU:
		PPC_SPRG[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 278LU:
		PPC_SPRG[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 277LU:
		PPC_SPRG[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 276LU:
		PPC_SPRG[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 275LU:
		PPC_SPRG[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 274LU:
		PPC_SPRG[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 273LU:
		PPC_SPRG[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 272LU:
		PPC_SPRG[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 27:
		PPC_SRR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 26:
		PPC_SRR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 25:
		PPC_SDR1 = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 22:
		PPC_DEC = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 19:
		PPC_DAR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 18:
		PPC_DSISR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 9:
		PPC_CTR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 8:
		PPC_LR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	case 1:
		PPC_XER = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_x_x_rs]));
		break;
	}

}

static void ppc_instr_MTMSR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_MSR = PPC_GPR[PPC_MTMSR_RD_x_x_rs_r];

}

static void ppc_instr_MFSPR_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MFSPR_RD_D_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD = ((TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15)) | 16);
	switch(TMP_WORD) {
	case 1022LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_THRM[2]));
		break;
	case 1021LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_THRM[1]));
		break;
	case 1020LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_THRM[0]));
		break;
	case 1019LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_ICTC));
		break;
	case 1017LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_L2CR));
		break;
	case 1016LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_L2PM));
		break;
	case 1013LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DABR));
		break;
	case 1011LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_HID[2]));
		break;
	case 1010LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IABR));
		break;
	case 1009LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_HID[1]));
		break;
	case 1008LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_HID[0]));
		break;
	case 982LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_RPA));
		break;
	case 981LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_ICMP));
		break;
	case 980LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IMISS));
		break;
	case 979LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_HASH[2]));
		break;
	case 978LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_HASH[1]));
		break;
	case 977LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DCMP));
		break;
	case 976LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DMISS));
		break;
	case 958LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_PMC[3]));
		break;
	case 957LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_PMC[2]));
		break;
	case 956LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_MMCR[1]));
		break;
	case 955LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SIA));
		break;
	case 954LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_PMC[1]));
		break;
	case 953LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_PMC[0]));
		break;
	case 952LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_MMCR[0]));
		break;
	case 942LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UPMC[3]));
		break;
	case 941LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UPMC[2]));
		break;
	case 940LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UMMCR[1]));
		break;
	case 939LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_USIA));
		break;
	case 938LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UPMC[1]));
		break;
	case 937LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UPMC[0]));
		break;
	case 936LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_UMMCR[0]));
		break;
	case 575LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[15]));
		break;
	case 574LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[14]));
		break;
	case 573LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[13]));
		break;
	case 572LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[12]));
		break;
	case 571LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[11]));
		break;
	case 570LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[10]));
		break;
	case 569LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[9]));
		break;
	case 568LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[8]));
		break;
	case 567LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[15]));
		break;
	case 566LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[14]));
		break;
	case 565LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[13]));
		break;
	case 564LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[12]));
		break;
	case 563LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[11]));
		break;
	case 562LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[10]));
		break;
	case 561LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[9]));
		break;
	case 560LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[8]));
		break;
	case 543LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[7]));
		break;
	case 542LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[6]));
		break;
	case 541LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[5]));
		break;
	case 540LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[4]));
		break;
	case 539LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[3]));
		break;
	case 538LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[2]));
		break;
	case 537LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[1]));
		break;
	case 536LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DBAT[0]));
		break;
	case 535LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[7]));
		break;
	case 534LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[6]));
		break;
	case 533LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[5]));
		break;
	case 532LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[4]));
		break;
	case 531LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[3]));
		break;
	case 530LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[2]));
		break;
	case 529LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[1]));
		break;
	case 528LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_IBAT[0]));
		break;
	case 287LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_PVR));
		break;
	case 282LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_EAR));
		break;
	case 279LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[7]));
		break;
	case 278LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[6]));
		break;
	case 277LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[5]));
		break;
	case 276LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[4]));
		break;
	case 275LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[3]));
		break;
	case 274LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[2]));
		break;
	case 273LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[1]));
		break;
	case 272LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SPRG[0]));
		break;
	case 269LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(ppc_field32(PPC_TB, 63, (63 - (32 - 1)))));
		break;
	case 268LU:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(ppc_field32(PPC_TB, 31, (31 - (32 - 1)))));
		break;
	case 27:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SRR[1]));
		break;
	case 26:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SRR[0]));
		break;
	case 25:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_SDR1));
		break;
	case 22:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DEC));
		break;
	case 19:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DAR));
		break;
	case 18:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_DSISR));
		break;
	case 9:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_CTR));
		break;
	case 8:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_LR));
		break;
	case 1:
		PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_x_x_rd_r]] = ((int32_t)(PPC_XER));
		break;
	}

}

static void ppc_instr_MFMSR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MFMSR_RD_x_x_rd_r] = PPC_MSR;

}

static void ppc_instr_NOR__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_NOR__RD_RD_RD_x_x_rs_r] | PPC_GPR[PPC_NOR__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_NOR__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NOR_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NOR_RD_RD_RD_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_NOR_RD_RD_RD_x_x_rs_r] | PPC_GPR[PPC_NOR_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_NEGO__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEGO__RD_RD_x_x_ra_r] + ((int32_t)(1)));
	if((PPC_GPR[PPC_NEGO__RD_RD_x_x_ra_r] == 0x80000000LU)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_NEGO__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NEGO_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEGO_RD_RD_x_x_ra_r] + ((int32_t)(1)));
	if((PPC_GPR[PPC_NEGO_RD_RD_x_x_ra_r] == 0x80000000LU)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_NEGO_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_NEG__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEG__RD_RD_x_x_ra_r] + ((int32_t)(1)));
	PPC_GPR[PPC_NEG__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NEG_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NEG_RD_RD_x_x_rd] = (~PPC_GPR[PPC_NEG_RD_RD_x_x_ra_r] + ((int32_t)(1)));

}

static void ppc_instr_NAND__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_NAND__RD_RD_RD_x_x_rs_r] & PPC_GPR[PPC_NAND__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_NAND__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NAND_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NAND_RD_RD_RD_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_NAND_RD_RD_RD_x_x_rs_r] & PPC_GPR[PPC_NAND_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_MULLWO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_M_RES;
	int64_t TMP_M_OP2;
	int64_t TMP_M_OP1;
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_ra_r] * PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_rb_r]);
	TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_ra_r], 31, (31 - (32 - 1)));
	TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_rb_r], 31, (31 - (32 - 1)));
	TMP_M_RES = ppc_set_field32(TMP_M_RES, TMP_RES, 31, (31 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_ra_r] < 0))
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_rb_r] < 0))
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((TMP_RES < ((int32_t)(0))))
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if(((TMP_M_OP1 * TMP_M_OP2) != TMP_M_RES)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_MULLWO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULLWO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_M_RES;
	int64_t TMP_M_OP2;
	int64_t TMP_M_OP1;
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_ra_r] * PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_rb_r]);
	TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_ra_r], 31, (31 - (32 - 1)));
	TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_rb_r], 31, (31 - (32 - 1)));
	TMP_M_RES = ppc_set_field32(TMP_M_RES, TMP_RES, 31, (31 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_ra_r] < 0))
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_rb_r] < 0))
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((TMP_RES < ((int32_t)(0))))
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if(((TMP_M_OP1 * TMP_M_OP2) != TMP_M_RES)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_MULLWO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_MULLW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLW__RD_RD_RD_x_x_ra_r] * PPC_GPR[PPC_MULLW__RD_RD_RD_x_x_rb_r]);
	PPC_GPR[PPC_MULLW__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULLW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MULLW_RD_RD_RD_x_x_rd] = (PPC_GPR[PPC_MULLW_RD_RD_RD_x_x_ra_r] * PPC_GPR[PPC_MULLW_RD_RD_RD_x_x_rb_r]);

}

static void ppc_instr_MULHWU__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint64_t TMP_DWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_DWORD = ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU__RD_RD_RD_x_x_ra_r]))));
	TMP_DWORD = (TMP_DWORD * ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU__RD_RD_RD_x_x_rb_r])))));
	PPC_GPR[PPC_MULHWU__RD_RD_RD_x_x_rd] = ((int32_t)(ppc_field64(TMP_DWORD, 63, 32)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULHWU_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint64_t TMP_DWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_DWORD = ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU_RD_RD_RD_x_x_ra_r]))));
	TMP_DWORD = (TMP_DWORD * ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU_RD_RD_RD_x_x_rb_r])))));
	PPC_GPR[PPC_MULHWU_RD_RD_RD_x_x_rd] = ((int32_t)(ppc_field64(TMP_DWORD, 63, 32)));

}

static void ppc_instr_MULHW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_SDWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SDWORD = ((int64_t)(PPC_GPR[PPC_MULHW__RD_RD_RD_x_x_ra_r]));
	TMP_SDWORD = (TMP_SDWORD * ((int64_t)(PPC_GPR[PPC_MULHW__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_MULHW__RD_RD_RD_x_x_rd] = ((int32_t)(ppc_field64(TMP_SDWORD, 63, 32)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULHW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_SDWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SDWORD = ((int64_t)(PPC_GPR[PPC_MULHW_RD_RD_RD_x_x_ra_r]));
	TMP_SDWORD = (TMP_SDWORD * ((int64_t)(PPC_GPR[PPC_MULHW_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_MULHW_RD_RD_RD_x_x_rd] = ((int32_t)(ppc_field64(TMP_SDWORD, 63, 32)));

}

static void ppc_instr_MTSPR_S_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MTSPR_S_RD_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD1 = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field16(TMP_HWORD, 8, 5)));
	TMP_WORD = (TMP_WORD | (TMP_WORD1 & 15));
	if((TMP_WORD > 9))
		print("mtspr is only user level instruction set implementation.");
	switch(TMP_WORD) {
	case 9:
		PPC_CTR = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_x_x_rs]));
		break;
	case 8:
		PPC_LR = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_x_x_rs]));
		break;
	case 1:
		PPC_XER = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_x_x_rs]));
		break;
	default:
		print("mtspr: rs error.");
	}

}

static void ppc_instr_MCRXR_CRFD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[(7 - ((uint32_t)(PPC_MCRXR_CRFD_x_x_crfd)))] = ppc_field32(PPC_XER, 31, 28);
	PPC_XER = ppc_set_field32(PPC_XER, 0, 31, 28);

}

static void ppc_instr_MTCRF_D_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_BYTE = ((uint8_t)(255LU));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 7))
		PPC_CR[7] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 7) + 3), (4 * 7));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 6))
		PPC_CR[6] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 6) + 3), (4 * 6));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 5))
		PPC_CR[5] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 5) + 3), (4 * 5));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 4))
		PPC_CR[4] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 4) + 3), (4 * 4));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 3))
		PPC_CR[3] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 3) + 3), (4 * 3));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 2))
		PPC_CR[2] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 2) + 3), (4 * 2));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 1))
		PPC_CR[1] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], ((4 * 1) + 3), (4 * 1));
	if(ppc_bit8(PPC_MTCRF_D_RD_x_x_crm, 0))
		PPC_CR[0] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_x_x_rs_r], 3, 0);

}

static void ppc_instr_MFSPR_RD_S_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MFSPR_RD_S_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD = (TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15));
	if((TMP_WORD > 9))
		print("mfspr is only user level instruction set implementation.");
	switch(TMP_WORD) {
	case 9:
		PPC_GPR[PPC_MFSPR_RD_S_x_x_rd] = ((int32_t)(PPC_CTR));
		break;
	case 8:
		PPC_GPR[PPC_MFSPR_RD_S_x_x_rd] = ((int32_t)(PPC_LR));
		break;
	case 1:
		PPC_GPR[PPC_MFSPR_RD_S_x_x_rd] = ((int32_t)(PPC_XER));
		break;
	default:
		print("mfspr: rd error.");
	}

}

static void ppc_instr_LWARX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_RESERVE_ADDR;
	int8_t TMP_RESERVE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWARX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWARX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWARX_RD_RD_RD_x_x_rb_r])));
	TMP_RESERVE = ((int8_t)(1));
	TMP_RESERVE_ADDR = TMP_EA;
	PPC_GPR[PPC_LWARX_RD_RD_RD_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LWBRX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWBRX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWBRX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWBRX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LWBRX_RD_RD_RD_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LWZUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LWZUX_RD_RD_RD_x_x_ra)) == 0) || (PPC_LWZUX_RD_RD_RD_x_x_ra == PPC_LWZUX_RD_RD_RD_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LWZUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_LWZUX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LWZUX_RD_RD_RD_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);
	PPC_GPR[PPC_LWZUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LWZX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWZX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWZX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWZX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LWZX_RD_RD_RD_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LHZUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHZUX_RD_RD_RD_x_x_ra)) == 0) || (PPC_LHZUX_RD_RD_RD_x_x_ra == PPC_LHZUX_RD_RD_RD_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_rb_r])));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZUX_RD_RD_RD_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHZX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHZX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHZX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHZX_RD_RD_RD_x_x_rb_r])));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZX_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZX_RD_RD_RD_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHBRX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHBRX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHBRX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHBRX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LHBRX_RD_RD_RD_x_x_rd] = ((int32_t)(ppc_mem_read16(PPC_M, TMP_EA)));
	PPC_GPR[PPC_LHBRX_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHBRX_RD_RD_RD_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHAUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHAUX_RD_RD_RD_x_x_ra)) == 0) || (PPC_LHAUX_RD_RD_RD_x_x_ra == PPC_LHAUX_RD_RD_RD_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_rd])))));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LHAX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHAX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHAX_RD_RD_RD_x_x_rd])))));

}

static void ppc_instr_LBZUX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LBZUX_RD_RD_RD_x_x_ra)) == 0) || (PPC_LBZUX_RD_RD_RD_x_x_ra == PPC_LBZUX_RD_RD_RD_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_ra] + PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_rb_r])));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_rd])))));
	PPC_GPR[PPC_LBZUX_RD_RD_RD_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LBZX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LBZX_RD_RD_RD_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LBZX_RD_RD_RD_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LBZX_RD_RD_RD_x_x_rb_r])));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZX_RD_RD_RD_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZX_RD_RD_RD_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZX_RD_RD_RD_x_x_rd])))));

}

static void ppc_instr_ISEL_RD__RD__R5B__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_crb))) / 4)], ((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_crb))) - (((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_crb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_crb))) - (((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_crb))) / 4) * 4)), 1 )) {
		if((((uint32_t)(PPC_ISEL_RD__RD__R5B__D_x_x_rA_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_ISEL_RD__RD__R5B__D_x_x_rA_r];
		PPC_ISEL_RD__RD__R5B__D_x_x_rD = ((uint8_t)(__gtmp_0));
	}
	else
		PPC_ISEL_RD__RD__R5B__D_x_x_rD = PPC_ISEL_RD__RD__R5B__D_x_x_rB;

}

static void ppc_instr_EXTSH__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SHWORD = ((int16_t)(ppc_field32(PPC_GPR[PPC_EXTSH__RD_RD_x_x_rs], 15, 0)));
	PPC_GPR[PPC_EXTSH__RD_RD_x_x_ra] = ((int32_t)(TMP_SHWORD));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EXTSH_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SHWORD = ((int16_t)(ppc_field32(PPC_GPR[PPC_EXTSH_RD_RD_x_x_rs], 15, 0)));
	PPC_GPR[PPC_EXTSH_RD_RD_x_x_ra] = ((int32_t)(TMP_SHWORD));

}

static void ppc_instr_EXTSB__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_GPR[PPC_EXTSB__RD_RD_x_x_rs], 7, 0)));
	PPC_GPR[PPC_EXTSB__RD_RD_x_x_ra] = ((int32_t)(TMP_SBYTE));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EXTSB_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_GPR[PPC_EXTSB_RD_RD_x_x_rs], 7, 0)));
	PPC_GPR[PPC_EXTSB_RD_RD_x_x_ra] = ((int32_t)(TMP_SBYTE));

}

static void ppc_instr_EQV__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_EQV__RD_RD_RD_x_x_rs_r] ^ PPC_GPR[PPC_EQV__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_EQV__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EQV_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_EQV_RD_RD_RD_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_EQV_RD_RD_RD_x_x_rs_r] ^ PPC_GPR[PPC_EQV_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_DIVWUO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r] == 0)) {
		TMP_RES = ((int32_t)(0));
		if((((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r])) == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}
	else {
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r])))));
		if((((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rb_r])) == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWUO__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWUO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_rb_r] == 0))
		TMP_RES = ((int32_t)(0));
	else
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_rb_r])))));
	if((((((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_rb_r])) == 0))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_DIVWUO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_DIVWU__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWU__RD_RD_RD_x_x_rb_r] == 0))
		PPC_GPR[PPC_DIVWU__RD_RD_RD_x_x_rd] = ((int32_t)(0));
	else {
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWU__RD_RD_RD_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWU__RD_RD_RD_x_x_rb_r])))));
		PPC_GPR[PPC_DIVWU__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWU_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWU_RD_RD_RD_x_x_rb_r] == 0))
		PPC_GPR[PPC_DIVWU_RD_RD_RD_x_x_rd] = ((int32_t)(0));
	else
		PPC_GPR[PPC_DIVWU_RD_RD_RD_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWU_RD_RD_RD_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWU_RD_RD_RD_x_x_rb_r])))));

}

static void ppc_instr_DIVWO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == -1)))) {
		TMP_RES = ((int32_t)(0));
		if((((PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}
	else {
		TMP_RES = (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_ra_r] / PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r]);
		if((((PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rb_r] == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWO__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rb_r] == -1))))
		TMP_RES = ((int32_t)(0));
	else
		TMP_RES = (PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_ra_r] / PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rb_r]);
	if((((PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rb_r] == 0))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_DIVWO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_DIVW__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_rb_r] == -1))))
		PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_rd] = ((int32_t)(0));
	else {
		TMP_RES = (PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_ra_r] / PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_rb_r]);
		PPC_GPR[PPC_DIVW__RD_RD_RD_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVW_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_rb_r] == -1))))
		PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_rd] = ((int32_t)(0));
	else
		PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_rd] = (PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_ra_r] / PPC_GPR[PPC_DIVW_RD_RD_RD_x_x_rb_r]);

}

static void ppc_instr_CNTLZW__RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(31));
gliss_CNTLZW__RD__RD_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((ppc_field32_generic(PPC_GPR[PPC_CNTLZW__RD__RD_x_x_rs_r], TMP_SBYTE, TMP_SBYTE, 1 ) == ((int32_t)(0)))) {
			TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_CNTLZW__RD__RD_0_;
		}
		else {
			TMP_RES = (((int32_t)(31)) - ((int32_t)(TMP_SBYTE)));
			TMP_SBYTE = ((int8_t)(-1));
		}
	}
	else
		TMP_RES = ((int32_t)(32));
	PPC_GPR[PPC_CNTLZW__RD__RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(0)), 3, 3);

}

static void ppc_instr_CNTLZW_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(31));
gliss_CNTLZW_RD__RD_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((ppc_field32_generic(PPC_GPR[PPC_CNTLZW_RD__RD_x_x_rs_r], TMP_SBYTE, TMP_SBYTE, 1 ) == ((int32_t)(0)))) {
			TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_CNTLZW_RD__RD_0_;
		}
		else {
			PPC_GPR[PPC_CNTLZW_RD__RD_x_x_ra] = (((int32_t)(31)) - ((int32_t)(TMP_SBYTE)));
			TMP_SBYTE = ((int8_t)(-1));
		}
	}
	else
		PPC_GPR[PPC_CNTLZW_RD__RD_x_x_ra] = ((int32_t)(32));

}

static void ppc_instr_CMPL_D_D_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_x_x_ra_r])) < ((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_x_x_rb_r]))))
		TMP_BYTE = ((uint8_t)(4));
	else {
		if((((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_x_x_ra_r])) > ((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_x_x_rb_r]))))
			TMP_BYTE = ((uint8_t)(2));
		else
			TMP_BYTE = ((uint8_t)(1));
	}
	TMP_BYTE = (TMP_BYTE << 1);
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMPL_D_D_RD_RD_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMPL_D_D_RD_RD_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_CMP_D_D_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_CMP_D_D_RD_RD_x_x_ra_r] < PPC_GPR[PPC_CMP_D_D_RD_RD_x_x_rb_r]))
		TMP_BYTE = ((uint8_t)(4));
	else {
		if((PPC_GPR[PPC_CMP_D_D_RD_RD_x_x_ra_r] > PPC_GPR[PPC_CMP_D_D_RD_RD_x_x_rb_r]))
			TMP_BYTE = ((uint8_t)(2));
		else
			TMP_BYTE = ((uint8_t)(1));
	}
	TMP_BYTE = (TMP_BYTE << 1);
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMP_D_D_RD_RD_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMP_D_D_RD_RD_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_ANDC__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_ANDC__RD_RD_RD_x_x_rs_r] & ~PPC_GPR[PPC_ANDC__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_ANDC__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ANDC_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_ANDC_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_ANDC_RD_RD_RD_x_x_rs_r] & ~PPC_GPR[PPC_ANDC_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_AND__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_AND__RD_RD_RD_x_x_rs_r] & PPC_GPR[PPC_AND__RD_RD_RD_x_x_rb_r])));
	PPC_GPR[PPC_AND__RD_RD_RD_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_AND_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_AND_RD_RD_RD_x_x_ra] = ((int32_t)((PPC_GPR[PPC_AND_RD_RD_RD_x_x_rs_r] & PPC_GPR[PPC_AND_RD_RD_RD_x_x_rb_r])));

}

static void ppc_instr_ADDZEO__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDZEO__RD_RD_x_x_ra_r] < 0) && (0 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDZEO__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDZEO_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDZEO_RD_RD_x_x_ra_r] < 0) && (0 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDZEO_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDZE__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZE__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZE__RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZE__RD_RD_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZE__RD_RD_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZE__RD_RD_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDZE__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDZE_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZE_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZE_RD_RD_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZE_RD_RD_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZE_RD_RD_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZE_RD_RD_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDZE_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDMEO__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDMEO__RD_RD_x_x_ra_r] < 0) && (-1 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDMEO__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDMEO_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDMEO_RD_RD_x_x_ra_r] < 0) && (-1 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDMEO_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDME__RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDME__RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDME__RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDME__RD_RD_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDME__RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDME__RD_RD_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDME__RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDME_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDME_RD_RD_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDME_RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDME_RD_RD_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDME_RD_RD_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDME_RD_RD_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDME_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDEO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDEO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDEO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	TMP_RES = PPC_GPR[PPC_ADDEO_RD_RD_RD_x_x_rd];

}

static void ppc_instr_ADDE__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDE__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDE_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDE_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDCO__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	if((((PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDCO__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDCO_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	if((((PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDCO_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDC__RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDC__RD_RD_RD_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDC_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDC_RD_RD_RD_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDSS_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_ra_r] + PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_rb_r]);
	if(PPC_ADDSS_RD_RD_RD_x_x_Oe) {
		if((((PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	PPC_GPR[PPC_ADDSS_RD_RD_RD_x_x_rd] = TMP_RES;
	if(PPC_ADDSS_RD_RD_RD_x_x_Rc) {
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_E_XORIS_RD__RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_XORIS_RD__RD__X_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_XORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_XORIS_RD__RD__X_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_XORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_XORIS_RD__RD__X_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_XORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_XORIS_RD__RD__X_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_XORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_XORIS_RD__RD__X_x_x_UI8 << 24))));
	}
	TMP_WORD = (((uint32_t)(PPC_GPR[PPC_E_XORIS_RD__RD__X_x_x_rS_idx])) ^ __gtmp_0);
	if(PPC_E_XORIS_RD__RD__X_x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_XORIS_RD__RD__X_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_SUBFICS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	uint32_t IMM;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_SUBFICS_RD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_SUBFICS_RD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_SUBFICS_RD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_SUBFICS_RD__RD__D_x_x_UI8 << 24))));
	}
	IMM = -__gtmp_0;
	TMP_WORD = ((uint32_t)((PPC_GPR[PPC_E_SUBFICS_RD__RD__D_x_x_rA_idx] + ((int32_t)(IMM)))));
	if((((uint32_t)(PPC_E_SUBFICS_RD__RD__D_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_SUBFICS_RD__RD__D_x_x_rD_idx] = TMP_WORD;
	if(((PPC_GPR[PPC_E_SUBFICS_RD__RD__D_x_x_rA_idx] >= 0) && (IMM >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_E_SUBFICS_RD__RD__D_x_x_rA_idx] < 0) && (IMM < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_WORD >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}

}

static void ppc_instr_E_STMW_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t r;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STMW_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STMW_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STMW_RD__D_LP_RD_RP__x_x_D8)))));
	r = ((uint32_t)(PPC_E_STMW_RD__D_LP_RD_RP__x_x_rS));
gliss_E_STMW_RD__D_LP_RD_RP__0_:
	if((r <= 31)) {
		ppc_mem_write32(PPC_M, EA, PPC_GPR[r]);
		r = (r + 1);
		EA = (EA + 4);
goto gliss_E_STMW_RD__D_LP_RD_RP__0_;
	}

}

static void ppc_instr_E_STWU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STWU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STWU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STWU_RD__D_LP_RD_RP__x_x_D8)))));
	ppc_mem_write32(PPC_M, EA, PPC_GPR[PPC_E_STWU_RD__D_LP_RD_RP__x_x_rS]);
	if((((uint32_t)(PPC_E_STWU_RD__D_LP_RD_RP__x_x_rA_r)) != 0))
		PPC_GPR[PPC_E_STWU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_STW_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STW_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STW_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STW_RD__D_LP_RD_RP__x_x_D)))));
	ppc_mem_write32(PPC_M, EA, PPC_GPR[PPC_E_STW_RD__D_LP_RD_RP__x_x_rS]);

}

static void ppc_instr_E_STHU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STHU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STHU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STHU_RD__D_LP_RD_RP__x_x_D8)))));
	ppc_mem_write16(PPC_M, EA, ((uint16_t)(PPC_GPR[PPC_E_STHU_RD__D_LP_RD_RP__x_x_rS])));
	if((((uint32_t)(PPC_E_STHU_RD__D_LP_RD_RP__x_x_rA_r)) != 0))
		PPC_GPR[PPC_E_STHU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_STH_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STH_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STH_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STH_RD__D_LP_RD_RP__x_x_D)))));
	ppc_mem_write16(PPC_M, EA, ((uint16_t)(PPC_GPR[PPC_E_STH_RD__D_LP_RD_RP__x_x_rS])));

}

static void ppc_instr_E_STBU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STBU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STBU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STBU_RD__D_LP_RD_RP__x_x_D8)))));
	ppc_mem_write8(PPC_M, EA, ((uint8_t)(PPC_GPR[PPC_E_STBU_RD__D_LP_RD_RP__x_x_rS])));
	if((((uint32_t)(PPC_E_STBU_RD__D_LP_RD_RP__x_x_rA_r)) != 0))
		PPC_GPR[PPC_E_STBU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_STB_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_STB_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_STB_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_STB_RD__D_LP_RD_RP__x_x_D)))));
	ppc_mem_write8(PPC_M, EA, ((uint8_t)(PPC_GPR[PPC_E_STB_RD__D_LP_RD_RP__x_x_rS])));

}

static void ppc_instr_E_SRWIS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (PPC_GPR[PPC_E_SRWIS_RD__RD__D_x_x_rS_idx] >> PPC_E_SRWIS_RD__RD__D_x_x_SH);
	if((((uint32_t)(PPC_E_SRWIS_RD__RD__D_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_SRWIS_RD__RD__D_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_SLWIS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (PPC_GPR[PPC_E_SLWIS_RD__RD__D_x_x_rS_idx] << PPC_E_SLWIS_RD__RD__D_x_x_SH);
	if((((uint32_t)(PPC_E_SLWIS_RD__RD__D_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_SLWIS_RD__RD__D_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_RLWINM_RD__RD__D__D__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t m;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	m = (((1 << (((uint32_t)(__PPC_MASK32(5, (PPC_E_RLWINM_RD__RD__D__D__D_x_x_ME - PPC_E_RLWINM_RD__RD__D__D__D_x_x_MB)))) + 1)) - 1) << (31 - ((uint32_t)(PPC_E_RLWINM_RD__RD__D__D__D_x_x_ME))));
	PPC_GPR[PPC_E_RLWINM_RD__RD__D__D__D_x_x_rA_idx] = ((int32_t)((ppc_rotate_left32(32, PPC_GPR[PPC_E_RLWINM_RD__RD__D__D__D_x_x_rS_idx], PPC_E_RLWINM_RD__RD__D__D__D_x_x_SH) & m)));

}

static void ppc_instr_E_RLWIMI_RD__RD__D__D__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t m;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	m = (((1 << (((uint32_t)(__PPC_MASK32(5, (PPC_E_RLWIMI_RD__RD__D__D__D_x_x_ME - PPC_E_RLWIMI_RD__RD__D__D__D_x_x_MB)))) + 1)) - 1) << (31 - ((uint32_t)(PPC_E_RLWIMI_RD__RD__D__D__D_x_x_ME))));
	PPC_GPR[PPC_E_RLWIMI_RD__RD__D__D__D_x_x_rA_idx] = ((int32_t)(((ppc_rotate_left32(32, PPC_GPR[PPC_E_RLWIMI_RD__RD__D__D__D_x_x_rS_idx], PPC_E_RLWIMI_RD__RD__D__D__D_x_x_SH) & m) | (((uint32_t)(PPC_GPR[PPC_E_RLWIMI_RD__RD__D__D__D_x_x_rA_idx])) & ~m))));

}

static void ppc_instr_E_RLWIS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_rotate_left32(32, PPC_GPR[PPC_E_RLWIS_RD__RD__D_x_x_rS_idx], PPC_E_RLWIS_RD__RD__D_x_x_SH);
	if((((uint32_t)(PPC_E_RLWIS_RD__RD__D_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_RLWIS_RD__RD__D_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_RLWS_RD__RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_rotate_left32(32, PPC_GPR[PPC_E_RLWS_RD__RD__RD_x_x_rS_idx], ppc_field32(PPC_GPR[PPC_E_RLWS_RD__RD__RD_x_x_rB_idx], 4, 0));
	if((((uint32_t)(PPC_E_RLWS_RD__RD__RD_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_RLWS_RD__RD__RD_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_ORIS_RD__RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_ORIS_RD__RD__X_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_ORIS_RD__RD__X_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_ORIS_RD__RD__X_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_ORIS_RD__RD__X_x_x_UI8 << 24))));
	}
	TMP_WORD = (((uint32_t)(PPC_GPR[PPC_E_ORIS_RD__RD__X_x_x_rS_idx])) | __gtmp_0);
	if((((uint32_t)(PPC_E_ORIS_RD__RD__X_x_x_Rc)) == 1)) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_ORIS_RD__RD__X_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_OR2IS_RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_OR2IS_RD__X_x_x_rD_idx] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_E_OR2IS_RD__X_x_x_rD_idx])) | (((uint32_t)(PPC_E_OR2IS_RD__X_x_x_UI)) << 16))));

}

static void ppc_instr_E_OR2I_RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_OR2I_RD__X_x_x_rD_idx] = ((int32_t)((((uint16_t)(((PPC_GPR[PPC_E_OR2I_RD__X_x_x_rD_idx]) &  ((1 << 16) - 1)))) | PPC_E_OR2I_RD__X_x_x_UI)));

}

static void ppc_instr_E_MULL2I_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_MULL2I_RD__D_x_x_rA_idx] = (PPC_GPR[PPC_E_MULL2I_RD__D_x_x_rA_idx] * ((int32_t)(PPC_E_MULL2I_RD__D_x_x_SI)));

}

static void ppc_instr_E_MULLI_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_MULLI_RD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_MULLI_RD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_MULLI_RD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_MULLI_RD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_MULLI_RD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_MULLI_RD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_MULLI_RD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_MULLI_RD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_MULLI_RD__RD__D_x_x_UI8 << 24))));
	}
	PPC_GPR[PPC_E_MULLI_RD__RD__D_x_x_rD_idx] = (PPC_GPR[PPC_E_MULLI_RD__RD__D_x_x_rA_idx] * ((int32_t)(__gtmp_0)));

}

static void ppc_instr_E_MCRF_CRD__CRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[PPC_E_MCRF_CRD__CRD_x_x_crD] = PPC_CR[PPC_E_MCRF_CRD__CRD_x_x_crS];

}

static void ppc_instr_E_LMW_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t r;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LMW_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LMW_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LMW_RD__D_LP_RD_RP__x_x_D8)))));
	r = ((uint32_t)(PPC_E_LMW_RD__D_LP_RD_RP__x_x_rD));
gliss_E_LMW_RD__D_LP_RD_RP__0_:
	if((r <= 31)) {
		PPC_GPR[r] = ppc_mem_read32(PPC_M, EA);
		r = (r + 1);
		EA = (EA + 4);
goto gliss_E_LMW_RD__D_LP_RD_RP__0_;
	}

}

static void ppc_instr_E_LWZU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LWZU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LWZU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LWZU_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LWZU_RD__D_LP_RD_RP__x_x_rD] = ppc_mem_read32(PPC_M, EA);
	PPC_GPR[PPC_E_LWZU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_LWZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LWZ_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LWZ_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LWZ_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LWZ_RD__D_LP_RD_RP__x_x_rD] = ppc_mem_read32(PPC_M, EA);

}

static void ppc_instr_E_LIS_RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_LIS_RD__X_x_x_rD_idx] = (((uint32_t)(PPC_E_LIS_RD__X_x_x_UI)) << 16);

}

static void ppc_instr_E_LI_RD__X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_LI_RD__X_x_x_rD_idx] = ((int32_t)(PPC_E_LI_RD__X_x_x_LI20));

}

static void ppc_instr_E_LHZU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LHZU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LHZU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LHZU_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LHZU_RD__D_LP_RD_RP__x_x_rD] = ((int32_t)(ppc_mem_read16(PPC_M, EA)));
	PPC_GPR[PPC_E_LHZU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_LHZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LHZ_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LHZ_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LHZ_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LHZ_RD__D_LP_RD_RP__x_x_rD] = ((int32_t)(ppc_mem_read16(PPC_M, EA)));

}

static void ppc_instr_E_LHAU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LHAU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LHAU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LHAU_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LHAU_RD__D_LP_RD_RP__x_x_rD] = __PPC_EXTS(16, ((int32_t)(ppc_mem_read16(PPC_M, EA))));
	PPC_GPR[PPC_E_LHAU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_LHA_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LHA_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LHA_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LHA_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LHA_RD__D_LP_RD_RP__x_x_rD] = __PPC_EXTS(16, ((int32_t)(ppc_mem_read16(PPC_M, EA))));

}

static void ppc_instr_E_LBZU_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LBZU_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LBZU_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LBZU_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LBZU_RD__D_LP_RD_RP__x_x_rD] = ((int32_t)(ppc_mem_read8(PPC_M, EA)));
	PPC_GPR[PPC_E_LBZU_RD__D_LP_RD_RP__x_x_rA_r] = ((int32_t)(EA));

}

static void ppc_instr_E_LBZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_E_LBZ_RD__D_LP_RD_RP__x_x_rA_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_E_LBZ_RD__D_LP_RD_RP__x_x_rA_r];
	EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_E_LBZ_RD__D_LP_RD_RP__x_x_D)))));
	PPC_GPR[PPC_E_LBZ_RD__D_LP_RD_RP__x_x_rD] = ((int32_t)(ppc_mem_read8(PPC_M, EA)));

}

static void ppc_instr_E_CRXOR_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) ^ __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 ))), ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRXOR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CRORC_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) | __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 ))), ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRORC_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CROR_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) | ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 )), ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CROR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CRNOR_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], __PPC_MASK32(4, ~(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) | ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 ))), ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNOR_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CRNAND_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], __PPC_MASK32(4, ~(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) & ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 ))), ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRNAND_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CREQV_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) == ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 )), ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CREQV_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CRANDC_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) & __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 ))), ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRANDC_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CRAND_CRBD__CRBD__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbD_i))) >> 2)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbA_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbA_i))) & 3), 1 ) & ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbB_i))) >> 2)], ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbB_i))) & 3), 1 )), ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), ((31 - ((uint32_t)(PPC_E_CRAND_CRBD__CRBD__CRBD_x_x_crbD_i))) & 3), 1);

}

static void ppc_instr_E_CMPLI_CRD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_9;
	uint32_t __gtmp_8;
	uint32_t __gtmp_7;
	uint32_t __gtmp_6;
	uint32_t __gtmp_5;
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_CMPLI_CRD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 24))));
	}
	if((((uint32_t)(PPC_GPR[PPC_E_CMPLI_CRD__RD__D_x_x_rA_idx])) < __gtmp_0))
		PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 3, 3);
	else {
		switch(PPC_E_CMPLI_CRD__RD__D_x_x_SCL) {
		case 0:
			if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_9 = 0xffffff00LU;
			else
				__gtmp_9 = 0;
			__gtmp_5 = (__gtmp_9 | ((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_UI8)));
			break;
		case 1:
			if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_8 = 0xffff00ffLU;
			else
				__gtmp_8 = 0;
			__gtmp_5 = (__gtmp_8 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 8))));
			break;
		case 2:
			if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_7 = 0xff00ffffLU;
			else
				__gtmp_7 = 0;
			__gtmp_5 = (__gtmp_7 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 16))));
			break;
		default:
			if((((uint32_t)(PPC_E_CMPLI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_6 = 16777215LU;
			else
				__gtmp_6 = 0;
			__gtmp_5 = (__gtmp_6 | ((uint32_t)((PPC_E_CMPLI_CRD__RD__D_x_x_UI8 << 24))));
		}
		if((((uint32_t)(PPC_GPR[PPC_E_CMPLI_CRD__RD__D_x_x_rA_idx])) > __gtmp_5))
			PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPLI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPL16I_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_GPR[PPC_E_CMPL16I_RD__D_x_x_rA_idx])) < ((uint32_t)(PPC_E_CMPL16I_RD__D_x_x_UI))))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((((uint32_t)(PPC_GPR[PPC_E_CMPL16I_RD__D_x_x_rA_idx])) > ((uint32_t)(PPC_E_CMPL16I_RD__D_x_x_UI))))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPI_CRD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_9;
	uint32_t __gtmp_8;
	uint32_t __gtmp_7;
	uint32_t __gtmp_6;
	uint32_t __gtmp_5;
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_CMPI_CRD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 24))));
	}
	if((PPC_GPR[PPC_E_CMPI_CRD__RD__D_x_x_rA_idx] < __gtmp_0))
		PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 3, 3);
	else {
		switch(PPC_E_CMPI_CRD__RD__D_x_x_SCL) {
		case 0:
			if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_9 = 0xffffff00LU;
			else
				__gtmp_9 = 0;
			__gtmp_5 = (__gtmp_9 | ((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_UI8)));
			break;
		case 1:
			if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_8 = 0xffff00ffLU;
			else
				__gtmp_8 = 0;
			__gtmp_5 = (__gtmp_8 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 8))));
			break;
		case 2:
			if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_7 = 0xff00ffffLU;
			else
				__gtmp_7 = 0;
			__gtmp_5 = (__gtmp_7 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 16))));
			break;
		default:
			if((((uint32_t)(PPC_E_CMPI_CRD__RD__D_x_x_F)) != 0))
				__gtmp_6 = 16777215LU;
			else
				__gtmp_6 = 0;
			__gtmp_5 = (__gtmp_6 | ((uint32_t)((PPC_E_CMPI_CRD__RD__D_x_x_UI8 << 24))));
		}
		if((PPC_GPR[PPC_E_CMPI_CRD__RD__D_x_x_rA_idx] > __gtmp_5))
			PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32] = ppc_set_field8(PPC_CR[PPC_E_CMPI_CRD__RD__D_x_x_crD32], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPHL16I_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL16I_RD__D_x_x_rA_idx], 15, 0))) < ((uint32_t)(PPC_E_CMPHL16I_RD__D_x_x_UI))))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL16I_RD__D_x_x_rA_idx], 15, 0))) > ((uint32_t)(PPC_E_CMPHL16I_RD__D_x_x_UI))))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPHL_CRD__RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL_CRD__RD__RD_x_x_rA_idx], 15, 0))) < ((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL_CRD__RD__RD_x_x_rB_idx], 15, 0)))))
		PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 3, 3);
	else {
		if((((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL_CRD__RD__RD_x_x_rA_idx], 15, 0))) > ((uint32_t)(ppc_field32(PPC_GPR[PPC_E_CMPHL_CRD__RD__RD_x_x_rB_idx], 15, 0)))))
			PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPHL_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPH16I_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((__PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH16I_RD__D_x_x_rA_idx], 15, 0)))) < ((int32_t)(PPC_E_CMPH16I_RD__D_x_x_SI))))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((__PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH16I_RD__D_x_x_rA_idx], 15, 0)))) > ((int32_t)(PPC_E_CMPH16I_RD__D_x_x_SI))))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMPH_CRD__RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((__PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH_CRD__RD__RD_x_x_rA_idx], 15, 0)))) < __PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH_CRD__RD__RD_x_x_rB_idx], 15, 0))))))
		PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 3, 3);
	else {
		if((__PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH_CRD__RD__RD_x_x_rA_idx], 15, 0)))) > __PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[PPC_E_CMPH_CRD__RD__RD_x_x_rB_idx], 15, 0))))))
			PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD] = ppc_set_field8(PPC_CR[PPC_E_CMPH_CRD__RD__RD_x_x_crD], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_CMP16I_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_E_CMP16I_RD__D_x_x_rA_idx] < PPC_E_CMP16I_RD__D_x_x_SI))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((PPC_GPR[PPC_E_CMP16I_RD__D_x_x_rA_idx] > PPC_E_CMP16I_RD__D_x_x_SI))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_E_BCS_X__X_08X_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t cond_ok;
	uint8_t ctr_ok;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit8(PPC_E_BCS_X__X_08X_x_x_BO32, 1))
		PPC_CTR = (PPC_CTR - 1);
	ctr_ok = !(ppc_bit8(PPC_E_BCS_X__X_08X_x_x_BO32, 1) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_E_BCS_X__X_08X_x_x_BO32, 0)));
	cond_ok = (ppc_bit8(PPC_E_BCS_X__X_08X_x_x_BO32, 1) | ((uint8_t)((ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_E_BCS_X__X_08X_x_x_BI32))) >> 2)], ((31 - ((uint32_t)(PPC_E_BCS_X__X_08X_x_x_BI32))) & 3), ((31 - ((uint32_t)(PPC_E_BCS_X__X_08X_x_x_BI32))) & 3), 1 ) == ((uint8_t)(ppc_bit8(PPC_E_BCS_X__X_08X_x_x_BO32, 0)))))));
	if((ctr_ok && cond_ok))
		PPC_NIA = (PPC_CIA + (((int32_t)(PPC_E_BCS_X__X_08X_x_x_BD15)) << 1));
	if((((uint32_t)(PPC_E_BCS_X__X_08X_x_x_LK)) == 1))
		PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_E_BS_08X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_NIA = (PPC_CIA + (((int32_t)(PPC_E_BS_08X_x_x_BD24)) << 1));
	if((((uint32_t)(PPC_E_BS_08X_x_x_LK)) == 1))
		PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_E_ADDICS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	uint32_t IMM;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_ADDICS_RD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_ADDICS_RD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_x_x_UI8 << 24))));
	}
	IMM = __gtmp_0;
	TMP_WORD = ((uint32_t)((PPC_GPR[PPC_E_ADDICS_RD__RD__D_x_x_rS_idx] + ((int32_t)(IMM)))));
	if(PPC_E_ADDICS_RD__RD__D_x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_ADDICS_RD__RD__D_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_AND2IS__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_GPR[PPC_E_AND2IS__RD__D_x_x_rD_idx])) & (((uint32_t)(ppc_field16(PPC_E_AND2IS__RD__D_x_x_UI, 11, 0))) << 16));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}
	PPC_GPR[PPC_E_AND2IS__RD__D_x_x_rD_idx] = TMP_WORD;

}

static void ppc_instr_E_AND2I__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint16_t)(((PPC_GPR[PPC_E_AND2I__RD__D_x_x_rD_idx]) &  ((1 << 12) - 1)))) & ppc_field16(PPC_E_AND2I__RD__D_x_x_UI, 11, 0));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}
	PPC_GPR[PPC_E_AND2I__RD__D_x_x_rD_idx] = TMP_WORD;

}

static void ppc_instr_E_ADDICS_RD__RD__D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	uint32_t IMM;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_ADDICS_RD__RD__D_0_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_0_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_ADDICS_RD__RD__D_0_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_0_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_0_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_0_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_0_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_ADDICS_RD__RD__D_0_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_ADDICS_RD__RD__D_0_x_x_UI8 << 24))));
	}
	IMM = __gtmp_0;
	TMP_WORD = ((uint32_t)((PPC_GPR[PPC_E_ADDICS_RD__RD__D_0_x_x_rA_idx] + ((int32_t)(IMM)))));
	if(((PPC_GPR[PPC_E_ADDICS_RD__RD__D_0_x_x_rA_idx] >= 0) && (IMM >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_E_ADDICS_RD__RD__D_0_x_x_rA_idx] < 0) && (IMM < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_WORD >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	if(PPC_E_ADDICS_RD__RD__D_0_x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_ADDICS_RD__RD__D_0_x_x_rD_idx] = TMP_WORD;

}

static void ppc_instr_E_ADDIS_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_4;
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	switch(PPC_E_ADDIS_RD__RD__D_x_x_SCL) {
	case 0:
		if((((uint32_t)(PPC_E_ADDIS_RD__RD__D_x_x_F)) != 0))
			__gtmp_4 = 0xffffff00LU;
		else
			__gtmp_4 = 0;
		__gtmp_0 = (__gtmp_4 | ((uint32_t)(PPC_E_ADDIS_RD__RD__D_x_x_UI8)));
		break;
	case 1:
		if((((uint32_t)(PPC_E_ADDIS_RD__RD__D_x_x_F)) != 0))
			__gtmp_3 = 0xffff00ffLU;
		else
			__gtmp_3 = 0;
		__gtmp_0 = (__gtmp_3 | ((uint32_t)((PPC_E_ADDIS_RD__RD__D_x_x_UI8 << 8))));
		break;
	case 2:
		if((((uint32_t)(PPC_E_ADDIS_RD__RD__D_x_x_F)) != 0))
			__gtmp_2 = 0xff00ffffLU;
		else
			__gtmp_2 = 0;
		__gtmp_0 = (__gtmp_2 | ((uint32_t)((PPC_E_ADDIS_RD__RD__D_x_x_UI8 << 16))));
		break;
	default:
		if((((uint32_t)(PPC_E_ADDIS_RD__RD__D_x_x_F)) != 0))
			__gtmp_1 = 16777215LU;
		else
			__gtmp_1 = 0;
		__gtmp_0 = (__gtmp_1 | ((uint32_t)((PPC_E_ADDIS_RD__RD__D_x_x_UI8 << 24))));
	}
	TMP_WORD = ((uint32_t)((PPC_GPR[PPC_E_ADDIS_RD__RD__D_x_x_rA_idx] + ((int32_t)(__gtmp_0)))));
	if(PPC_E_ADDIS_RD__RD__D_x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	PPC_GPR[PPC_E_ADDIS_RD__RD__D_x_x_rD_idx] = TMP_WORD;

}

static void ppc_instr_E_ADD2IS_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_ADD2IS_RD__D_x_x_rA_idx] = (PPC_GPR[PPC_E_ADD2IS_RD__D_x_x_rA_idx] + ((int32_t)((((uint32_t)(PPC_E_ADD2IS_RD__D_x_x_SI)) << 16))));

}

static void ppc_instr_E_ADD2I__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ((uint32_t)((PPC_GPR[PPC_E_ADD2I__RD__D_x_x_rA_idx] + ((int32_t)(PPC_E_ADD2I__RD__D_x_x_SI)))));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}
	PPC_GPR[PPC_E_ADD2I__RD__D_x_x_rA_idx] = TMP_WORD;

}

static void ppc_instr_E_ADD16I_RD__RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_E_ADD16I_RD__RD__D_x_x_rD_idx] = (PPC_GPR[PPC_E_ADD16I_RD__RD__D_x_x_rA_idx] + ((int32_t)(PPC_E_ADD16I_RD__RD__D_x_x_SI)));

}

static void ppc_instr_SE_SUBIS_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx)) + 16);
	TMP_WORD = ((uint32_t)(((PPC_GPR[__gtmp_0] + __PPC_EXTS(27, ((int32_t)(PPC_SE_SUBIS_RD__D_x_x_OIM5)))) + ((int32_t)(1)))));
	if(PPC_SE_SUBIS_RD__D_x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	if((((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SUBIS_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = TMP_WORD;

}

static void ppc_instr_SE_SUBF_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rY_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_SUBF_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (PPC_GPR[__gtmp_0] - PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_SUB_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_SUB_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (PPC_GPR[__gtmp_0] - PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_STW_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + ((int32_t)((((uint32_t)(((PPC_SE_STW_RD__D_LP_RD_RP__x_x_SD4) &  ((1 << 4) - 1)))) << 2))))));
	if((((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_STW_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	ppc_mem_write32(PPC_M, EA, PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_STH_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + ((int32_t)((((uint32_t)(((PPC_SE_STH_RD__D_LP_RD_RP__x_x_SD4) &  ((1 << 4) - 1)))) << 1))))));
	if((((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_STH_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	ppc_mem_write16(PPC_M, EA, PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_STB_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + ((int32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_SD4)))));
	if((((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_STB_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	ppc_mem_write8(PPC_M, EA, PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_SRWI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SRWI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = (((uint32_t)(PPC_GPR[__gtmp_0])) >> PPC_SE_SRWI_RD__D_x_x_UI5);

}

static void ppc_instr_SE_SRW_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_SRW_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (((uint32_t)(PPC_GPR[__gtmp_0])) >> ppc_field32(PPC_GPR[__gtmp_1], 4, 0));

}

static void ppc_instr_SE_SRAWI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SRAWI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((PPC_GPR[__gtmp_0] >> PPC_SE_SRAWI_RD__D_x_x_UI5)));

}

static void ppc_instr_SE_SRAW_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_SRAW_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = ((int32_t)((PPC_GPR[__gtmp_0] >> ppc_field32(PPC_GPR[__gtmp_1], 4, 0))));

}

static void ppc_instr_SE_SLWI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SLWI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((PPC_GPR[__gtmp_0] << PPC_SE_SLWI_RD__D_x_x_UI5)));

}

static void ppc_instr_SE_SLW_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_SLW_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = ((int32_t)((PPC_GPR[__gtmp_0] << ppc_field32(PPC_GPR[__gtmp_1], 4, 0))));

}

static void ppc_instr_SE_SC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	sc_impl("instr", "state", PPC_M);

}

static void ppc_instr_SE_RFI_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);

}

static void ppc_instr_SE_RFDI_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);

}

static void ppc_instr_SE_RFCI_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);

}

static void ppc_instr_SE_OR_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_OR_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_OR_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_OR_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_OR_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = ((int32_t)((PPC_GPR[__gtmp_0] | PPC_GPR[__gtmp_1])));

}

static void ppc_instr_SE_NOT_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_NOT_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ~PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_NEG_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_NEG_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = -PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_MULLW_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_MULLW_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (PPC_GPR[__gtmp_0] * PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_MTLR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MTLR_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MTLR_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MTLR_RD_x_x_rX_idx)) + 16);
	PPC_LR = PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_MTCTR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MTCTR_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MTCTR_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MTCTR_RD_x_x_rX_idx)) + 16);
	PPC_CTR = PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_MTAR_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MTAR_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MTAR_RD__RD_x_x_rY_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MTAR_RD__RD_x_x_rY_idx)) + 16);
	PPC_GPR[(((uint32_t)(PPC_SE_MTAR_RD__RD_x_x_rX_idx)) + 8)] = PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_MR_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MR_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MR_RD__RD_x_x_rY_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MR_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_MR_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_MR_RD__RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_MR_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = PPC_GPR[__gtmp_0];

}

static void ppc_instr_SE_MFLR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MFLR_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MFLR_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MFLR_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_0] = PPC_LR;

}

static void ppc_instr_SE_MFCTR_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MFCTR_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MFCTR_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MFCTR_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_0] = PPC_CTR;

}

static void ppc_instr_SE_MFAR_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_MFAR_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_MFAR_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_MFAR_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_0] = PPC_GPR[(((uint32_t)(PPC_SE_MFAR_RD__RD_x_x_rY_idx)) + 8)];

}

static void ppc_instr_SE_LI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_LI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_LI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_LI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_0] = PPC_SE_LI_RD__D_x_x_UI7;

}

static void ppc_instr_SE_LWZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + __PPC_EXTS(28, ((int32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_SD4))))));
	if((((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_LWZ_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	PPC_GPR[__gtmp_1] = ppc_mem_read32(PPC_M, EA);

}

static void ppc_instr_SE_LHZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + __PPC_EXTS(28, ((int32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_SD4))))));
	if((((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_LHZ_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	PPC_GPR[__gtmp_1] = ppc_mem_read16(PPC_M, EA);

}

static void ppc_instr_SE_LBZ_RD__D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rX_idx)) + 16);
	EA = ((uint32_t)((PPC_GPR[__gtmp_0] + __PPC_EXTS(28, ((int32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_SD4))))));
	if((((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rZ_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rZ_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_LBZ_RD__D_LP_RD_RP__x_x_rZ_idx)) + 16);
	PPC_GPR[__gtmp_1] = ppc_mem_read8(PPC_M, EA);

}

static void ppc_instr_SE_EXTZH_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_EXTZH_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_0])) & 0xffff0000LU)));

}

static void ppc_instr_SE_EXTZB_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_EXTZB_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_0])) & 0xffffff00LU)));

}

static void ppc_instr_SE_EXTSH_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) + 16);
	if(ppc_bit32(PPC_GPR[__gtmp_0], 15)) {
		if((((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) < 8))
			__gtmp_1 = ((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx));
		else
			__gtmp_1 = (((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) + 16);
		if((((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) < 8))
			__gtmp_2 = ((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx));
		else
			__gtmp_2 = (((uint32_t)(PPC_SE_EXTSH_RD_x_x_rX_idx)) + 16);
		PPC_GPR[__gtmp_2] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_1])) | 0xffff0000LU)));
	}

}

static void ppc_instr_SE_EXTSB_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) + 16);
	if(ppc_bit32(PPC_GPR[__gtmp_0], 7)) {
		if((((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) < 8))
			__gtmp_1 = ((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx));
		else
			__gtmp_1 = (((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) + 16);
		if((((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) < 8))
			__gtmp_2 = ((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx));
		else
			__gtmp_2 = (((uint32_t)(PPC_SE_EXTSB_RD_x_x_rX_idx)) + 16);
		PPC_GPR[__gtmp_2] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_1])) | 0xffffff00LU)));
	}

}

static void ppc_instr_SE_CMPLI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_GPR[__gtmp_0])) < ((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_OIM5))))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx)) < 8))
			__gtmp_1 = ((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx));
		else
			__gtmp_1 = (((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_rX_idx)) + 16);
		if((((uint32_t)(PPC_GPR[__gtmp_1])) > ((uint32_t)(PPC_SE_CMPLI_RD__D_x_x_OIM5))))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_SE_CMPL_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_3;
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_GPR[__gtmp_0])) < ((uint32_t)(PPC_GPR[__gtmp_1]))))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx)) < 8))
			__gtmp_2 = ((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx));
		else
			__gtmp_2 = (((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rX_idx)) + 16);
		if((((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx)) < 8))
			__gtmp_3 = ((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx));
		else
			__gtmp_3 = (((uint32_t)(PPC_SE_CMPL_RD__RD_x_x_rY_idx)) + 16);
		if((((uint32_t)(PPC_GPR[__gtmp_2])) > ((uint32_t)(PPC_GPR[__gtmp_3]))))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
	}

}

static void ppc_instr_SE_CMPI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMPI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMPI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMPI_RD__D_x_x_rX_idx)) + 16);
	TMP_WORD = ((uint32_t)((PPC_GPR[__gtmp_0] - __PPC_EXTS(27, ((int32_t)(PPC_SE_CMPI_RD__D_x_x_UI5))))));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}

}

static void ppc_instr_SE_CMPHL_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_CMPHL_RD__RD_x_x_rY_idx)) + 16);
	TMP_WORD = (((uint32_t)(ppc_field32(PPC_GPR[__gtmp_0], 15, 0))) - ((uint32_t)(ppc_field32(PPC_GPR[__gtmp_1], 15, 0))));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}

}

static void ppc_instr_SE_CMPH_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_CMPH_RD__RD_x_x_rY_idx)) + 16);
	TMP_WORD = ((uint32_t)((__PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[__gtmp_0], 15, 0)))) - __PPC_EXTS(16, ((int32_t)(ppc_field32(PPC_GPR[__gtmp_1], 15, 0)))))));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}

}

static void ppc_instr_SE_CMP_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_CMP_RD__RD_x_x_rY_idx)) + 16);
	TMP_WORD = ((uint32_t)((PPC_GPR[__gtmp_0] - PPC_GPR[__gtmp_1])));
	if((TMP_WORD < 0))
		PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
	else {
		if((TMP_WORD == 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
		else
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
	}

}

static void ppc_instr_SE_BTSTI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_BTSTI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_BTSTI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_BTSTI_RD__D_x_x_rX_idx)) + 16);
	if((PPC_GPR[__gtmp_0] & ((uint32_t)(((1 << (31 - ((uint32_t)(PPC_SE_BTSTI_RD__D_x_x_UI5)))) == 0)))))
		PPC_CR[0] = 2;
	else
		PPC_CR[0] = 4;

}

static void ppc_instr_SE_BSETI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_BSETI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_0])) | (1 << (31 - ((uint32_t)(PPC_SE_BSETI_RD__D_x_x_UI5)))))));

}

static void ppc_instr_SE_BMSKI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_UI5)) == 0)) {
		if((((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx)) < 8))
			__gtmp_1 = ((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx));
		else
			__gtmp_1 = (((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx)) + 16);
		PPC_GPR[__gtmp_1] = 0xffffffffLU;
	}
	else {
		if((((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx)) < 8))
			__gtmp_0 = ((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx));
		else
			__gtmp_0 = (((uint32_t)(PPC_SE_BMSKI_RD__D_x_x_rX_idx)) + 16);
		PPC_GPR[__gtmp_0] = ((1 << PPC_SE_BMSKI_RD__D_x_x_UI5) - 1);
	}

}

static void ppc_instr_BLRS_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	PPC_NIA = (PPC_LR & ~3);
	if(PPC_BLRS_x_x_LK)
		PPC_LR = (PPC_CIA + 2);

}

static void ppc_instr_BGENI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_BGENI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_0])) | (1 << (31 - ((uint32_t)(PPC_BGENI_RD__D_x_x_UI5)))))));

}

static void ppc_instr_SE_BCTRS_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	PPC_NIA = (PPC_CTR << 1);
	if(PPC_SE_BCTRS_x_x_LK)
		PPC_LR = (PPC_CIA + 2);

}

static void ppc_instr_BCLRI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_BCLRI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint32_t)(PPC_GPR[__gtmp_0])) & ~(1 << (31 - ((uint32_t)(PPC_BCLRI_RD__D_x_x_UI5)))))));

}

static void ppc_instr_SE_BC_X__X__08X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((ppc_field8_generic(PPC_CR[0], (3 - ((uint32_t)(PPC_SE_BC_X__X__08X_x_x_BI16))), (3 - ((uint32_t)(PPC_SE_BC_X__X__08X_x_x_BI16))), 1 ) == ((uint8_t)(PPC_SE_BC_X__X__08X_x_x_BO16))))
		PPC_NIA = (PPC_CIA + (((int32_t)(PPC_SE_BC_X__X__08X_x_x_BD8)) << 1));

}

static void ppc_instr_SE_BS_08X_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	PPC_NIA = (PPC_CIA + (((int32_t)(PPC_SE_BS_08X_x_x_BD8)) << 1));
	if(PPC_SE_BS_08X_x_x_LK)
		PPC_LR = (PPC_CIA + 2);

}

static void ppc_instr_SE_ANDC_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_ANDC_RD__RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (PPC_GPR[__gtmp_0] + PPC_GPR[__gtmp_1]);

}

static void ppc_instr_SE_ANDI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_ANDI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((int32_t)((((uint8_t)(((PPC_GPR[__gtmp_0]) &  ((1 << 5) - 1)))) & PPC_SE_ANDI_RD__D_x_x_UI5)));

}

static void ppc_instr_E_ANDS_RD__RD__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rY_idx)) + 16);
	TMP_WORD = (PPC_GPR[__gtmp_0] & PPC_GPR[__gtmp_1]);
	if(PPC_E_ANDS_RD__RD__x_x_Rc) {
		if((TMP_WORD < 0))
			PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 3, 3);
		else {
			if((TMP_WORD == 0))
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 1, 1);
			else
				PPC_CR[0] = ppc_set_field8(PPC_CR[0], ((uint8_t)(1)), 2, 2);
		}
	}
	if((((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_E_ANDS_RD__RD__x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = TMP_WORD;

}

static void ppc_instr_SE_ADDI_RD__D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_ADDI_RD__D_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_1] = ((PPC_GPR[__gtmp_0] + __PPC_EXTS(27, ((int32_t)(PPC_SE_ADDI_RD__D_x_x_OIM5)))) + ((int32_t)(1)));

}

static void ppc_instr_SE_ADD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	uint32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 2);
	if((((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx)) < 8))
		__gtmp_0 = ((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx));
	else
		__gtmp_0 = (((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx)) + 16);
	if((((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rY_idx)) < 8))
		__gtmp_1 = ((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rY_idx));
	else
		__gtmp_1 = (((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rY_idx)) + 16);
	if((((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx)) < 8))
		__gtmp_2 = ((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx));
	else
		__gtmp_2 = (((uint32_t)(PPC_SE_ADD_RD_RD_x_x_rX_idx)) + 16);
	PPC_GPR[__gtmp_2] = (PPC_GPR[__gtmp_0] + PPC_GPR[__gtmp_1]);

}

static void ppc_instr_MFAPIDI_RD__RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else {
		TMP_EA = PPC_GPR[PPC_MFAPIDI_RD__RD_x_x_ra_r];
		PPC_GPR[PPC_MFAPIDI_RD__RD_x_x_rd_r] = TMP_WORD;
	}

}

static void ppc_instr_TLBSYNC_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);

}

static void ppc_instr_TLBIE_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);

}

static void ppc_instr_TLBIA_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);

}

static void ppc_instr_RFI_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else {
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_bit32(PPC_SRR[1], 31))), 31, 31);
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_field32(PPC_SRR[1], 26, 22))), 26, 22);
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_field32(PPC_SRR[1], 15, 8))), 15, 8);
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_field32(PPC_SRR[1], 6, 4))), 6, 4);
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_field32(PPC_SRR[1], 1, 0))), 1, 0);
		PPC_MSR = ppc_set_field32(PPC_MSR, ((uint32_t)(ppc_bit32(PPC_SRR[1], 18))), 18, 18);
		PPC_NIA = (PPC_SRR[0] & 0xfffffffcLU);
	}

}

static void ppc_instr_MTSRIN_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_SR[ppc_field32(PPC_GPR[PPC_MTSRIN_RD_RD_x_x_x_rb_r], 31, 28)] = PPC_GPR[PPC_MTSRIN_RD_RD_x_x_x_rs_r];

}

static void ppc_instr_MTSR_D_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_SR[PPC_MTSR_D_RD_x_x_x_sr] = PPC_GPR[PPC_MTSR_D_RD_x_x_x_rd_r];

}

static void ppc_instr_MFSRIN_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_GPR[PPC_MFSRIN_RD_RD_x_x_x_rd_r] = PPC_SR[ppc_field32(PPC_GPR[PPC_MFSRIN_RD_RD_x_x_x_rb_r], 31, 28)];

}

static void ppc_instr_MFSR_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_GPR[PPC_MFSR_RD_D_x_x_x_rd_r] = PPC_SR[PPC_MFSR_RD_D_x_x_x_sr];

}

static void ppc_instr_MTSPR_D_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else {
		TMP_HWORD = ((uint16_t)(PPC_MTSPR_D_RD_0_x_x_x_spr));
		TMP_WORD = 0;
		TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
		TMP_WORD = (TMP_WORD << 5);
		TMP_WORD = ((TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15)) | 16);
		switch(TMP_WORD) {
		case 1022LU:
			PPC_THRM[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1021LU:
			PPC_THRM[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1020LU:
			PPC_THRM[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1019LU:
			PPC_ICTC = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1017LU:
			PPC_L2CR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1016LU:
			PPC_L2PM = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1013LU:
			PPC_DABR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1011LU:
			PPC_HID[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1010LU:
			PPC_IABR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1009LU:
			PPC_HID[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1008LU:
			PPC_HID[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 982LU:
			PPC_RPA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 981LU:
			PPC_ICMP = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 980LU:
			PPC_IMISS = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 979LU:
			PPC_HASH[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 978LU:
			PPC_HASH[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 977LU:
			PPC_DCMP = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 976LU:
			PPC_DMISS = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 958LU:
			PPC_PMC[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 957LU:
			PPC_PMC[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 956LU:
			PPC_MMCR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 955LU:
			PPC_SIA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 954LU:
			PPC_PMC[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 953LU:
			PPC_PMC[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 952LU:
			PPC_MMCR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 942LU:
			PPC_UPMC[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 941LU:
			PPC_UPMC[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 940LU:
			PPC_UMMCR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 939LU:
			PPC_USIA = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 938LU:
			PPC_UPMC[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 937LU:
			PPC_UPMC[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 936LU:
			PPC_UMMCR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 575LU:
			PPC_DBAT[15] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 574LU:
			PPC_DBAT[14] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 573LU:
			PPC_DBAT[13] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 572LU:
			PPC_DBAT[12] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 571LU:
			PPC_DBAT[11] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 570LU:
			PPC_DBAT[10] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 569LU:
			PPC_DBAT[9] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 568LU:
			PPC_DBAT[8] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 567LU:
			PPC_IBAT[15] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 566LU:
			PPC_IBAT[14] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 565LU:
			PPC_IBAT[13] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 564LU:
			PPC_IBAT[12] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 563LU:
			PPC_IBAT[11] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 562LU:
			PPC_IBAT[10] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 561LU:
			PPC_IBAT[9] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 560LU:
			PPC_IBAT[8] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 543LU:
			PPC_DBAT[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 542LU:
			PPC_DBAT[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 541LU:
			PPC_DBAT[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 540LU:
			PPC_DBAT[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 539LU:
			PPC_DBAT[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 538LU:
			PPC_DBAT[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 537LU:
			PPC_DBAT[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 536LU:
			PPC_DBAT[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 535LU:
			PPC_IBAT[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 534LU:
			PPC_IBAT[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 533LU:
			PPC_IBAT[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 532LU:
			PPC_IBAT[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 531LU:
			PPC_IBAT[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 530LU:
			PPC_IBAT[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 529LU:
			PPC_IBAT[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 528LU:
			PPC_IBAT[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 287LU:
			PPC_PVR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 285LU:
			PPC_TB = ppc_set_field32(PPC_TB, ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs])), 63, (63 - (32 - 1)));
			break;
		case 284LU:
			PPC_TB = ppc_set_field32(PPC_TB, ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs])), 31, (31 - (32 - 1)));
			break;
		case 282LU:
			PPC_EAR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 279LU:
			PPC_SPRG[7] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 278LU:
			PPC_SPRG[6] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 277LU:
			PPC_SPRG[5] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 276LU:
			PPC_SPRG[4] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 275LU:
			PPC_SPRG[3] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 274LU:
			PPC_SPRG[2] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 273LU:
			PPC_SPRG[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 272LU:
			PPC_SPRG[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 27:
			PPC_SRR[1] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 26:
			PPC_SRR[0] = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 25:
			PPC_SDR1 = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 22:
			PPC_DEC = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 19:
			PPC_DAR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 18:
			PPC_DSISR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 9:
			PPC_CTR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 8:
			PPC_LR = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		case 1:
			PPC_XER = ((uint32_t)(PPC_GPR[PPC_MTSPR_D_RD_0_x_x_x_rs]));
			break;
		}
	}

}

static void ppc_instr_MTMSR_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_MSR = PPC_GPR[PPC_MTMSR_RD_0_x_x_x_rs_r];

}

static void ppc_instr_MFSPR_RD_D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else {
		TMP_HWORD = ((uint16_t)(PPC_MFSPR_RD_D_0_x_x_x_spr));
		TMP_WORD = 0;
		TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
		TMP_WORD = (TMP_WORD << 5);
		TMP_WORD = ((TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15)) | 16);
		switch(TMP_WORD) {
		case 1022LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_THRM[2]));
			break;
		case 1021LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_THRM[1]));
			break;
		case 1020LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_THRM[0]));
			break;
		case 1019LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_ICTC));
			break;
		case 1017LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_L2CR));
			break;
		case 1016LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_L2PM));
			break;
		case 1013LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DABR));
			break;
		case 1011LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_HID[2]));
			break;
		case 1010LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IABR));
			break;
		case 1009LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_HID[1]));
			break;
		case 1008LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_HID[0]));
			break;
		case 982LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_RPA));
			break;
		case 981LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_ICMP));
			break;
		case 980LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IMISS));
			break;
		case 979LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_HASH[2]));
			break;
		case 978LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_HASH[1]));
			break;
		case 977LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DCMP));
			break;
		case 976LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DMISS));
			break;
		case 958LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_PMC[3]));
			break;
		case 957LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_PMC[2]));
			break;
		case 956LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_MMCR[1]));
			break;
		case 955LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SIA));
			break;
		case 954LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_PMC[1]));
			break;
		case 953LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_PMC[0]));
			break;
		case 952LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_MMCR[0]));
			break;
		case 942LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UPMC[3]));
			break;
		case 941LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UPMC[2]));
			break;
		case 940LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UMMCR[1]));
			break;
		case 939LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_USIA));
			break;
		case 938LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UPMC[1]));
			break;
		case 937LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UPMC[0]));
			break;
		case 936LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_UMMCR[0]));
			break;
		case 575LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[15]));
			break;
		case 574LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[14]));
			break;
		case 573LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[13]));
			break;
		case 572LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[12]));
			break;
		case 571LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[11]));
			break;
		case 570LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[10]));
			break;
		case 569LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[9]));
			break;
		case 568LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[8]));
			break;
		case 567LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[15]));
			break;
		case 566LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[14]));
			break;
		case 565LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[13]));
			break;
		case 564LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[12]));
			break;
		case 563LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[11]));
			break;
		case 562LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[10]));
			break;
		case 561LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[9]));
			break;
		case 560LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[8]));
			break;
		case 543LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[7]));
			break;
		case 542LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[6]));
			break;
		case 541LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[5]));
			break;
		case 540LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[4]));
			break;
		case 539LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[3]));
			break;
		case 538LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[2]));
			break;
		case 537LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[1]));
			break;
		case 536LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DBAT[0]));
			break;
		case 535LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[7]));
			break;
		case 534LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[6]));
			break;
		case 533LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[5]));
			break;
		case 532LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[4]));
			break;
		case 531LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[3]));
			break;
		case 530LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[2]));
			break;
		case 529LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[1]));
			break;
		case 528LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_IBAT[0]));
			break;
		case 287LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_PVR));
			break;
		case 282LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_EAR));
			break;
		case 279LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[7]));
			break;
		case 278LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[6]));
			break;
		case 277LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[5]));
			break;
		case 276LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[4]));
			break;
		case 275LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[3]));
			break;
		case 274LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[2]));
			break;
		case 273LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[1]));
			break;
		case 272LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SPRG[0]));
			break;
		case 269LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(ppc_field32(PPC_TB, 63, (63 - (32 - 1)))));
			break;
		case 268LU:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(ppc_field32(PPC_TB, 31, (31 - (32 - 1)))));
			break;
		case 27:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SRR[1]));
			break;
		case 26:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SRR[0]));
			break;
		case 25:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_SDR1));
			break;
		case 22:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DEC));
			break;
		case 19:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DAR));
			break;
		case 18:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_DSISR));
			break;
		case 9:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_CTR));
			break;
		case 8:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_LR));
			break;
		case 1:
			PPC_GPR[PPC_GPR[PPC_MFSPR_RD_D_0_x_x_x_rd_r]] = ((int32_t)(PPC_XER));
			break;
		}
	}

}

static void ppc_instr_MFMSR_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 14))
		launch_exception("instr", 6);
	else
		PPC_GPR[PPC_MFMSR_RD_0_x_x_x_rd_r] = PPC_MSR;

}

static void ppc_instr_MFTB_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MFTB_RD_D_x_x_tbr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD = (TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 9, 5))) & 31));
	if((TMP_WORD == 268LU))
		PPC_GPR[PPC_MFTB_RD_D_x_x_rd] = ((int32_t)(ppc_field32(PPC_TB, 31, (31 - (32 - 1)))));
	else {
		if((TMP_WORD == 269LU))
			PPC_GPR[PPC_MFTB_RD_D_x_x_rd] = ((int32_t)(ppc_field32(PPC_TB, 63, (63 - (32 - 1)))));
	}

}

static void ppc_instr_ISYNC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_EIEIO_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_ECOWX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_ECIWX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_ICBI_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_ICBI_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_ICBI_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_ICBI_RD_RD_0_x_x_rb_r])));

}

static void ppc_instr_DCBZ_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_WORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBZ_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBZ_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBZ_RD_RD_0_x_x_rb_r])));
	TMP_WORD = (TMP_EA - (TMP_EA % 32));
	TMP_SWORD = ((int32_t)(0));
gliss_DCBZ_RD_RD_0_0_:
	if((TMP_SWORD < ((int32_t)(32)))) {
		ppc_mem_write8(PPC_M, (((int32_t)(TMP_WORD)) + TMP_SWORD), ((uint8_t)(0)));
		TMP_SWORD = (TMP_SWORD + ((int32_t)(1)));
goto gliss_DCBZ_RD_RD_0_0_;
	}

}

static void ppc_instr_DCBTST_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBTST_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBTST_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBTST_RD_RD_0_x_x_rb_r])));

}

static void ppc_instr_DCBT_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBT_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBT_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBT_RD_RD_0_x_x_rb_r])));

}

static void ppc_instr_DCBST_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBST_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBST_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBST_RD_RD_0_x_x_rb_r])));

}

static void ppc_instr_DCBI_RD__RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBI_RD__RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBI_RD__RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBI_RD__RD_0_x_x_rb_r])));
	InvalidateDataCacheBlock(TMP_EA);

}

static void ppc_instr_DCBF_RD__RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBF_RD__RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBF_RD__RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBF_RD__RD_0_x_x_rb_r])));
	FlushDataCacheBlock(TMP_EA);

}

static void ppc_instr_DCBA_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_DCBA_RD_RD_0_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_DCBA_RD_RD_0_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_DCBA_RD_RD_0_x_x_rb_r])));

}

static void ppc_instr_MTFSFI__CRFD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		TMP_WORD = (31 - (((uint32_t)(PPC_MTFSFI__CRFD_D_x_x_x_crf)) * 4));
		TMP_WORD1 = ((uint32_t)(PPC_MTFSFI__CRFD_D_x_x_x_imm));
		if((TMP_WORD == 31)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_bit32(TMP_WORD1, 3))), 31, 31);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_bit32(TMP_WORD1, 0))), 28, 28);
		}
		else {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, ((uint32_t)(ppc_field32(TMP_WORD1, 3, 0))), TMP_WORD, (TMP_WORD - 3), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSFI_CRFD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		TMP_WORD = (31 - (((uint32_t)(PPC_MTFSFI_CRFD_D_x_x_x_crf)) * 4));
		TMP_WORD1 = ((uint32_t)(PPC_MTFSFI_CRFD_D_x_x_x_imm));
		if((TMP_WORD == 31)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_bit32(TMP_WORD1, 3))), 31, 31);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_bit32(TMP_WORD1, 0))), 28, 28);
		}
		else {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, ((uint32_t)(ppc_field32(TMP_WORD1, 3, 0))), TMP_WORD, (TMP_WORD - 3), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSF__D_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13))
		;
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSF_D_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13))
		;
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSB1__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if(((((uint32_t)(PPC_MTFSB1__CRBD_x_x_x_crbd)) != 2) & (((uint32_t)(PPC_MTFSB1__CRBD_x_x_x_crbd)) != 1))) {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, 1, (31 - ((uint32_t)(PPC_MTFSB1__CRBD_x_x_x_crbd))), (31 - ((uint32_t)(PPC_MTFSB1__CRBD_x_x_x_crbd))), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSB1_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if(((((uint32_t)(PPC_MTFSB1_CRBD_x_x_x_crbd)) != 2) & (((uint32_t)(PPC_MTFSB1_CRBD_x_x_x_crbd)) != 1))) {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, 1, (31 - ((uint32_t)(PPC_MTFSB1_CRBD_x_x_x_crbd))), (31 - ((uint32_t)(PPC_MTFSB1_CRBD_x_x_x_crbd))), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSB0__CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if(((((uint32_t)(PPC_MTFSB0__CRBD_x_x_x_crbd)) != 2) & (((uint32_t)(PPC_MTFSB0__CRBD_x_x_x_crbd)) != 1))) {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, 0, (31 - ((uint32_t)(PPC_MTFSB0__CRBD_x_x_x_crbd))), (31 - ((uint32_t)(PPC_MTFSB0__CRBD_x_x_x_crbd))), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MTFSB0_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if(((((uint32_t)(PPC_MTFSB0_CRBD_x_x_x_crbd)) != 2) & (((uint32_t)(PPC_MTFSB0_CRBD_x_x_x_crbd)) != 1))) {
			PPC_FPSCR = ppc_set_field32_generic(PPC_FPSCR, 0, (31 - ((uint32_t)(PPC_MTFSB0_CRBD_x_x_x_crbd))), (31 - ((uint32_t)(PPC_MTFSB0_CRBD_x_x_x_crbd))), 1);
			if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 0))
				fpi_setround(FPI_TONEAREST);
			else {
				if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 1))
					fpi_setround(FPI_TOWARDZERO);
				else {
					if((((uint32_t)(ppc_field32(PPC_FPSCR, 1, 0))) == 2))
						fpi_setround(FPI_UPWARD);
					else
						fpi_setround(FPI_DOWNWARD);
				}
			}
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_OVERFLOW);
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_UNDERFLOW);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FP_CLEAR = (PPC_FP_CLEAR | FPI_INEXACT);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MFFS__FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_MFFS__FRD_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_MFFS__FRD_x_x_x_frd], ((uint64_t)(PPC_FPSCR)), 31, 0);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MFFS_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13))
		PPC_FPR[PPC_MFFS_FRD_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_MFFS_FRD_x_x_x_frd], ((uint64_t)(PPC_FPSCR)), 31, 0);
	else
		launch_exception("instr", 7);

}

static void ppc_instr_MCRFS_CRFD_CRFD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_CR[(7 - ((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfd)))] = ((uint8_t)(ppc_field32_generic(PPC_FPSCR, (31 - (4 * ((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)))), (28 - (4 * ((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)))), 1 )));
		if((((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)) == 0)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 31, 31);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 28, 28);
		}
		if((((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)) == 1))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 27, 24);
		if((((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)) == 2))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 23, 20);
		if((((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)) == 3))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 19, 19);
		if((((uint32_t)(PPC_MCRFS_CRFD_CRFD_x_x_x_crfs)) == 5))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 10, 8);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCTIWZ__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_setround(FPI_TOWARDZERO);
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		TMP_SWORD = ((int32_t)(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], ((uint64_t)(TMP_SWORD)), 31, 0);
		PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 32);
		if(ppc_bit32(PPC_FPSCR, 28)) {
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			else {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 25)) {
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 27)) {
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ__FRD_FRD_x_x_x_x_frb], 51))) == 0)))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 8, 8);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCTIWZ_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_setround(FPI_TOWARDZERO);
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		TMP_SWORD = ((int32_t)(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], ((uint64_t)(TMP_SWORD)), 31, 0);
		PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 32);
		if(ppc_bit32(PPC_FPSCR, 28)) {
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			else {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 25)) {
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 27)) {
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIWZ_FRD_FRD_x_x_x_x_frb], 51))) == 0)))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 8, 8);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCTIW__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		TMP_SWORD = ((int32_t)(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], ((uint64_t)(TMP_SWORD)), 31, 0);
		PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 32);
		if(ppc_bit32(PPC_FPSCR, 28)) {
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			else {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 25)) {
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 27)) {
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW__FRD_FRD_x_x_x_x_frb], 51))) == 0)))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 8, 8);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCTIW_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		TMP_SWORD = ((int32_t)(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], ((uint64_t)(TMP_SWORD)), 31, 0);
		PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 32);
		if(ppc_bit32(PPC_FPSCR, 28)) {
			if(ppc_bit32(PPC_FPSCR, 6))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			else {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 25)) {
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 27)) {
			if(ppc_bit32(PPC_FPSCR, 5))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCTIW_FRD_FRD_x_x_x_x_frb], 51))) == 0)))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 8, 8);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FRSP__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FRSP__FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FRSP_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frb]));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FRSP_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29))
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNABS__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FNABS__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNABS__FRD_FRD_x_x_x_x_frd], ((uint64_t)(1)), 63, 63);
		PPC_FPR[PPC_FNABS__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNABS__FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FNABS__FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNABS_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FNABS_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNABS_FRD_FRD_x_x_x_x_frd], ((uint64_t)(1)), 63, 63);
		PPC_FPR[PPC_FNABS_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNABS_FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FNABS_FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FABS__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FABS__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FABS__FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 63);
		PPC_FPR[PPC_FABS__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FABS__FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FABS__FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FABS_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FABS_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FABS_FRD_FRD_x_x_x_x_frd], ((uint64_t)(0)), 63, 63);
		PPC_FPR[PPC_FABS_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FABS_FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FABS_FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNEG__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frd], ((uint64_t)(__PPC_MASK32(1, ~ppc_bitd(PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frb], 63)))), 63, 63);
		PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FNEG__FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNEG_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frd], ((uint64_t)(__PPC_MASK32(1, ~ppc_bitd(PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frb], 63)))), 63, 63);
		PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frd], ((uint64_t)(ppc_fieldd(PPC_FPR[PPC_FNEG_FRD_FRD_x_x_x_x_frb], 62, 0))), 62, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMR__FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_FMR__FRD_FRD_x_x_x_x_frd] = PPC_FPR[PPC_FMR__FRD_FRD_x_x_x_x_frb];
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
		PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMR_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13))
		PPC_FPR[PPC_FMR_FRD_FRD_x_x_x_x_frd] = PPC_FPR[PPC_FMR_FRD_FRD_x_x_x_x_frb];
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCMPU_CRFD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) || ((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0))))))
			TMP_BYTE = ((uint8_t)(1));
		else {
			if((PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra] < PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb]))
				TMP_BYTE = ((uint8_t)(8));
			else {
				if((PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra] > PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb]))
					TMP_BYTE = ((uint8_t)(4));
				else
					TMP_BYTE = ((uint8_t)(2));
			}
		}
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_field8(TMP_BYTE, 3, 0))), 15, 12);
		PPC_CR[(7 - ((uint32_t)(PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_crfd)))], ppc_field8(TMP_BYTE, 3, 0), 3, 0);
		if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPU_CRFD_FRD_FRD_x_x_x_x_frb], 51))) == 0)))) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FCMPO_CRFD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) || ((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0))))))
			TMP_BYTE = ((uint8_t)(1));
		else {
			if((PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra] < PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb]))
				TMP_BYTE = ((uint8_t)(8));
			else {
				if((PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra] > PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb]))
					TMP_BYTE = ((uint8_t)(4));
				else
					TMP_BYTE = ((uint8_t)(2));
			}
		}
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(ppc_field8(TMP_BYTE, 3, 0))), 15, 12);
		PPC_CR[(7 - ((uint32_t)(PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_crfd)))], ppc_field8(TMP_BYTE, 3, 0), 3, 0);
		if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 51))) == 0)))) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if((((uint32_t)(ppc_bit32(PPC_FPSCR, 7))) == 0))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 19, 19);
		}
		if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_fra], 51))) == 1)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FCMPO_CRFD_FRD_FRD_x_x_x_x_frb], 51))) == 1)))) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 19, 19);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMSUBS__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(-((PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMSUBS_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(-((PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMSUB__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = -((PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMSUB_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = -((PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			launch_exception("instr", 6);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMSUBS__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(((PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMSUBS_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(((PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUBS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMSUB__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = ((PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMSUB_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = ((PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc]) - PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMSUB_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMADDS__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(-((PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMADDS_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(-((PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMADD__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = -((PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FNMADD_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = -((PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FNMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMADDS__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(((PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMADDS_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)(((PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADDS_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMADD__FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = ((PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD__FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMADD_FRD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = ((PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc]) + PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if((((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else {
				if(((((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) || (((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0)))) || (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) == ((uint64_t)(0))))) && (((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMADD_FRD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) == ((uint64_t)(0)))))))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
				else
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
			}
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FDIVS__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_fra] / PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FDIVS_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_fra] / PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIVS_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FDIV__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_fra] / PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FDIV_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_fra] / PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FDIV_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMULS__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frc])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS__FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMULS_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frc])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMULS_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMUL__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frc]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL__FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FMUL_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_fra] * PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frc]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frc], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frc], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FMUL_FRD_FRD_FRD_x_x_x_x_frc], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 20, 20);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FSUBS__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_fra] - PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FSUBS_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_fra] - PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUBS_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FSUB__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_fra] - PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FSUB_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_fra] - PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FSUB_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FADDS__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_fra] + PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FADDS_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOTS = ((float)((PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_fra] + PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frb])));
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frd] = ((double)(PPC_TMP_FLOTS));
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADDS_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FADD__FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_fra] + PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD__FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
		else {
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 3))), 3, 3);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 2))), 2, 2);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 1))), 1, 1);
			PPC_CR[6] = ppc_set_field8(PPC_CR[6], ((uint8_t)(ppc_bit32(PPC_FPSCR, 0))), 0, 0);
		}
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_FADD_FRD_FRD_FRD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		fpi_clearexcept(PPC_FP_CLEAR);
		PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 30, 30);
		PPC_TMP_FLOT = (PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_fra] + PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frb]);
		if(fpi_testexcept(FPI_INEXACT)) {
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
			PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
			if(ppc_bit32(PPC_FPSCR, 3))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
		}
		if(fpi_testexcept((((FPI_DIVBYZERO | FPI_UNDERFLOW) | FPI_OVERFLOW) | FPI_INVALID))) {
			if(fpi_testexcept(FPI_DIVBYZERO)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 26, 26);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 4))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_UNDERFLOW)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 27, 27);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				if(ppc_bit32(PPC_FPSCR, 5))
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
			}
			if(fpi_testexcept(FPI_INVALID)) {
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 29, 29);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 18, 18);
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 0, 17, 17);
				if(ppc_bit32(PPC_FPSCR, 7)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd] = ppc_set_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 0x7ff8000000000000LLU, 63, 0);
					if((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51))) == 1))) {
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(17)), 16, 12);
					}
					else {
						if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 2047LU)) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(9)), 16, 12);
						}
						else {
							if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
								PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(8)), 16, 12);
							}
							else {
								if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
									PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(24)), 16, 12);
								}
								else {
									if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 1) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
										PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(18)), 16, 12);
									}
									else {
										if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) == ((uint64_t)(0))))) {
											PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(2)), 16, 12);
										}
										else {
											if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) == 0)) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 51, 0) != ((uint64_t)(0))))) {
												PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(20)), 16, 12);
											}
											else {
												if((((((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 63))) == 0) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) > 0)) && (((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd], 62, 52))) < 2047LU))) {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(4)), 16, 12);
												}
												else {
													PPC_FPSCR = ppc_set_field32(PPC_FPSCR, ((uint32_t)(13)), 16, 12);
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if(fpi_testexcept(FPI_OVERFLOW)) {
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 28, 28);
					PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 12, 12);
					if(ppc_bit32(PPC_FPSCR, 6))
						PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 30, 30);
					else {
						if(((((uint32_t)(ppc_bit32(PPC_MSR, 11))) != 0) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) != 0))) {
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 25, 25);
							PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 17, 17);
						}
					}
				}
			}
		}
		if(!((ppc_bit32(PPC_FPSCR, 30) && (((uint32_t)(ppc_bit32(PPC_MSR, 11))) == 0)) && (((uint32_t)(ppc_bit32(PPC_MSR, 8))) == 0)))
			PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frd] = PPC_TMP_FLOT;
		if(ppc_bit32(PPC_FPSCR, 29)) {
			if(((((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_fra], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_fra], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_fra], 51))) == 0)) || (((((uint32_t)(ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frb], 62, 52))) == 2047LU) && (ppc_fieldd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frb], 51, 0) != ((uint64_t)(0)))) && (((uint32_t)(ppc_bitd(PPC_FPR[PPC_FADD_FRD_FRD_FRD_x_x_x_x_frb], 51))) == 0))))
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 24, 24);
			else
				PPC_FPSCR = ppc_set_field32(PPC_FPSCR, 1, 23, 23);
		}
		if(ppc_bit32(PPC_FPSCR, 30))
			launch_exception("instr", 6);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFSUX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFSUX_FRD_RD_RD_x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_STFSUX_FRD_RD_RD_x_x_x_ra] + PPC_GPR[PPC_STFSUX_FRD_RD_RD_x_x_x_rb_r])));
		ppc_mem_writef(PPC_M, TMP_EA, ((float)(PPC_FPR[PPC_STFSUX_FRD_RD_RD_x_x_x_frs])));
		PPC_GPR[PPC_STFSUX_FRD_RD_RD_x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFSU_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFSU_FRD_D_LP_RD_RP__x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_STFSU_FRD_D_LP_RD_RP__x_x_x_ra] + ((int32_t)(PPC_STFSU_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		ppc_mem_writef(PPC_M, TMP_EA, ((float)(PPC_FPR[PPC_STFSU_FRD_D_LP_RD_RP__x_x_x_frs])));
		PPC_GPR[PPC_STFSU_FRD_D_LP_RD_RP__x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFSX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFSX_FRD_RD_RD_x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_STFSX_FRD_RD_RD_x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STFSX_FRD_RD_RD_x_x_x_rb_r])));
		ppc_mem_writef(PPC_M, TMP_EA, ((float)(PPC_FPR[PPC_STFSX_FRD_RD_RD_x_x_x_frs])));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFS_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFS_FRD_D_LP_RD_RP__x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_STFS_FRD_D_LP_RD_RP__x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STFS_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		ppc_mem_writef(PPC_M, TMP_EA, ((float)(PPC_FPR[PPC_STFS_FRD_D_LP_RD_RP__x_x_x_frs])));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFDUX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFDUX_FRD_RD_RD_x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_STFDUX_FRD_RD_RD_x_x_x_ra] + PPC_GPR[PPC_STFDUX_FRD_RD_RD_x_x_x_rb_r])));
		ppc_mem_writed(PPC_M, TMP_EA, PPC_FPR[PPC_STFDUX_FRD_RD_RD_x_x_x_frs]);
		PPC_GPR[PPC_STFDUX_FRD_RD_RD_x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFDU_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFDU_FRD_D_LP_RD_RP__x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_STFDU_FRD_D_LP_RD_RP__x_x_x_ra] + ((int32_t)(PPC_STFDU_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		ppc_mem_writed(PPC_M, TMP_EA, PPC_FPR[PPC_STFDU_FRD_D_LP_RD_RP__x_x_x_frs]);
		PPC_GPR[PPC_STFDU_FRD_D_LP_RD_RP__x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFDX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFDX_FRD_RD_RD_x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_STFDX_FRD_RD_RD_x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STFDX_FRD_RD_RD_x_x_x_rb_r])));
		ppc_mem_writed(PPC_M, TMP_EA, PPC_FPR[PPC_STFDX_FRD_RD_RD_x_x_x_frs]);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_STFD_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_STFD_FRD_D_LP_RD_RP__x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_STFD_FRD_D_LP_RD_RP__x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STFD_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		ppc_mem_writed(PPC_M, TMP_EA, PPC_FPR[PPC_STFD_FRD_D_LP_RD_RP__x_x_x_frs]);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFSUX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFSUX_FRD_RD_RD_x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_LFSUX_FRD_RD_RD_x_x_x_ra] + PPC_GPR[PPC_LFSUX_FRD_RD_RD_x_x_x_rb_r])));
		PPC_FPR[PPC_LFSUX_FRD_RD_RD_x_x_x_frd] = ((double)(ppc_mem_readf(PPC_M, TMP_EA)));
		PPC_GPR[PPC_LFSUX_FRD_RD_RD_x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFSU_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFSU_FRD_D_LP_RD_RP__x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		PPC_FPR[PPC_LFSU_FRD_D_LP_RD_RP__x_x_x_frd] = ((double)(ppc_mem_readf(PPC_M, TMP_EA)));
		PPC_GPR[PPC_LFSU_FRD_D_LP_RD_RP__x_x_x_ra] = (PPC_GPR[PPC_LFSU_FRD_D_LP_RD_RP__x_x_x_ra] + ((int32_t)(PPC_LFSU_FRD_D_LP_RD_RP__x_x_x_d_d)));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFSX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		PPC_FPR[PPC_LFSX_FRD_RD_RD_x_x_x_frd] = ((double)(ppc_mem_readf(PPC_M, TMP_EA)));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFS_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFS_FRD_D_LP_RD_RP__x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_LFS_FRD_D_LP_RD_RP__x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LFS_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		PPC_FPR[PPC_LFS_FRD_D_LP_RD_RP__x_x_x_frd] = ((double)(ppc_mem_readf(PPC_M, TMP_EA)));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFDUX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFDUX_FRD_RD_RD_x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_LFDUX_FRD_RD_RD_x_x_x_ra] + PPC_GPR[PPC_LFDUX_FRD_RD_RD_x_x_x_rb_r])));
		PPC_FPR[PPC_LFDUX_FRD_RD_RD_x_x_x_frd] = ppc_mem_readd(PPC_M, TMP_EA);
		PPC_GPR[PPC_LFDUX_FRD_RD_RD_x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFDU_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFDU_FRD_D_LP_RD_RP__x_x_x_ra)) == 0))
			launch_exception("instr", 6);
		TMP_EA = ((uint32_t)((PPC_GPR[PPC_LFDU_FRD_D_LP_RD_RP__x_x_x_ra] + ((int32_t)(PPC_LFDU_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		PPC_FPR[PPC_LFDU_FRD_D_LP_RD_RP__x_x_x_frd] = ppc_mem_readd(PPC_M, TMP_EA);
		PPC_GPR[PPC_LFDU_FRD_D_LP_RD_RP__x_x_x_ra] = ((int32_t)(TMP_EA));
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFDX_FRD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFDX_FRD_RD_RD_x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_LFDX_FRD_RD_RD_x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LFDX_FRD_RD_RD_x_x_x_rb_r])));
		PPC_FPR[PPC_LFDX_FRD_RD_RD_x_x_x_frd] = ppc_mem_readd(PPC_M, TMP_EA);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_LFD_FRD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_bit32(PPC_MSR, 13)) {
		if((((uint32_t)(PPC_LFD_FRD_D_LP_RD_RP__x_x_x_ra_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_LFD_FRD_D_LP_RD_RP__x_x_x_ra_r];
		TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LFD_FRD_D_LP_RD_RP__x_x_x_d_d)))));
		PPC_FPR[PPC_LFD_FRD_D_LP_RD_RP__x_x_x_frd] = ppc_mem_readd(PPC_M, TMP_EA);
	}
	else
		launch_exception("instr", 7);

}

static void ppc_instr_TWI_D_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ((int32_t)(PPC_TWI_D_RD_D_x_x_x_b_n));
	if(((((uint32_t)(PPC_TWI_D_RD_D_x_x_x_to)) == 1) & (PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < TMP_WORD)))
		;
	if(((((uint32_t)(PPC_TWI_D_RD_D_x_x_x_to)) == 2) & (PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > TMP_WORD)))
		;
	if(((((uint32_t)(PPC_TWI_D_RD_D_x_x_x_to)) == 4) & (PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] == TMP_WORD)))
		;
	if((((uint8_t)((((uint32_t)(PPC_TWI_D_RD_D_x_x_x_to)) == 8))) & ((((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > 0) & (TMP_WORD < 0)) | (((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > 0) & (TMP_WORD > 0)) & ((uint8_t)((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < TMP_WORD))))) | (((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < 0) & (TMP_WORD < 0)) & ((uint8_t)((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > TMP_WORD)))))))
		;
	if((((uint8_t)((((uint32_t)(PPC_TWI_D_RD_D_x_x_x_to)) == 16))) & ((((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < 0) & (TMP_WORD > 0)) | (((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > 0) & (TMP_WORD > 0)) & ((uint8_t)((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] > TMP_WORD))))) | (((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < 0) & (TMP_WORD < 0)) & ((uint8_t)((PPC_GPR[PPC_TWI_D_RD_D_x_x_x_ra_r] < TMP_WORD)))))))
		;

}

static void ppc_instr_TW_D_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_TW_D_RD_RD_0_x_x_x_to)) == 1) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r])))
		;
	if(((((uint32_t)(PPC_TW_D_RD_RD_0_x_x_x_to)) == 2) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r])))
		;
	if(((((uint32_t)(PPC_TW_D_RD_RD_0_x_x_x_to)) == 4) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] == PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r])))
		;
	if((((uint8_t)((((uint32_t)(PPC_TW_D_RD_RD_0_x_x_x_to)) == 8))) & ((((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] < 0)) | (((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] > 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r]))))) | (((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] < 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r])))))))
		;
	if((((uint8_t)((((uint32_t)(PPC_TW_D_RD_RD_0_x_x_x_to)) == 16))) & ((((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] > 0)) | (((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] > 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] > PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r]))))) | (((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < 0) & (PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r] < 0)) & ((uint8_t)((PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_ra_r] < PPC_GPR[PPC_TW_D_RD_RD_0_x_x_x_rb_r])))))))
		;

}

static void ppc_instr_SYNC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);

}

static void ppc_instr_STWCX__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int8_t TMP_RESERVE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWCX__RD_RD_RD_0_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWCX__RD_RD_RD_0_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWCX__RD_RD_RD_0_x_x_x_rb_r])));
	if((((int32_t)(TMP_RESERVE)) == ((int32_t)(1)))) {
		ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWCX__RD_RD_RD_0_x_x_x_rs_r]);
		PPC_CR[7] = ((uint8_t)(2));
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
		TMP_RESERVE = ((int8_t)(0));
	}
	else {
		PPC_CR[7] = ((uint8_t)(0));
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_LWARX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_RESERVE_ADDR;
	int8_t TMP_RESERVE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWARX_RD_RD_RD_0_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWARX_RD_RD_RD_0_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWARX_RD_RD_RD_0_x_x_x_rb_r])));
	TMP_RESERVE = ((int8_t)(1));
	TMP_RESERVE_ADDR = TMP_EA;
	PPC_GPR[PPC_LWARX_RD_RD_RD_0_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_MFSPR_RD_S_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MFSPR_RD_S_0_x_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD = (TMP_WORD | (((uint32_t)(ppc_field16(TMP_HWORD, 8, 5))) & 15));
	if((TMP_WORD > 9))
		print("mfspr is only user level instruction set implementation.");
	switch(TMP_WORD) {
	case 9:
		PPC_GPR[PPC_MFSPR_RD_S_0_x_x_x_rd] = ((int32_t)(PPC_CTR));
		break;
	case 8:
		PPC_GPR[PPC_MFSPR_RD_S_0_x_x_x_rd] = ((int32_t)(PPC_LR));
		break;
	case 1:
		PPC_GPR[PPC_MFSPR_RD_S_0_x_x_x_rd] = ((int32_t)(PPC_XER));
		break;
	default:
		print("mfspr: rd error.");
	}

}

static void ppc_instr_MTSPR_S_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	uint16_t TMP_HWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_HWORD = ((uint16_t)(PPC_MTSPR_S_RD_0_x_x_x_spr));
	TMP_WORD = 0;
	TMP_WORD = ((uint32_t)(ppc_field16(TMP_HWORD, 4, 0)));
	TMP_WORD = (TMP_WORD << 5);
	TMP_WORD1 = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field16(TMP_HWORD, 8, 5)));
	TMP_WORD = (TMP_WORD | (TMP_WORD1 & 15));
	if((TMP_WORD > 9))
		print("mtspr is only user level instruction set implementation.");
	switch(TMP_WORD) {
	case 9:
		PPC_CTR = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_0_x_x_x_rs]));
		break;
	case 8:
		PPC_LR = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_0_x_x_x_rs]));
		break;
	case 1:
		PPC_XER = ((uint32_t)(PPC_GPR[PPC_MTSPR_S_RD_0_x_x_x_rs]));
		break;
	default:
		print("mtspr: rs error.");
	}

}

static void ppc_instr_MFCR_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[0])), ((4 * 0) + 3), (4 * 0));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[1])), ((4 * 1) + 3), (4 * 1));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[2])), ((4 * 2) + 3), (4 * 2));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[3])), ((4 * 3) + 3), (4 * 3));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[4])), ((4 * 4) + 3), (4 * 4));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[5])), ((4 * 5) + 3), (4 * 5));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[6])), ((4 * 6) + 3), (4 * 6));
	PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd] = ppc_set_field32(PPC_GPR[PPC_MFCR_RD_0_x_x_x_rd], ((int32_t)(PPC_CR[7])), ((4 * 7) + 3), (4 * 7));

}

static void ppc_instr_ISEL_RD__RD__R5B__D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_crb))) / 4)], ((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_crb))) - (((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_crb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_crb))) - (((31 - ((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_crb))) / 4) * 4)), 1 )) {
		if((((uint32_t)(PPC_ISEL_RD__RD__R5B__D_0_x_x_x_rA_r)) == 0))
			__gtmp_0 = ((int32_t)(0));
		else
			__gtmp_0 = PPC_GPR[PPC_ISEL_RD__RD__R5B__D_0_x_x_x_rA_r];
		PPC_ISEL_RD__RD__R5B__D_0_x_x_x_rD = ((uint8_t)(__gtmp_0));
	}
	else
		PPC_ISEL_RD__RD__R5B__D_0_x_x_x_rD = PPC_ISEL_RD__RD__R5B__D_0_x_x_x_rB;

}

static void ppc_instr_MCRXR_CRFD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[(7 - ((uint32_t)(PPC_MCRXR_CRFD_0_x_x_x_crfd)))] = ppc_field32(PPC_XER, 31, 28);
	PPC_XER = ppc_set_field32(PPC_XER, 0, 31, 28);

}

static void ppc_instr_MTCRF_D_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_BYTE = ((uint8_t)(255LU));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 7))
		PPC_CR[7] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 7) + 3), (4 * 7));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 6))
		PPC_CR[6] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 6) + 3), (4 * 6));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 5))
		PPC_CR[5] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 5) + 3), (4 * 5));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 4))
		PPC_CR[4] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 4) + 3), (4 * 4));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 3))
		PPC_CR[3] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 3) + 3), (4 * 3));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 2))
		PPC_CR[2] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 2) + 3), (4 * 2));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 1))
		PPC_CR[1] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], ((4 * 1) + 3), (4 * 1));
	if(ppc_bit8(PPC_MTCRF_D_RD_0_x_x_x_crm, 0))
		PPC_CR[0] = ppc_field32(PPC_GPR[PPC_MTCRF_D_RD_0_x_x_x_rs_r], 3, 0);

}

static void ppc_instr_MCRF_CRFD_CRFD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[(7 - ((uint32_t)(PPC_MCRF_CRFD_CRFD_x_x_x_crfd)))] = PPC_CR[(7 - ((uint32_t)(PPC_MCRF_CRFD_CRFD_x_x_x_crfs)))];

}

static void ppc_instr_CRORC_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) | __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 ))), ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRORC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CRANDC_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) & __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 ))), ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRANDC_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CREQV_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) ^ __PPC_MASK32(4, ~ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 ))), ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CREQV_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CRNOR_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], __PPC_MASK32(4, ~(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) | ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 ))), ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRNOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CRNAND_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], __PPC_MASK32(4, ~(ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) & ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 ))), ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRNAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CRXOR_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) ^ ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 )), ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRXOR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CROR_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) | ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 )), ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CROR_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_CRAND_CRBD_CRBD_CRBD_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_CR[((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)] = ppc_set_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4)], (ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4)], ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crba))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crba))) / 4) * 4)), 1 ) & ppc_field8_generic(PPC_CR[((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4)], ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbb))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbb))) / 4) * 4)), 1 )), ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), ((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) - (((31 - ((uint32_t)(PPC_CRAND_CRBD_CRBD_CRBD_x_x_x_crbd))) / 4) * 4)), 1);

}

static void ppc_instr_SRAW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)));
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - TMP_WORD1), 0, 1 ), (31 - TMP_WORD1), 0, 1);
	TMP_WORD1 = 0;
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rs_r], 31))) == 1))
		TMP_WORD1 = ~TMP_WORD1;
	TMP_RES = ((int32_t)((((PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & TMP_WORD) | (TMP_WORD1 & ~TMP_WORD))));
	if(((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rs_r], 31))) == 1) & (((PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & ~TMP_WORD) != 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	PPC_GPR[PPC_SRAW__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRAW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)));
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - TMP_WORD1), 0, 1 ), (31 - TMP_WORD1), 0, 1);
	TMP_WORD1 = 0;
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rs_r], 31))) == 1))
		TMP_WORD1 = ~TMP_WORD1;
	PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((((PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & TMP_WORD) | (TMP_WORD1 & ~TMP_WORD))));
	if(((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rs_r], 31))) == 1) & (((PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRAW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & ~TMP_WORD) != 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);

}

static void ppc_instr_SRAWI__RD_RD_D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAWI__RD_RD_D_0_x_x_x_x_rs_r], 31))) == 0)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh))), 0, 1 ), (31 - ((uint32_t)(PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh))), 0, 1);
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRAWI__RD_RD_D_0_x_x_x_x_rs_r] >> PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh) & TMP_WORD)));
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	else {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, 31, (32 - ((uint32_t)(PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh))), 1 ), 31, (32 - ((uint32_t)(PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh))), 1);
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRAWI__RD_RD_D_0_x_x_x_x_rs_r] >> PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh) | TMP_WORD)));
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh, 0, 1 ), PPC_SRAWI__RD_RD_D_0_x_x_x_x_sh, 0, 1);
		TMP_WORD = (TMP_WORD & ((uint32_t)(PPC_GPR[PPC_SRAWI__RD_RD_D_0_x_x_x_x_rs_r])));
		if((TMP_WORD != 0))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	PPC_GPR[PPC_SRAWI__RD_RD_D_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRAWI_RD_RD_D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_rs_r], 31))) == 0)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh))), 0, 1 ), (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh))), 0, 1);
		PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_rs_r] >> PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh) & TMP_WORD)));
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}
	else {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, 31, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh))), 1 ), 31, (31 - ((uint32_t)(PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh))), 1);
		PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_rs_r] >> PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh) | TMP_WORD)));
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh, 0, 1 ), PPC_SRAWI_RD_RD_D_0_x_x_x_x_sh, 0, 1);
		TMP_WORD = (TMP_WORD & ((uint32_t)(PPC_GPR[PPC_SRAWI_RD_RD_D_0_x_x_x_x_rs_r])));
		if((TMP_WORD != 0))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	}

}

static void ppc_instr_SRW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = (31 - ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0))));
	TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, TMP_WORD1, 0, 1 ), TMP_WORD1, 0, 1);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRW__RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		TMP_RES = ((int32_t)(((PPC_GPR[PPC_SRW__RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & TMP_WORD)));
	else
		TMP_RES = ((int32_t)(0));
	PPC_GPR[PPC_SRW__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SRW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD1;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = 0;
	TMP_WORD1 = (31 - ((uint32_t)(ppc_field32(PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0))));
	TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, TMP_WORD1, 0, 1 ), TMP_WORD1, 0, 1);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(((PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_rs_r] >> ppc_field32(PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0)) & TMP_WORD)));
	else
		PPC_GPR[PPC_SRW_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(0));

}

static void ppc_instr_SLW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SLW__RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		TMP_RES = ((int32_t)((PPC_GPR[PPC_SLW__RD_RD_RD_0_x_x_x_x_rs_r] << ppc_field32(PPC_GPR[PPC_SLW__RD_RD_RD_0_x_x_x_x_rb_r], 4, 0))));
	else
		TMP_RES = ((int32_t)(0));
	PPC_GPR[PPC_SLW__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SLW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(ppc_bit32(PPC_GPR[PPC_SLW_RD_RD_RD_0_x_x_x_x_rb_r], 5))) == 0))
		PPC_GPR[PPC_SLW_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_SLW_RD_RD_RD_0_x_x_x_x_rs_r] << ppc_field32(PPC_GPR[PPC_SLW_RD_RD_RD_0_x_x_x_x_rb_r], 4, 0))));
	else
		PPC_GPR[PPC_SLW_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(0));

}

static void ppc_instr_RLWIMI__RD_RD_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_mb <= PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = -1;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1);
	}
	TMP_RES = ((int32_t)(((ppc_rotate_left32(32, PPC_GPR[PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_rs_r], PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_sh) & TMP_WORD) | (((uint32_t)(PPC_GPR[PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_ra])) & ~TMP_WORD))));
	PPC_GPR[PPC_RLWIMI__RD_RD_D_D_D_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_RLWIMI_RD_RD_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_mb <= PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = -1;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1);
	}
	PPC_GPR[PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_ra] = ((int32_t)(((ppc_rotate_left32(32, PPC_GPR[PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_rs_r], PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_sh) & TMP_WORD) | (((uint32_t)(PPC_GPR[PPC_RLWIMI_RD_RD_D_D_D_x_x_x_x_ra])) & ~TMP_WORD))));

}

static void ppc_instr_RLWNM__RD_RD_RD_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_mb <= PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = -1;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_mb))) + 1), 1);
	}
	TMP_RES = ((int32_t)((ppc_rotate_left32(32, PPC_GPR[PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_rs_r], ppc_field32(PPC_GPR[PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_rb], 4, 0)) & TMP_WORD)));
	PPC_GPR[PPC_RLWNM__RD_RD_RD_D_D_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_RLWNM_RD_RD_RD_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_mb <= PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = -1;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_mb))) + 1), 1);
	}
	PPC_GPR[PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_ra] = ((int32_t)((ppc_rotate_left32(32, PPC_GPR[PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_rs_r], ppc_field32(PPC_GPR[PPC_RLWNM_RD_RD_RD_D_D_x_x_x_x_rb], 4, 0)) & TMP_WORD)));

}

static void ppc_instr_RLWINM__RD_RD_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_mb <= PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = 0xffffffffLU;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1);
	}
	TMP_RES = ((int32_t)((ppc_rotate_left32(32, PPC_GPR[PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_rs_r], PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_sh) & TMP_WORD)));
	PPC_GPR[PPC_RLWINM__RD_RD_D_D_D_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_RLWINM_RD_RD_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_mb <= PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_me)) {
		TMP_WORD = 0;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, (31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_me))), 1 ), (31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_mb))), (31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_me))), 1);
	}
	else {
		TMP_WORD = 0xffffffffLU;
		TMP_WORD = ppc_set_field32_generic(TMP_WORD, ~ppc_field32_generic(TMP_WORD, ((31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1 ), ((31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_me))) - 1), ((31 - ((uint32_t)(PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_mb))) + 1), 1);
	}
	PPC_GPR[PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_ra] = ((int32_t)((ppc_rotate_left32(32, PPC_GPR[PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_rs_r], PPC_RLWINM_RD_RD_D_D_D_x_x_x_x_sh) & TMP_WORD)));

}

static void ppc_instr_CNTLZW__RD__RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(31));
gliss_CNTLZW__RD__RD_0_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((ppc_field32_generic(PPC_GPR[PPC_CNTLZW__RD__RD_0_x_x_x_x_rs_r], TMP_SBYTE, TMP_SBYTE, 1 ) == ((int32_t)(0)))) {
			TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_CNTLZW__RD__RD_0_0_;
		}
		else {
			TMP_RES = (((int32_t)(31)) - ((int32_t)(TMP_SBYTE)));
			TMP_SBYTE = ((int8_t)(-1));
		}
	}
	else
		TMP_RES = ((int32_t)(32));
	PPC_GPR[PPC_CNTLZW__RD__RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(0)), 3, 3);

}

static void ppc_instr_CNTLZW_RD__RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(31));
gliss_CNTLZW_RD__RD_0_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((ppc_field32_generic(PPC_GPR[PPC_CNTLZW_RD__RD_0_x_x_x_x_rs_r], TMP_SBYTE, TMP_SBYTE, 1 ) == ((int32_t)(0)))) {
			TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_CNTLZW_RD__RD_0_0_;
		}
		else {
			PPC_GPR[PPC_CNTLZW_RD__RD_0_x_x_x_x_ra] = (((int32_t)(31)) - ((int32_t)(TMP_SBYTE)));
			TMP_SBYTE = ((int8_t)(-1));
		}
	}
	else
		PPC_GPR[PPC_CNTLZW_RD__RD_0_x_x_x_x_ra] = ((int32_t)(32));

}

static void ppc_instr_EXTSH__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SHWORD = ((int16_t)(ppc_field32(PPC_GPR[PPC_EXTSH__RD_RD_0_x_x_x_x_rs], 15, 0)));
	PPC_GPR[PPC_EXTSH__RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_SHWORD));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SHWORD)) == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EXTSH_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SHWORD = ((int16_t)(ppc_field32(PPC_GPR[PPC_EXTSH_RD_RD_0_x_x_x_x_rs], 15, 0)));
	PPC_GPR[PPC_EXTSH_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_SHWORD));

}

static void ppc_instr_EXTSB__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_GPR[PPC_EXTSB__RD_RD_0_x_x_x_x_rs], 7, 0)));
	PPC_GPR[PPC_EXTSB__RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_SBYTE));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (((int32_t)(TMP_SBYTE)) == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EXTSB_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int8_t TMP_SBYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_GPR[PPC_EXTSB_RD_RD_0_x_x_x_x_rs], 7, 0)));
	PPC_GPR[PPC_EXTSB_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_SBYTE));

}

static void ppc_instr_EQV__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_EQV__RD_RD_RD_0_x_x_x_x_rs_r] ^ PPC_GPR[PPC_EQV__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_EQV__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_EQV_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_EQV_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_EQV_RD_RD_RD_0_x_x_x_x_rs_r] ^ PPC_GPR[PPC_EQV_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_NAND__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_NAND__RD_RD_RD_0_x_x_x_x_rs_r] & PPC_GPR[PPC_NAND__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_NAND__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NAND_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NAND_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_NAND_RD_RD_RD_0_x_x_x_x_rs_r] & PPC_GPR[PPC_NAND_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_NOR__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)(~(PPC_GPR[PPC_NOR__RD_RD_RD_0_x_x_x_x_rs_r] | PPC_GPR[PPC_NOR__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_NOR__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NOR_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NOR_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(~(PPC_GPR[PPC_NOR_RD_RD_RD_0_x_x_x_x_rs_r] | PPC_GPR[PPC_NOR_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_XORIS_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_XORIS_RD_RD_D_x_x_x_x_imm_n, 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 15, (15 - (16 - 1)));
	PPC_GPR[PPC_XORIS_RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_XORIS_RD_RD_D_x_x_x_x_rs_r])) ^ TMP_WORD)));

}

static void ppc_instr_XORI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_XORI_RD_RD_D_x_x_x_x_imm_n, 15, (15 - (16 - 1)));
	PPC_GPR[PPC_XORI_RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_XORI_RD_RD_D_x_x_x_x_rs_r])) ^ TMP_WORD)));

}

static void ppc_instr_XOR__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_XOR__RD_RD_RD_0_x_x_x_x_rs_r] ^ PPC_GPR[PPC_XOR__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_XOR__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_XOR_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_XOR_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_XOR_RD_RD_RD_0_x_x_x_x_rs_r] ^ PPC_GPR[PPC_XOR_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_ANDC__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_ANDC__RD_RD_RD_0_x_x_x_x_rs_r] & ~PPC_GPR[PPC_ANDC__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_ANDC__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ANDC_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_ANDC_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_ANDC_RD_RD_RD_0_x_x_x_x_rs_r] & ~PPC_GPR[PPC_ANDC_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_ANDIS__RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_ANDIS__RD_RD_D_x_x_x_x_imm_n, 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 15, (15 - (16 - 1)));
	PPC_GPR[PPC_ANDIS__RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_ANDIS__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDIS__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDIS__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDIS__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ANDI__RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_ANDI__RD_RD_D_x_x_x_x_imm_n, 15, (15 - (16 - 1)));
	PPC_GPR[PPC_ANDI__RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_ANDI__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDI__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDI__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((((uint32_t)(PPC_GPR[PPC_ANDI__RD_RD_D_x_x_x_x_rs_r])) & TMP_WORD) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_AND__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_AND__RD_RD_RD_0_x_x_x_x_rs_r] & PPC_GPR[PPC_AND__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_AND__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_AND_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_AND_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_AND_RD_RD_RD_0_x_x_x_x_rs_r] & PPC_GPR[PPC_AND_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_ORC__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_ORC__RD_RD_RD_0_x_x_x_x_rs_r] | ~PPC_GPR[PPC_ORC__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_ORC__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ORC_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_ORC_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_ORC_RD_RD_RD_0_x_x_x_x_rs_r] | ~PPC_GPR[PPC_ORC_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_ORIS_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_ORIS_RD_RD_D_x_x_x_x_imm_n, 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 15, (15 - (16 - 1)));
	PPC_GPR[PPC_ORIS_RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_ORIS_RD_RD_D_x_x_x_x_rs_r])) | TMP_WORD)));

}

static void ppc_instr_ORI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = ppc_set_field32(TMP_WORD, ((uint16_t)(0)), 31, (31 - (16 - 1)));
	TMP_WORD = ppc_set_field32(TMP_WORD, PPC_ORI_RD_RD_D_x_x_x_x_imm_n, 15, (15 - (16 - 1)));
	PPC_GPR[PPC_ORI_RD_RD_D_x_x_x_x_ra] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_ORI_RD_RD_D_x_x_x_x_rs_r])) | TMP_WORD)));

}

static void ppc_instr_OR__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((int32_t)((PPC_GPR[PPC_OR__RD_RD_RD_0_x_x_x_x_rs_r] | PPC_GPR[PPC_OR__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_OR__RD_RD_RD_0_x_x_x_x_ra] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_OR_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_OR_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)((PPC_GPR[PPC_OR_RD_RD_RD_0_x_x_x_x_rs_r] | PPC_GPR[PPC_OR_RD_RD_RD_0_x_x_x_x_rb_r])));

}

static void ppc_instr_CMPL_D_D_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_0_x_x_x_x_ra_r])) < ((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_0_x_x_x_x_rb_r]))))
		TMP_BYTE = ((uint8_t)(4));
	else {
		if((((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_0_x_x_x_x_ra_r])) > ((uint32_t)(PPC_GPR[PPC_CMPL_D_D_RD_RD_0_x_x_x_x_rb_r]))))
			TMP_BYTE = ((uint8_t)(2));
		else
			TMP_BYTE = ((uint8_t)(1));
	}
	TMP_BYTE = (TMP_BYTE << 1);
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMPL_D_D_RD_RD_0_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMPL_D_D_RD_RD_0_x_x_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_CMPLI_D_D_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = PPC_CMPLI_D_D_RD_D_x_x_x_x_imm_n;
	if((((uint32_t)(PPC_GPR[PPC_CMPLI_D_D_RD_D_x_x_x_x_ra_r])) < TMP_WORD))
		TMP_BYTE = ((uint8_t)(4));
	else {
		if((((uint32_t)(PPC_GPR[PPC_CMPLI_D_D_RD_D_x_x_x_x_ra_r])) > TMP_WORD))
			TMP_BYTE = ((uint8_t)(2));
		else
			TMP_BYTE = ((uint8_t)(1));
	}
	TMP_BYTE = (TMP_BYTE << 1);
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMPLI_D_D_RD_D_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMPLI_D_D_RD_D_x_x_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_CMP_D_D_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_CMP_D_D_RD_RD_0_x_x_x_x_ra_r] < PPC_GPR[PPC_CMP_D_D_RD_RD_0_x_x_x_x_rb_r]))
		TMP_BYTE = ((uint8_t)(4));
	else {
		if((PPC_GPR[PPC_CMP_D_D_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_CMP_D_D_RD_RD_0_x_x_x_x_rb_r]))
			TMP_BYTE = ((uint8_t)(2));
		else
			TMP_BYTE = ((uint8_t)(1));
	}
	TMP_BYTE = (TMP_BYTE << 1);
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMP_D_D_RD_RD_0_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMP_D_D_RD_RD_0_x_x_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_CMPI_D_D_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_BYTE = ((uint8_t)(0));
	if((PPC_GPR[PPC_CMPI_D_D_RD_D_x_x_x_x_ra_r] < PPC_CMPI_D_D_RD_D_x_x_x_x_imm_n))
		TMP_BYTE = ((uint8_t)(8));
	else {
		if((PPC_GPR[PPC_CMPI_D_D_RD_D_x_x_x_x_ra_r] > PPC_CMPI_D_D_RD_D_x_x_x_x_imm_n))
			TMP_BYTE = ((uint8_t)(4));
		else
			TMP_BYTE = ((uint8_t)(2));
	}
	if(ppc_bit32(PPC_XER, 31))
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) | 1)));
	PPC_CR[(7 - ((uint32_t)(PPC_CMPI_D_D_RD_D_x_x_x_x_crfd)))] = ppc_set_field8(PPC_CR[(7 - ((uint32_t)(PPC_CMPI_D_D_RD_D_x_x_x_x_crfd)))], ((uint8_t)((((uint32_t)(TMP_BYTE)) & 15))), 3, 0);

}

static void ppc_instr_NEGO__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEGO__RD_RD_0_x_x_x_x_ra_r] + ((int32_t)(1)));
	if((PPC_GPR[PPC_NEGO__RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_NEGO__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NEGO_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEGO_RD_RD_0_x_x_x_x_ra_r] + ((int32_t)(1)));
	if((PPC_GPR[PPC_NEGO_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_NEGO_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_NEG__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_NEG__RD_RD_0_x_x_x_x_ra_r] + ((int32_t)(1)));
	PPC_GPR[PPC_NEG__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_NEG_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_NEG_RD_RD_0_x_x_x_x_rd] = (~PPC_GPR[PPC_NEG_RD_RD_0_x_x_x_x_ra_r] + ((int32_t)(1)));

}

static void ppc_instr_DIVWUO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r] == 0)) {
		TMP_RES = ((int32_t)(0));
		if((((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r])) == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}
	else {
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r])))));
		if((((((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rb_r])) == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWUO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWUO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_rb_r] == 0))
		TMP_RES = ((int32_t)(0));
	else
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_rb_r])))));
	if((((((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_ra_r])) == 0x80000000LU) && (((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_rb_r])) == -1)) || (((uint32_t)(PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_rb_r])) == 0))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_DIVWUO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_DIVWU__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWU__RD_RD_RD_0_x_x_x_x_rb_r] == 0))
		PPC_GPR[PPC_DIVWU__RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	else {
		TMP_RES = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWU__RD_RD_RD_0_x_x_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWU__RD_RD_RD_0_x_x_x_x_rb_r])))));
		PPC_GPR[PPC_DIVWU__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWU_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((PPC_GPR[PPC_DIVWU_RD_RD_RD_0_x_x_x_x_rb_r] == 0))
		PPC_GPR[PPC_DIVWU_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	else
		PPC_GPR[PPC_DIVWU_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_DIVWU_RD_RD_RD_0_x_x_x_x_ra_r])) / ((uint32_t)(PPC_GPR[PPC_DIVWU_RD_RD_RD_0_x_x_x_x_rb_r])))));

}

static void ppc_instr_DIVWO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == -1)))) {
		TMP_RES = ((int32_t)(0));
		if((((PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}
	else {
		TMP_RES = (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_ra_r] / PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r]);
		if((((PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rb_r] == 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		PPC_GPR[PPC_DIVWO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVWO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rb_r] == -1))))
		TMP_RES = ((int32_t)(0));
	else
		TMP_RES = (PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_ra_r] / PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rb_r]);
	if((((PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) && (PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rb_r] == -1)) || (PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rb_r] == 0))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_DIVWO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_DIVW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_rb_r] == -1))))
		PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	else {
		TMP_RES = (PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_ra_r] / PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_rb_r]);
		PPC_GPR[PPC_DIVW__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_DIVW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_rb_r] == 0) || ((PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU) & (PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_rb_r] == -1))))
		PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	else
		PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_rd] = (PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_ra_r] / PPC_GPR[PPC_DIVW_RD_RD_RD_0_x_x_x_x_rb_r]);

}

static void ppc_instr_MULHWU__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint64_t TMP_DWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_DWORD = ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU__RD_RD_RD_0_x_x_x_x_ra_r]))));
	TMP_DWORD = (TMP_DWORD * ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU__RD_RD_RD_0_x_x_x_x_rb_r])))));
	PPC_GPR[PPC_MULHWU__RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(ppc_field64(TMP_DWORD, 63, 32)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_DWORD, 63, 32) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULHWU_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint64_t TMP_DWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_DWORD = ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU_RD_RD_RD_0_x_x_x_x_ra_r]))));
	TMP_DWORD = (TMP_DWORD * ((uint64_t)(((uint32_t)(PPC_GPR[PPC_MULHWU_RD_RD_RD_0_x_x_x_x_rb_r])))));
	PPC_GPR[PPC_MULHWU_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(ppc_field64(TMP_DWORD, 63, 32)));

}

static void ppc_instr_MULHW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_SDWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SDWORD = ((int64_t)(PPC_GPR[PPC_MULHW__RD_RD_RD_0_x_x_x_x_ra_r]));
	TMP_SDWORD = (TMP_SDWORD * ((int64_t)(PPC_GPR[PPC_MULHW__RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_MULHW__RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(ppc_field64(TMP_SDWORD, 63, 32)));
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) < 0), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) > 0), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (ppc_field64(TMP_SDWORD, 63, 32) == 0), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULHW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_SDWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SDWORD = ((int64_t)(PPC_GPR[PPC_MULHW_RD_RD_RD_0_x_x_x_x_ra_r]));
	TMP_SDWORD = (TMP_SDWORD * ((int64_t)(PPC_GPR[PPC_MULHW_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_MULHW_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(ppc_field64(TMP_SDWORD, 63, 32)));

}

static void ppc_instr_MULLI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MULLI_RD_RD_D_x_x_x_x_rd] = (PPC_GPR[PPC_MULLI_RD_RD_D_x_x_x_x_ra_r] * ((int32_t)(PPC_MULLI_RD_RD_D_x_x_x_x_imm_n)));

}

static void ppc_instr_MULLWO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_M_RES;
	int64_t TMP_M_OP2;
	int64_t TMP_M_OP1;
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_ra_r] * PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_rb_r]);
	TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_ra_r], 31, (31 - (32 - 1)));
	TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_rb_r], 31, (31 - (32 - 1)));
	TMP_M_RES = ppc_set_field32(TMP_M_RES, TMP_RES, 31, (31 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_ra_r] < 0))
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_rb_r] < 0))
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((TMP_RES < ((int32_t)(0))))
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if(((TMP_M_OP1 * TMP_M_OP2) != TMP_M_RES)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_MULLWO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULLWO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int64_t TMP_M_RES;
	int64_t TMP_M_OP2;
	int64_t TMP_M_OP1;
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_ra_r] * PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_rb_r]);
	TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_ra_r], 31, (31 - (32 - 1)));
	TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_rb_r], 31, (31 - (32 - 1)));
	TMP_M_RES = ppc_set_field32(TMP_M_RES, TMP_RES, 31, (31 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_ra_r] < 0))
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP1 = ppc_set_field32(TMP_M_OP1, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_rb_r] < 0))
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_OP2 = ppc_set_field32(TMP_M_OP2, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if((TMP_RES < ((int32_t)(0))))
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0xffffffffLU)), 63, (63 - (32 - 1)));
	else
		TMP_M_RES = ppc_set_field32(TMP_M_RES, ((int32_t)(0)), 63, (63 - (32 - 1)));
	if(((TMP_M_OP1 * TMP_M_OP2) != TMP_M_RES)) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	PPC_GPR[PPC_MULLWO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_MULLW__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_MULLW__RD_RD_RD_0_x_x_x_x_ra_r] * PPC_GPR[PPC_MULLW__RD_RD_RD_0_x_x_x_x_rb_r]);
	PPC_GPR[PPC_MULLW__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_MULLW_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_MULLW_RD_RD_RD_0_x_x_x_x_rd] = (PPC_GPR[PPC_MULLW_RD_RD_RD_0_x_x_x_x_ra_r] * PPC_GPR[PPC_MULLW_RD_RD_RD_0_x_x_x_x_rb_r]);

}

static void ppc_instr_SUBFZEO__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (0 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (0 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((0 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((0 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFZEO__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFZEO_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (0 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (0 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((0 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((0 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFZEO_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFZE__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFZE__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFZE_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (~PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_ra_r] > 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_ra_r] >= 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFZE_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFMEO__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (-1 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (-1 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((-1 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((-1 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFMEO__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFMEO_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (-1 >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (-1 < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((-1 >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((-1 < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFMEO_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFME__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFME__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFME_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_ra_r] > -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_ra_r] >= -1))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFME_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFEO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFEO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFEO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((TMP_RES == ((int32_t)(0)))) {
		if((((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] >= ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((~PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] < ((int32_t)(0))) && (PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (((uint32_t)(ppc_bit32(PPC_XER, 29))) >= 0))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
			if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
			}
		}
		else {
			if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else {
				if((PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				else {
					if((((uint32_t)(ppc_bit32(PPC_XER, 29))) < 0)) {
						PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
						PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
					}
					else
						PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
				}
			}
		}
	}
	PPC_GPR[PPC_SUBFEO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFE__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFE__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFE_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 1)) {
				if((PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFE_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFCO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFCO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFCO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFCO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFC__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFC__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFC_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if(((PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_ra_r] > PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_ra_r] >= PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rb_r]))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFC_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFIC_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_ra_r] + ((int32_t)(1))) + ((int32_t)(PPC_SUBFIC_RD_RD_D_x_x_x_x_imm_n)));
	if(((PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_ra_r] >= 0) && (PPC_SUBFIC_RD_RD_D_x_x_x_x_imm_n < 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	else {
		if(((PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_ra_r] < 0) && (PPC_SUBFIC_RD_RD_D_x_x_x_x_imm_n >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if((1 == 1)) {
				if((PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_ra_r] > PPC_SUBFIC_RD_RD_D_x_x_x_x_imm_n))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
			else {
				if((PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_ra_r] >= PPC_SUBFIC_RD_RD_D_x_x_x_x_imm_n))
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			}
		}
	}
	PPC_GPR[PPC_SUBFIC_RD_RD_D_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBFO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if((PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBFO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	if((PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0)) {
		if((PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		else {
			if((TMP_RES < ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
		}
	}
	else {
		if((PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_ra_r] == 0x80000000LU)) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_rb_r] < 0))
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			else {
				if((TMP_RES < ((int32_t)(0)))) {
					PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
					PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
				}
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
			}
		}
	}
	PPC_GPR[PPC_SUBFO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_SUBF__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((~PPC_GPR[PPC_SUBF__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBF__RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));
	PPC_GPR[PPC_SUBF__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_SUBF_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	PPC_GPR[PPC_SUBF_RD_RD_RD_0_x_x_x_x_rd] = ((~PPC_GPR[PPC_SUBF_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_SUBF_RD_RD_RD_0_x_x_x_x_rb_r]) + ((int32_t)(1)));

}

static void ppc_instr_ADDZEO__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDZEO__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDZEO_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDZEO_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDZE__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDZE__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDZE_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)) || ((PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_ra_r] >= 0) && (0 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_ra_r] < 0) && (0 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDZE_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDMEO__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDMEO__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDMEO_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDMEO_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDME__RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDME__RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDME_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_ra_r] + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29))))) + ((int32_t)(0xffffffffLU)));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)) || ((PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_ra_r] >= 0) && (-1 >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_ra_r] < 0) && (-1 < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDME_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDEO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDEO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDEO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	if((((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	TMP_RES = PPC_GPR[PPC_ADDEO_RD_RD_RD_0_x_x_x_x_rd];

}

static void ppc_instr_ADDE__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDE__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDE_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = ((PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rb_r]) + __PPC_EXTS(31, ((int32_t)(ppc_bit32(PPC_XER, 29)))));
	if(((((uint32_t)(ppc_bit32(PPC_XER, 29))) == 0) || ((((PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) || ((PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rb_r] < 0))) && (TMP_RES != ((int32_t)(0)))))) {
		if(((PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		else {
			if(((PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else {
				if((TMP_RES >= ((int32_t)(0))))
					PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
				else
					PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
			}
		}
	}
	else
		PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
	PPC_GPR[PPC_ADDE_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDCO__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	if((((PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDCO__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDCO_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	if((((PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
		PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
		PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
	}
	else {
		if((((PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else
			PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
	}
	PPC_GPR[PPC_ADDCO_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDC__RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDC__RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDC_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_rb_r]);
	if(((PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_rb_r] < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDC_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDIC__RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDIC__RD_RD_D_x_x_x_x_ra_r] + ((int32_t)(PPC_ADDIC__RD_RD_D_x_x_x_x_imm_n)));
	if(((PPC_GPR[PPC_ADDIC__RD_RD_D_x_x_x_x_ra_r] >= 0) && (PPC_ADDIC__RD_RD_D_x_x_x_x_imm_n >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDIC__RD_RD_D_x_x_x_x_ra_r] < 0) && (PPC_ADDIC__RD_RD_D_x_x_x_x_imm_n < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDIC__RD_RD_D_x_x_x_x_rd] = TMP_RES;
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
	PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);

}

static void ppc_instr_ADDIC_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDIC_RD_RD_D_x_x_x_x_ra_r] + ((int32_t)(PPC_ADDIC_RD_RD_D_x_x_x_x_imm_n)));
	if(((PPC_GPR[PPC_ADDIC_RD_RD_D_x_x_x_x_ra_r] >= 0) && (PPC_ADDIC_RD_RD_D_x_x_x_x_imm_n >= 0)))
		PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
	else {
		if(((PPC_GPR[PPC_ADDIC_RD_RD_D_x_x_x_x_ra_r] < 0) && (PPC_ADDIC_RD_RD_D_x_x_x_x_imm_n < 0)))
			PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
		else {
			if((TMP_RES >= ((int32_t)(0))))
				PPC_XER = ppc_set_field32(PPC_XER, 1, 29, 29);
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 29, 29);
		}
	}
	PPC_GPR[PPC_ADDIC_RD_RD_D_x_x_x_x_rd] = TMP_RES;

}

static void ppc_instr_ADDIS_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)(PPC_ADDIS_RD_RD_D_x_x_x_x_da_n));
	if((((uint32_t)(PPC_ADDIS_RD_RD_D_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_ADDIS_RD_RD_D_x_x_x_x_ra_r];
	PPC_GPR[PPC_ADDIS_RD_RD_D_x_x_x_x_rd] = (__gtmp_0 + ((int32_t)((TMP_SWORD << 16))));

}

static void ppc_instr_ADDI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_ADDI_RD_RD_D_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_ADDI_RD_RD_D_x_x_x_x_ra_r];
	PPC_GPR[PPC_ADDI_RD_RD_D_x_x_x_x_rd] = (__gtmp_0 + ((int32_t)(PPC_ADDI_RD_RD_D_x_x_x_x_da_n)));

}

static void ppc_instr_ADDSS_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_RES;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_RES = (PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_ra_r] + PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_rb_r]);
	if(PPC_ADDSS_RD_RD_RD_0_x_x_x_x_Oe) {
		if((((PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_ra_r] >= 0) && (PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_rb_r] >= 0)) && (TMP_RES < ((int32_t)(0))))) {
			PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
			PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
		}
		else {
			if((((PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_ra_r] < 0) && (PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_rb_r] < 0)) && (TMP_RES >= ((int32_t)(0))))) {
				PPC_XER = ppc_set_field32(PPC_XER, 1, 30, 30);
				PPC_XER = ppc_set_field32(PPC_XER, 1, 31, 31);
			}
			else
				PPC_XER = ppc_set_field32(PPC_XER, 0, 30, 30);
		}
	}
	PPC_GPR[PPC_ADDSS_RD_RD_RD_0_x_x_x_x_rd] = TMP_RES;
	if(PPC_ADDSS_RD_RD_RD_0_x_x_x_x_Rc) {
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES < ((int32_t)(0))), 3, 3);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES > ((int32_t)(0))), 2, 2);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], (TMP_RES == ((int32_t)(0))), 1, 1);
		PPC_CR[7] = ppc_set_field8(PPC_CR[7], ((uint8_t)(ppc_bit32(PPC_XER, 31))), 0, 0);
	}

}

static void ppc_instr_STSWX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	int8_t TMP_SBYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_STSWX_RD_RD_RD_0_x_x_x_x_rs)) - 1);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_XER, 6, 0)));
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_STSWX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STSWX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STSWX_RD_RD_RD_0_x_x_x_x_rb_r])));
gliss_STSWX_RD_RD_RD_0_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0))
			TMP_WORD = ((TMP_WORD + 1) % 32);
		ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32_generic(PPC_GPR[TMP_WORD], (31 - ((uint32_t)(TMP_BYTE))), ((31 - ((uint32_t)(TMP_BYTE))) - 7), 1 ))));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_STSWX_RD_RD_RD_0_0_;
	}

}

static void ppc_instr_STSWI_RD_RD_D_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_2;
	uint32_t __gtmp_1;
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_rs)) - 1);
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STSWI_RD_RD_D_0_x_x_x_x_ra_r];
	TMP_EA = __gtmp_0;
	if((((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_NB_NB)) == 0))
		__gtmp_1 = 32;
	else
		__gtmp_1 = ((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_NB_NB));
	if((__gtmp_1 == 0))
		TMP_SWORD = ((int32_t)(32));
	else {
		if((((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_NB_NB)) == 0))
			__gtmp_2 = 32;
		else
			__gtmp_2 = ((uint32_t)(PPC_STSWI_RD_RD_D_0_x_x_x_x_NB_NB));
		TMP_SWORD = __gtmp_2;
	}
gliss_STSWI_RD_RD_D_0_0_:
	if((TMP_SWORD >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0))
			TMP_WORD = ((TMP_WORD + 1) % 32);
		ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32_generic(PPC_GPR[TMP_WORD], (31 - ((uint32_t)(TMP_BYTE))), ((31 - ((uint32_t)(TMP_BYTE))) - 7), 1 ))));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SWORD = (TMP_SWORD - ((int32_t)(1)));
goto gliss_STSWI_RD_RD_D_0_0_;
	}

}

static void ppc_instr_STMW_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_WORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STMW_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STMW_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STMW_RD_D_LP_RD_RP__x_x_x_x_d_n)))));
	TMP_WORD = ((uint32_t)(PPC_STMW_RD_D_LP_RD_RP__x_x_x_x_rs));
gliss_STMW_RD_D_LP_RD_RP__0_:
	if((TMP_WORD <= 31)) {
		ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[TMP_WORD]);
		TMP_WORD = (TMP_WORD + 1);
		TMP_EA = (TMP_EA + 4);
goto gliss_STMW_RD_D_LP_RD_RP__0_;
	}

}

static void ppc_instr_STWBRX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWBRX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWBRX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWBRX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWBRX_RD_RD_RD_0_x_x_x_x_rs]);

}

static void ppc_instr_STHBRX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHBRX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STHBRX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STHBRX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHBRX_RD_RD_RD_0_x_x_x_x_rs])));

}

static void ppc_instr_STWUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWUX_RD_RD_RD_0_x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STWUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_STWUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWUX_RD_RD_RD_0_x_x_x_x_rs]);
	PPC_GPR[PPC_STWUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STWU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STWU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_STWU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWU_RD_D_LP_RD_RP__x_x_x_x_rs]);
	PPC_GPR[PPC_STWU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STWX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STWX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STWX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STWX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STWX_RD_RD_RD_0_x_x_x_x_rs]);

}

static void ppc_instr_STW_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STW_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STW_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STW_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	ppc_mem_write32(PPC_M, TMP_EA, PPC_GPR[PPC_STW_RD_D_LP_RD_RP__x_x_x_x_rs]);

}

static void ppc_instr_STHUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHUX_RD_RD_RD_0_x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STHUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_STHUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHUX_RD_RD_RD_0_x_x_x_x_rs])));
	PPC_GPR[PPC_STHUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STHU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STHU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_STHU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHU_RD_D_LP_RD_RP__x_x_x_x_rs])));
	PPC_GPR[PPC_STHU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STHX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STHX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STHX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STHX_RD_RD_RD_0_x_x_x_x_rb_r])));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STHX_RD_RD_RD_0_x_x_x_x_rs])));

}

static void ppc_instr_STH_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STH_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STH_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STH_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	ppc_mem_write16(PPC_M, TMP_EA, ((uint16_t)(PPC_GPR[PPC_STH_RD_D_LP_RD_RP__x_x_x_x_rs])));

}

static void ppc_instr_STBUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STBUX_RD_RD_RD_0_x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STBUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_STBUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_SWORD = PPC_GPR[PPC_STBUX_RD_RD_RD_0_x_x_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));
	PPC_GPR[PPC_STBUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STBU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STBU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_STBU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_STBU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	TMP_SWORD = PPC_GPR[PPC_STBU_RD_D_LP_RD_RP__x_x_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));
	PPC_GPR[PPC_STBU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_STBX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STBX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STBX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_STBX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_SWORD = PPC_GPR[PPC_STBX_RD_RD_RD_0_x_x_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));

}

static void ppc_instr_STB_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int32_t TMP_SWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_STB_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_STB_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_STB_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	TMP_SWORD = PPC_GPR[PPC_STB_RD_D_LP_RD_RP__x_x_x_x_rs];
	ppc_mem_write8(PPC_M, TMP_EA, ((uint8_t)(ppc_field32(TMP_SWORD, 7, (7 - (8 - 1))))));

}

static void ppc_instr_LSWX_RD_RD_RD_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_2;
	int32_t __gtmp_1;
	int32_t __gtmp_0;
	uint32_t TMP_WORD1;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	int8_t TMP_SBYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r];
	if((((uint32_t)(PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r)) == 0))
		__gtmp_1 = ((int32_t)(0));
	else
		__gtmp_1 = PPC_GPR[PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r];
	if(((((__gtmp_0 == 0) && (((uint32_t)(PPC_LSWX_RD_RD_RD_x_x_x_x_rd)) == 0)) || (__gtmp_1 == PPC_LSWX_RD_RD_RD_x_x_x_x_rd)) || (PPC_GPR[PPC_LSWX_RD_RD_RD_x_x_x_x_rb_r] == PPC_LSWX_RD_RD_RD_x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_WORD = (((uint32_t)(PPC_LSWX_RD_RD_RD_x_x_x_x_rd)) - 1);
	TMP_SBYTE = ((int8_t)(ppc_field32(PPC_XER, 6, 0)));
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r)) == 0))
		__gtmp_2 = ((int32_t)(0));
	else
		__gtmp_2 = PPC_GPR[PPC_LSWX_RD_RD_RD_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_2 + PPC_GPR[PPC_LSWX_RD_RD_RD_x_x_x_x_rb_r])));
gliss_LSWX_RD_RD_RD_0_:
	if((((int32_t)(TMP_SBYTE)) >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0)) {
			TMP_WORD = ((TMP_WORD + 1) % 32);
			PPC_GPR[TMP_WORD] = ((int32_t)(0));
		}
		TMP_WORD1 = ((uint32_t)(ppc_mem_read8(PPC_M, TMP_EA)));
		TMP_WORD1 = (TMP_WORD1 << ((31 - ((uint32_t)(TMP_BYTE))) - 7));
		TMP_WORD1 = (TMP_WORD1 & (255LU << ((31 - ((uint32_t)(TMP_BYTE))) - 7)));
		PPC_GPR[TMP_WORD] = ((int32_t)((((uint32_t)(PPC_GPR[TMP_WORD])) | TMP_WORD1)));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SBYTE = ((int8_t)((((int32_t)(TMP_SBYTE)) - ((int32_t)(1)))));
goto gliss_LSWX_RD_RD_RD_0_;
	}

}

static void ppc_instr_LSWI_RD_RD_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t __gtmp_1;
	int32_t __gtmp_0;
	uint32_t TMP_WORD1;
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	uint8_t TMP_BYTE;
	uint32_t TMP_WORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_WORD = (((uint32_t)(PPC_LSWI_RD_RD_D_x_x_x_x_rd)) - 1);
	TMP_BYTE = ((uint8_t)(0));
	if((((uint32_t)(PPC_LSWI_RD_RD_D_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LSWI_RD_RD_D_x_x_x_x_ra_r];
	TMP_EA = __gtmp_0;
	if((((uint32_t)(PPC_LSWI_RD_RD_D_x_x_x_x_NB_NB)) == 0))
		__gtmp_1 = 32;
	else
		__gtmp_1 = ((uint32_t)(PPC_LSWI_RD_RD_D_x_x_x_x_NB_NB));
	TMP_SHWORD = __gtmp_1;
gliss_LSWI_RD_RD_D_0_:
	if((((int32_t)(TMP_SHWORD)) >= ((int32_t)(0)))) {
		if((((uint32_t)(TMP_BYTE)) == 0)) {
			TMP_WORD = ((TMP_WORD + 1) % 32);
			PPC_GPR[TMP_WORD] = ((int32_t)(0));
		}
		TMP_WORD1 = ((uint32_t)(ppc_mem_read8(PPC_M, TMP_EA)));
		TMP_WORD1 = (TMP_WORD1 << ((31 - ((uint32_t)(TMP_BYTE))) - 7));
		TMP_WORD1 = (TMP_WORD1 & (255LU << ((31 - ((uint32_t)(TMP_BYTE))) - 7)));
		PPC_GPR[TMP_WORD] = ((int32_t)((((uint32_t)(PPC_GPR[TMP_WORD])) | TMP_WORD1)));
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 8)));
		if((((uint32_t)(TMP_BYTE)) == 32))
			TMP_BYTE = ((uint8_t)(0));
		TMP_EA = (TMP_EA + 1);
		TMP_SHWORD = ((int16_t)((((int32_t)(TMP_SHWORD)) - ((int32_t)(1)))));
goto gliss_LSWI_RD_RD_D_0_;
	}

}

static void ppc_instr_LMW_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LMW_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LMW_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LMW_RD_D_LP_RD_RP__x_x_x_x_d_n)))));
	TMP_BYTE = ((uint8_t)(PPC_LMW_RD_D_LP_RD_RP__x_x_x_x_rd));
gliss_LMW_RD_D_LP_RD_RP__0_:
	if((((uint32_t)(TMP_BYTE)) <= 31)) {
		PPC_GPR[TMP_BYTE] = ppc_mem_read32(PPC_M, TMP_EA);
		TMP_BYTE = ((uint8_t)((((uint32_t)(TMP_BYTE)) + 1)));
		TMP_EA = (TMP_EA + 4);
goto gliss_LMW_RD_D_LP_RD_RP__0_;
	}

}

static void ppc_instr_LWBRX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWBRX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWBRX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWBRX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LWBRX_RD_RD_RD_0_x_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LHBRX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHBRX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHBRX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHBRX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LHBRX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(ppc_mem_read16(PPC_M, TMP_EA)));
	PPC_GPR[PPC_LHBRX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHBRX_RD_RD_RD_0_x_x_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LWZUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LWZUX_RD_RD_RD_0_x_x_x_x_ra)) == 0) || (PPC_LWZUX_RD_RD_RD_0_x_x_x_x_ra == PPC_LWZUX_RD_RD_RD_0_x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LWZUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_LWZUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LWZUX_RD_RD_RD_0_x_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);
	PPC_GPR[PPC_LWZUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LWZU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0) || (PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_ra == PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	PPC_GPR[PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);
	PPC_GPR[PPC_LWZU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LWZX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWZX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWZX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LWZX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LWZX_RD_RD_RD_0_x_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LWZ_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LWZ_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LWZ_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LWZ_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	PPC_GPR[PPC_LWZ_RD_D_LP_RD_RP__x_x_x_x_rd] = ppc_mem_read32(PPC_M, TMP_EA);

}

static void ppc_instr_LHAUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHAUX_RD_RD_RD_0_x_x_x_x_ra)) == 0) || (PPC_LHAUX_RD_RD_RD_0_x_x_x_x_ra == PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_rd])))));
	PPC_GPR[PPC_LHAUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LHAU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0) || (PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_ra == PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_rd])))));
	PPC_GPR[PPC_LHAU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LHAX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHAX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rb_r])));
	PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHAX_RD_RD_RD_0_x_x_x_x_rd])))));

}

static void ppc_instr_LHA_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(0));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd])) & 65535LU)));
	if(ppc_bit8(TMP_BYTE, 7))
		PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((0xffff0000LU | ((uint32_t)(PPC_GPR[PPC_LHA_RD_D_LP_RD_RP__x_x_x_x_rd])))));

}

static void ppc_instr_LHZUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHZUX_RD_RD_RD_0_x_x_x_x_ra)) == 0) || (PPC_LHZUX_RD_RD_RD_0_x_x_x_x_ra == PPC_LHZUX_RD_RD_RD_0_x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));
	PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZUX_RD_RD_RD_0_x_x_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHZU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0) || (PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_ra == PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(0));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));
	PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZU_RD_D_LP_RD_RP__x_x_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHZX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHZX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHZX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LHZX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZX_RD_RD_RD_0_x_x_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LHZ_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	int16_t TMP_SHWORD;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, TMP_EA))), 15, (15 - (8 - 1)));
	TMP_SHWORD = ppc_set_field32(TMP_SHWORD, ((int8_t)(ppc_mem_read8(PPC_M, (TMP_EA + 1)))), 7, (7 - (8 - 1)));
	PPC_GPR[PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_SHWORD));
	PPC_GPR[PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((((uint32_t)(PPC_GPR[PPC_LHZ_RD_D_LP_RD_RP__x_x_x_x_rd])) & 65535LU)));

}

static void ppc_instr_LBZUX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LBZUX_RD_RD_RD_0_x_x_x_x_ra)) == 0) || (PPC_LBZUX_RD_RD_RD_0_x_x_x_x_ra == PPC_LBZUX_RD_RD_RD_0_x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_ra] + PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_rd])))));
	PPC_GPR[PPC_LBZUX_RD_RD_RD_0_x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LBZU_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(((((uint32_t)(PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_ra)) == 0) || (PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_ra == PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_rd)))
		launch_exception("instr", 6);
	TMP_EA = ((uint32_t)((PPC_GPR[PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_ra] + ((int32_t)(PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_rd])))));
	PPC_GPR[PPC_LBZU_RD_D_LP_RD_RP__x_x_x_x_ra] = ((int32_t)(TMP_EA));

}

static void ppc_instr_LBZX_RD_RD_RD_0_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LBZX_RD_RD_RD_0_x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LBZX_RD_RD_RD_0_x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + PPC_GPR[PPC_LBZX_RD_RD_RD_0_x_x_x_x_rb_r])));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZX_RD_RD_RD_0_x_x_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZX_RD_RD_RD_0_x_x_x_x_rd])))));

}

static void ppc_instr_LBZ_RD_D_LP_RD_RP__code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t __gtmp_0;
	uint8_t TMP_BYTE;
	uint32_t TMP_EA;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if((((uint32_t)(PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_ra_r)) == 0))
		__gtmp_0 = ((int32_t)(0));
	else
		__gtmp_0 = PPC_GPR[PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_ra_r];
	TMP_EA = ((uint32_t)((__gtmp_0 + ((int32_t)(PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_d_d)))));
	TMP_BYTE = ppc_mem_read8(PPC_M, TMP_EA);
	PPC_GPR[PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)(TMP_BYTE));
	PPC_GPR[PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_rd] = ((int32_t)((255LU & ((uint32_t)(PPC_GPR[PPC_LBZ_RD_D_LP_RD_RP__x_x_x_x_rd])))));

}

static void ppc_instr_SC_code(ppc_state_t *state, ppc_inst_t *inst) {
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	sc_impl("instr", "state", PPC_M);

}

static void ppc_instr_BCLRL_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BCLRL_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCLRL_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BCLRL_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BCLRL_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BCLRL_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCLRL_D_D_x_x_x_BO, 3)))))))
		PPC_NIA = (PPC_LR & 0xfffffffcLU);
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BCLR_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BCLR_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCLR_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BCLR_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BCLR_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BCLR_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCLR_D_D_x_x_x_BO, 3)))))))
		PPC_NIA = (PPC_LR & 0xfffffffcLU);

}

static void ppc_instr_BCCTRL_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCCTRL_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)(ppc_bit8(PPC_BCCTRL_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCCTRL_D_D_x_x_x_BO, 3))))))
		PPC_NIA = (PPC_CTR & 0xfffffffcLU);
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BCCTR_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCCTR_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)(ppc_bit8(PPC_BCCTR_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCCTR_D_D_x_x_x_BO, 3))))))
		PPC_NIA = (PPC_CTR & 0xfffffffcLU);

}

static void ppc_instr_BCLA_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BCLA_D_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCLA_D_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BCLA_D_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BCLA_D_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BCLA_D_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCLA_D_D_D_x_x_x_BO, 3))))))) {
		TMP_SWORD = ((int32_t)(PPC_BCLA_D_D_D_x_x_x_BD_n));
		PPC_NIA = (TMP_SWORD << 2);
	}
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BCL_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BCL_D_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCL_D_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BCL_D_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BCL_D_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BCL_D_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCL_D_D_D_x_x_x_BO, 3))))))) {
		TMP_SWORD = ((int32_t)(PPC_BCL_D_D_D_x_x_x_BD_n));
		PPC_NIA = (PPC_CIA + (TMP_SWORD << 2));
	}
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BCA_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BCA_D_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BCA_D_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BCA_D_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BCA_D_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BCA_D_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BCA_D_D_D_x_x_x_BO, 3))))))) {
		TMP_SWORD = ((int32_t)(PPC_BCA_D_D_D_x_x_x_BD_n));
		PPC_NIA = (TMP_SWORD << 2);
	}

}

static void ppc_instr_BC_D_D_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD1;
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	if(!ppc_bit8(PPC_BC_D_D_D_x_x_x_BO, 2))
		PPC_CTR = (PPC_CTR - 1);
	TMP_SWORD = ((int32_t)((31 - ((uint32_t)(PPC_BC_D_D_D_x_x_x_BI)))));
	TMP_SWORD1 = (TMP_SWORD / ((int32_t)(4)));
	TMP_SWORD = (TMP_SWORD - (TMP_SWORD1 * ((int32_t)(4))));
	if((((uint8_t)((ppc_bit8(PPC_BC_D_D_D_x_x_x_BO, 2) | (((uint8_t)((PPC_CTR != 0))) ^ ppc_bit8(PPC_BC_D_D_D_x_x_x_BO, 1))))) & (((uint8_t)(ppc_bit8(PPC_BC_D_D_D_x_x_x_BO, 4))) | (ppc_field8_generic(PPC_CR[TMP_SWORD1], TMP_SWORD, TMP_SWORD, 1 ) ^ ((uint8_t)(!ppc_bit8(PPC_BC_D_D_D_x_x_x_BO, 3))))))) {
		TMP_SWORD = ((int32_t)(PPC_BC_D_D_D_x_x_x_BD_n));
		PPC_NIA = (PPC_CIA + (TMP_SWORD << 2));
	}

}

static void ppc_instr_BLA_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)(PPC_BLA_D_x_x_BRANCH_ADDR_n));
	PPC_NIA = (TMP_SWORD << 2);
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BL_0X08X_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)(PPC_BL_0X08X_x_x_BRANCH_ADDR_n));
	PPC_NIA = (PPC_CIA + (TMP_SWORD << 2));
	PPC_LR = (PPC_CIA + 4);

}

static void ppc_instr_BA_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)(PPC_BA_D_x_x_BRANCH_ADDR_n));
	PPC_NIA = (TMP_SWORD << 2);

}

static void ppc_instr_B_D_code(ppc_state_t *state, ppc_inst_t *inst) {
	int32_t TMP_SWORD;
	PPC_PIA = PPC_CIA;
	PPC_CIA = PPC_NIA;
	PPC_NIA = (PPC_NIA + 4);
	TMP_SWORD = ((int32_t)(PPC_B_D_x_x_BRANCH_ADDR_n));
	PPC_NIA = (PPC_CIA + (TMP_SWORD << 2));

}




typedef void (*ppc_code_function_t)(ppc_state_t *, ppc_inst_t *);

ppc_code_function_t ppc_code_table[] =
{
	ppc_instr_UNKNOWN_code,
	ppc_instr_WRTEE_D_code,
	ppc_instr_WRTEE_RD_code,
	ppc_instr_TLBWE_code,
	ppc_instr_TLBSYNC_code,
	ppc_instr_TLBSX_RD__RD_code,
	ppc_instr_TLBRE_code,
	ppc_instr_TLBIVAX_RD__RD_code,
	ppc_instr_MSYNC_code,
	ppc_instr_MTDCR_D__RD_code,
	ppc_instr_MFDCR__RD__D_code,
	ppc_instr_MBAR_D_code,
	ppc_instr_ICBT_D__RD__RD_code,
	ppc_instr_XOR__RD_RD_RD_code,
	ppc_instr_XOR_RD_RD_RD_code,
	ppc_instr_ICBI_RD_RD_code,
	ppc_instr_DCBZ_RD_RD_code,
	ppc_instr_DCBTST_RD_RD_code,
	ppc_instr_DCBT_RD_RD_code,
	ppc_instr_DCBST_RD_RD_code,
	ppc_instr_DCBI_RD__RD_code,
	ppc_instr_DCBF_RD__RD_code,
	ppc_instr_DCBA_RD_RD_code,
	ppc_instr_TW_D_RD_RD_code,
	ppc_instr_MFCR_RD_code,
	ppc_instr_SUBFZEO__RD_RD_code,
	ppc_instr_SUBFZEO_RD_RD_code,
	ppc_instr_SUBFZE__RD_RD_code,
	ppc_instr_SUBFZE_RD_RD_code,
	ppc_instr_SUBFMEO__RD_RD_code,
	ppc_instr_SUBFMEO_RD_RD_code,
	ppc_instr_SUBFME__RD_RD_code,
	ppc_instr_SUBFME_RD_RD_code,
	ppc_instr_SUBFEO__RD_RD_RD_code,
	ppc_instr_SUBFEO_RD_RD_RD_code,
	ppc_instr_SUBFE__RD_RD_RD_code,
	ppc_instr_SUBFE_RD_RD_RD_code,
	ppc_instr_SUBFCO__RD_RD_RD_code,
	ppc_instr_SUBFCO_RD_RD_RD_code,
	ppc_instr_SUBFC__RD_RD_RD_code,
	ppc_instr_SUBFC_RD_RD_RD_code,
	ppc_instr_SUBFO__RD_RD_RD_code,
	ppc_instr_SUBFO_RD_RD_RD_code,
	ppc_instr_SUBF__RD_RD_RD_code,
	ppc_instr_SUBF_RD_RD_RD_code,
	ppc_instr_STWCX__RD_RD_RD_code,
	ppc_instr_STWBRX_RD_RD_RD_code,
	ppc_instr_STSWI_RD_RD_D_code,
	ppc_instr_STSWX_RD_RD_RD_code,
	ppc_instr_STHBRX_RD_RD_RD_code,
	ppc_instr_STWUX_RD_RD_RD_code,
	ppc_instr_STWX_RD_RD_RD_code,
	ppc_instr_STHUX_RD_RD_RD_code,
	ppc_instr_STHX_RD_RD_RD_code,
	ppc_instr_STBUX_RD_RD_RD_code,
	ppc_instr_STBX_RD_RD_RD_code,
	ppc_instr_SRW__RD_RD_RD_code,
	ppc_instr_SRW_RD_RD_RD_code,
	ppc_instr_SRAWI__RD_RD_D_code,
	ppc_instr_SRAWI_RD_RD_D_code,
	ppc_instr_SRAW__RD_RD_RD_code,
	ppc_instr_SRAW_RD_RD_RD_code,
	ppc_instr_SLW__RD_RD_RD_code,
	ppc_instr_SLW_RD_RD_RD_code,
	ppc_instr_ORC__RD_RD_RD_code,
	ppc_instr_ORC_RD_RD_RD_code,
	ppc_instr_OR__RD_RD_RD_code,
	ppc_instr_OR_RD_RD_RD_code,
	ppc_instr_MTSPR_D_RD_code,
	ppc_instr_MTMSR_RD_code,
	ppc_instr_MFSPR_RD_D_code,
	ppc_instr_MFMSR_RD_code,
	ppc_instr_NOR__RD_RD_RD_code,
	ppc_instr_NOR_RD_RD_RD_code,
	ppc_instr_NEGO__RD_RD_code,
	ppc_instr_NEGO_RD_RD_code,
	ppc_instr_NEG__RD_RD_code,
	ppc_instr_NEG_RD_RD_code,
	ppc_instr_NAND__RD_RD_RD_code,
	ppc_instr_NAND_RD_RD_RD_code,
	ppc_instr_MULLWO__RD_RD_RD_code,
	ppc_instr_MULLWO_RD_RD_RD_code,
	ppc_instr_MULLW__RD_RD_RD_code,
	ppc_instr_MULLW_RD_RD_RD_code,
	ppc_instr_MULHWU__RD_RD_RD_code,
	ppc_instr_MULHWU_RD_RD_RD_code,
	ppc_instr_MULHW__RD_RD_RD_code,
	ppc_instr_MULHW_RD_RD_RD_code,
	ppc_instr_MTSPR_S_RD_code,
	ppc_instr_MCRXR_CRFD_code,
	ppc_instr_MTCRF_D_RD_code,
	ppc_instr_MFSPR_RD_S_code,
	ppc_instr_LWARX_RD_RD_RD_code,
	ppc_instr_LWBRX_RD_RD_RD_code,
	ppc_instr_LWZUX_RD_RD_RD_code,
	ppc_instr_LWZX_RD_RD_RD_code,
	ppc_instr_LHZUX_RD_RD_RD_code,
	ppc_instr_LHZX_RD_RD_RD_code,
	ppc_instr_LHBRX_RD_RD_RD_code,
	ppc_instr_LHAUX_RD_RD_RD_code,
	ppc_instr_LHAX_RD_RD_RD_code,
	ppc_instr_LBZUX_RD_RD_RD_code,
	ppc_instr_LBZX_RD_RD_RD_code,
	ppc_instr_ISEL_RD__RD__R5B__D_code,
	ppc_instr_EXTSH__RD_RD_code,
	ppc_instr_EXTSH_RD_RD_code,
	ppc_instr_EXTSB__RD_RD_code,
	ppc_instr_EXTSB_RD_RD_code,
	ppc_instr_EQV__RD_RD_RD_code,
	ppc_instr_EQV_RD_RD_RD_code,
	ppc_instr_DIVWUO__RD_RD_RD_code,
	ppc_instr_DIVWUO_RD_RD_RD_code,
	ppc_instr_DIVWU__RD_RD_RD_code,
	ppc_instr_DIVWU_RD_RD_RD_code,
	ppc_instr_DIVWO__RD_RD_RD_code,
	ppc_instr_DIVWO_RD_RD_RD_code,
	ppc_instr_DIVW__RD_RD_RD_code,
	ppc_instr_DIVW_RD_RD_RD_code,
	ppc_instr_CNTLZW__RD__RD_code,
	ppc_instr_CNTLZW_RD__RD_code,
	ppc_instr_CMPL_D_D_RD_RD_code,
	ppc_instr_CMP_D_D_RD_RD_code,
	ppc_instr_ANDC__RD_RD_RD_code,
	ppc_instr_ANDC_RD_RD_RD_code,
	ppc_instr_AND__RD_RD_RD_code,
	ppc_instr_AND_RD_RD_RD_code,
	ppc_instr_ADDZEO__RD_RD_code,
	ppc_instr_ADDZEO_RD_RD_code,
	ppc_instr_ADDZE__RD_RD_code,
	ppc_instr_ADDZE_RD_RD_code,
	ppc_instr_ADDMEO__RD_RD_code,
	ppc_instr_ADDMEO_RD_RD_code,
	ppc_instr_ADDME__RD_RD_code,
	ppc_instr_ADDME_RD_RD_code,
	ppc_instr_ADDEO__RD_RD_RD_code,
	ppc_instr_ADDEO_RD_RD_RD_code,
	ppc_instr_ADDE__RD_RD_RD_code,
	ppc_instr_ADDE_RD_RD_RD_code,
	ppc_instr_ADDCO__RD_RD_RD_code,
	ppc_instr_ADDCO_RD_RD_RD_code,
	ppc_instr_ADDC__RD_RD_RD_code,
	ppc_instr_ADDC_RD_RD_RD_code,
	ppc_instr_ADDSS_RD_RD_RD_code,
	ppc_instr_E_XORIS_RD__RD__X_code,
	ppc_instr_E_SUBFICS_RD__RD__D_code,
	ppc_instr_E_STMW_RD__D_LP_RD_RP__code,
	ppc_instr_E_STWU_RD__D_LP_RD_RP__code,
	ppc_instr_E_STW_RD__D_LP_RD_RP__code,
	ppc_instr_E_STHU_RD__D_LP_RD_RP__code,
	ppc_instr_E_STH_RD__D_LP_RD_RP__code,
	ppc_instr_E_STBU_RD__D_LP_RD_RP__code,
	ppc_instr_E_STB_RD__D_LP_RD_RP__code,
	ppc_instr_E_SRWIS_RD__RD__D_code,
	ppc_instr_E_SLWIS_RD__RD__D_code,
	ppc_instr_E_RLWINM_RD__RD__D__D__D_code,
	ppc_instr_E_RLWIMI_RD__RD__D__D__D_code,
	ppc_instr_E_RLWIS_RD__RD__D_code,
	ppc_instr_E_RLWS_RD__RD__RD_code,
	ppc_instr_E_ORIS_RD__RD__X_code,
	ppc_instr_E_OR2IS_RD__X_code,
	ppc_instr_E_OR2I_RD__X_code,
	ppc_instr_E_MULL2I_RD__D_code,
	ppc_instr_E_MULLI_RD__RD__D_code,
	ppc_instr_E_MCRF_CRD__CRD_code,
	ppc_instr_E_LMW_RD__D_LP_RD_RP__code,
	ppc_instr_E_LWZU_RD__D_LP_RD_RP__code,
	ppc_instr_E_LWZ_RD__D_LP_RD_RP__code,
	ppc_instr_E_LIS_RD__X_code,
	ppc_instr_E_LI_RD__X_code,
	ppc_instr_E_LHZU_RD__D_LP_RD_RP__code,
	ppc_instr_E_LHZ_RD__D_LP_RD_RP__code,
	ppc_instr_E_LHAU_RD__D_LP_RD_RP__code,
	ppc_instr_E_LHA_RD__D_LP_RD_RP__code,
	ppc_instr_E_LBZU_RD__D_LP_RD_RP__code,
	ppc_instr_E_LBZ_RD__D_LP_RD_RP__code,
	ppc_instr_E_CRXOR_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CRORC_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CROR_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CRNOR_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CRNAND_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CREQV_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CRANDC_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CRAND_CRBD__CRBD__CRBD_code,
	ppc_instr_E_CMPLI_CRD__RD__D_code,
	ppc_instr_E_CMPL16I_RD__D_code,
	ppc_instr_E_CMPI_CRD__RD__D_code,
	ppc_instr_E_CMPHL16I_RD__D_code,
	ppc_instr_E_CMPHL_CRD__RD__RD_code,
	ppc_instr_E_CMPH16I_RD__D_code,
	ppc_instr_E_CMPH_CRD__RD__RD_code,
	ppc_instr_E_CMP16I_RD__D_code,
	ppc_instr_E_BCS_X__X_08X_code,
	ppc_instr_E_BS_08X_code,
	ppc_instr_E_ADDICS_RD__RD__D_code,
	ppc_instr_E_AND2IS__RD__D_code,
	ppc_instr_E_AND2I__RD__D_code,
	ppc_instr_E_ADDICS_RD__RD__D_0_code,
	ppc_instr_E_ADDIS_RD__RD__D_code,
	ppc_instr_E_ADD2IS_RD__D_code,
	ppc_instr_E_ADD2I__RD__D_code,
	ppc_instr_E_ADD16I_RD__RD__D_code,
	ppc_instr_SE_SUBIS_RD__D_code,
	ppc_instr_SE_SUBF_RD__RD_code,
	ppc_instr_SE_SUB_RD__RD_code,
	ppc_instr_SE_STW_RD__D_LP_RD_RP__code,
	ppc_instr_SE_STH_RD__D_LP_RD_RP__code,
	ppc_instr_SE_STB_RD__D_LP_RD_RP__code,
	ppc_instr_SE_SRWI_RD__D_code,
	ppc_instr_SE_SRW_RD__RD_code,
	ppc_instr_SE_SRAWI_RD__D_code,
	ppc_instr_SE_SRAW_RD__RD_code,
	ppc_instr_SE_SLWI_RD__D_code,
	ppc_instr_SE_SLW_RD__RD_code,
	ppc_instr_SE_SC_code,
	ppc_instr_SE_RFI_code,
	ppc_instr_SE_RFDI_code,
	ppc_instr_SE_RFCI_code,
	ppc_instr_SE_OR_RD__RD_code,
	ppc_instr_SE_NOT_RD_code,
	ppc_instr_SE_NEG_RD_code,
	ppc_instr_SE_MULLW_RD__RD_code,
	ppc_instr_SE_MTLR_RD_code,
	ppc_instr_SE_MTCTR_RD_code,
	ppc_instr_SE_MTAR_RD__RD_code,
	ppc_instr_SE_MR_RD__RD_code,
	ppc_instr_SE_MFLR_RD_code,
	ppc_instr_SE_MFCTR_RD_code,
	ppc_instr_SE_MFAR_RD__RD_code,
	ppc_instr_SE_LI_RD__D_code,
	ppc_instr_SE_LWZ_RD__D_LP_RD_RP__code,
	ppc_instr_SE_LHZ_RD__D_LP_RD_RP__code,
	ppc_instr_SE_LBZ_RD__D_LP_RD_RP__code,
	ppc_instr_SE_EXTZH_RD_code,
	ppc_instr_SE_EXTZB_RD_code,
	ppc_instr_SE_EXTSH_RD_code,
	ppc_instr_SE_EXTSB_RD_code,
	ppc_instr_SE_CMPLI_RD__D_code,
	ppc_instr_SE_CMPL_RD__RD_code,
	ppc_instr_SE_CMPI_RD__D_code,
	ppc_instr_SE_CMPHL_RD__RD_code,
	ppc_instr_SE_CMPH_RD__RD_code,
	ppc_instr_SE_CMP_RD__RD_code,
	ppc_instr_SE_BTSTI_RD__D_code,
	ppc_instr_SE_BSETI_RD__D_code,
	ppc_instr_SE_BMSKI_RD__D_code,
	ppc_instr_BLRS_code,
	ppc_instr_BGENI_RD__D_code,
	ppc_instr_SE_BCTRS_code,
	ppc_instr_BCLRI_RD__D_code,
	ppc_instr_SE_BC_X__X__08X_code,
	ppc_instr_SE_BS_08X_code,
	ppc_instr_SE_ANDC_RD__RD_code,
	ppc_instr_SE_ANDI_RD__D_code,
	ppc_instr_E_ANDS_RD__RD__code,
	ppc_instr_SE_ADDI_RD__D_code,
	ppc_instr_SE_ADD_RD_RD_code,
	ppc_instr_MFAPIDI_RD__RD_code,
	ppc_instr_TLBSYNC_0_code,
	ppc_instr_TLBIE_RD_code,
	ppc_instr_TLBIA_code,
	ppc_instr_RFI_code,
	ppc_instr_MTSRIN_RD_RD_code,
	ppc_instr_MTSR_D_RD_code,
	ppc_instr_MFSRIN_RD_RD_code,
	ppc_instr_MFSR_RD_D_code,
	ppc_instr_MTSPR_D_RD_0_code,
	ppc_instr_MTMSR_RD_0_code,
	ppc_instr_MFSPR_RD_D_0_code,
	ppc_instr_MFMSR_RD_0_code,
	ppc_instr_MFTB_RD_D_code,
	ppc_instr_ISYNC_code,
	ppc_instr_EIEIO_code,
	ppc_instr_ECOWX_RD_RD_RD_code,
	ppc_instr_ECIWX_RD_RD_RD_code,
	ppc_instr_ICBI_RD_RD_0_code,
	ppc_instr_DCBZ_RD_RD_0_code,
	ppc_instr_DCBTST_RD_RD_0_code,
	ppc_instr_DCBT_RD_RD_0_code,
	ppc_instr_DCBST_RD_RD_0_code,
	ppc_instr_DCBI_RD__RD_0_code,
	ppc_instr_DCBF_RD__RD_0_code,
	ppc_instr_DCBA_RD_RD_0_code,
	ppc_instr_MTFSFI__CRFD_D_code,
	ppc_instr_MTFSFI_CRFD_D_code,
	ppc_instr_MTFSF__D_FRD_code,
	ppc_instr_MTFSF_D_FRD_code,
	ppc_instr_MTFSB1__CRBD_code,
	ppc_instr_MTFSB1_CRBD_code,
	ppc_instr_MTFSB0__CRBD_code,
	ppc_instr_MTFSB0_CRBD_code,
	ppc_instr_MFFS__FRD_code,
	ppc_instr_MFFS_FRD_code,
	ppc_instr_MCRFS_CRFD_CRFD_code,
	ppc_instr_FCTIWZ__FRD_FRD_code,
	ppc_instr_FCTIWZ_FRD_FRD_code,
	ppc_instr_FCTIW__FRD_FRD_code,
	ppc_instr_FCTIW_FRD_FRD_code,
	ppc_instr_FRSP__FRD_FRD_code,
	ppc_instr_FRSP_FRD_FRD_code,
	ppc_instr_FNABS__FRD_FRD_code,
	ppc_instr_FNABS_FRD_FRD_code,
	ppc_instr_FABS__FRD_FRD_code,
	ppc_instr_FABS_FRD_FRD_code,
	ppc_instr_FNEG__FRD_FRD_code,
	ppc_instr_FNEG_FRD_FRD_code,
	ppc_instr_FMR__FRD_FRD_code,
	ppc_instr_FMR_FRD_FRD_code,
	ppc_instr_FCMPU_CRFD_FRD_FRD_code,
	ppc_instr_FCMPO_CRFD_FRD_FRD_code,
	ppc_instr_FNMSUBS__FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMSUBS_FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMSUB__FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMSUB_FRD_FRD_FRD_FRD_code,
	ppc_instr_FMSUBS__FRD_FRD_FRD_FRD_code,
	ppc_instr_FMSUBS_FRD_FRD_FRD_FRD_code,
	ppc_instr_FMSUB__FRD_FRD_FRD_FRD_code,
	ppc_instr_FMSUB_FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMADDS__FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMADDS_FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMADD__FRD_FRD_FRD_FRD_code,
	ppc_instr_FNMADD_FRD_FRD_FRD_FRD_code,
	ppc_instr_FMADDS__FRD_FRD_FRD_FRD_code,
	ppc_instr_FMADDS_FRD_FRD_FRD_FRD_code,
	ppc_instr_FMADD__FRD_FRD_FRD_FRD_code,
	ppc_instr_FMADD_FRD_FRD_FRD_FRD_code,
	ppc_instr_FDIVS__FRD_FRD_FRD_code,
	ppc_instr_FDIVS_FRD_FRD_FRD_code,
	ppc_instr_FDIV__FRD_FRD_FRD_code,
	ppc_instr_FDIV_FRD_FRD_FRD_code,
	ppc_instr_FMULS__FRD_FRD_FRD_code,
	ppc_instr_FMULS_FRD_FRD_FRD_code,
	ppc_instr_FMUL__FRD_FRD_FRD_code,
	ppc_instr_FMUL_FRD_FRD_FRD_code,
	ppc_instr_FSUBS__FRD_FRD_FRD_code,
	ppc_instr_FSUBS_FRD_FRD_FRD_code,
	ppc_instr_FSUB__FRD_FRD_FRD_code,
	ppc_instr_FSUB_FRD_FRD_FRD_code,
	ppc_instr_FADDS__FRD_FRD_FRD_code,
	ppc_instr_FADDS_FRD_FRD_FRD_code,
	ppc_instr_FADD__FRD_FRD_FRD_code,
	ppc_instr_FADD_FRD_FRD_FRD_code,
	ppc_instr_STFSUX_FRD_RD_RD_code,
	ppc_instr_STFSU_FRD_D_LP_RD_RP__code,
	ppc_instr_STFSX_FRD_RD_RD_code,
	ppc_instr_STFS_FRD_D_LP_RD_RP__code,
	ppc_instr_STFDUX_FRD_RD_RD_code,
	ppc_instr_STFDU_FRD_D_LP_RD_RP__code,
	ppc_instr_STFDX_FRD_RD_RD_code,
	ppc_instr_STFD_FRD_D_LP_RD_RP__code,
	ppc_instr_LFSUX_FRD_RD_RD_code,
	ppc_instr_LFSU_FRD_D_LP_RD_RP__code,
	ppc_instr_LFSX_FRD_RD_RD_code,
	ppc_instr_LFS_FRD_D_LP_RD_RP__code,
	ppc_instr_LFDUX_FRD_RD_RD_code,
	ppc_instr_LFDU_FRD_D_LP_RD_RP__code,
	ppc_instr_LFDX_FRD_RD_RD_code,
	ppc_instr_LFD_FRD_D_LP_RD_RP__code,
	ppc_instr_TWI_D_RD_D_code,
	ppc_instr_TW_D_RD_RD_0_code,
	ppc_instr_SYNC_code,
	ppc_instr_STWCX__RD_RD_RD_0_code,
	ppc_instr_LWARX_RD_RD_RD_0_code,
	ppc_instr_MFSPR_RD_S_0_code,
	ppc_instr_MTSPR_S_RD_0_code,
	ppc_instr_MFCR_RD_0_code,
	ppc_instr_ISEL_RD__RD__R5B__D_0_code,
	ppc_instr_MCRXR_CRFD_0_code,
	ppc_instr_MTCRF_D_RD_0_code,
	ppc_instr_MCRF_CRFD_CRFD_code,
	ppc_instr_CRORC_CRBD_CRBD_CRBD_code,
	ppc_instr_CRANDC_CRBD_CRBD_CRBD_code,
	ppc_instr_CREQV_CRBD_CRBD_CRBD_code,
	ppc_instr_CRNOR_CRBD_CRBD_CRBD_code,
	ppc_instr_CRNAND_CRBD_CRBD_CRBD_code,
	ppc_instr_CRXOR_CRBD_CRBD_CRBD_code,
	ppc_instr_CROR_CRBD_CRBD_CRBD_code,
	ppc_instr_CRAND_CRBD_CRBD_CRBD_code,
	ppc_instr_SRAW__RD_RD_RD_0_code,
	ppc_instr_SRAW_RD_RD_RD_0_code,
	ppc_instr_SRAWI__RD_RD_D_0_code,
	ppc_instr_SRAWI_RD_RD_D_0_code,
	ppc_instr_SRW__RD_RD_RD_0_code,
	ppc_instr_SRW_RD_RD_RD_0_code,
	ppc_instr_SLW__RD_RD_RD_0_code,
	ppc_instr_SLW_RD_RD_RD_0_code,
	ppc_instr_RLWIMI__RD_RD_D_D_D_code,
	ppc_instr_RLWIMI_RD_RD_D_D_D_code,
	ppc_instr_RLWNM__RD_RD_RD_D_D_code,
	ppc_instr_RLWNM_RD_RD_RD_D_D_code,
	ppc_instr_RLWINM__RD_RD_D_D_D_code,
	ppc_instr_RLWINM_RD_RD_D_D_D_code,
	ppc_instr_CNTLZW__RD__RD_0_code,
	ppc_instr_CNTLZW_RD__RD_0_code,
	ppc_instr_EXTSH__RD_RD_0_code,
	ppc_instr_EXTSH_RD_RD_0_code,
	ppc_instr_EXTSB__RD_RD_0_code,
	ppc_instr_EXTSB_RD_RD_0_code,
	ppc_instr_EQV__RD_RD_RD_0_code,
	ppc_instr_EQV_RD_RD_RD_0_code,
	ppc_instr_NAND__RD_RD_RD_0_code,
	ppc_instr_NAND_RD_RD_RD_0_code,
	ppc_instr_NOR__RD_RD_RD_0_code,
	ppc_instr_NOR_RD_RD_RD_0_code,
	ppc_instr_XORIS_RD_RD_D_code,
	ppc_instr_XORI_RD_RD_D_code,
	ppc_instr_XOR__RD_RD_RD_0_code,
	ppc_instr_XOR_RD_RD_RD_0_code,
	ppc_instr_ANDC__RD_RD_RD_0_code,
	ppc_instr_ANDC_RD_RD_RD_0_code,
	ppc_instr_ANDIS__RD_RD_D_code,
	ppc_instr_ANDI__RD_RD_D_code,
	ppc_instr_AND__RD_RD_RD_0_code,
	ppc_instr_AND_RD_RD_RD_0_code,
	ppc_instr_ORC__RD_RD_RD_0_code,
	ppc_instr_ORC_RD_RD_RD_0_code,
	ppc_instr_ORIS_RD_RD_D_code,
	ppc_instr_ORI_RD_RD_D_code,
	ppc_instr_OR__RD_RD_RD_0_code,
	ppc_instr_OR_RD_RD_RD_0_code,
	ppc_instr_CMPL_D_D_RD_RD_0_code,
	ppc_instr_CMPLI_D_D_RD_D_code,
	ppc_instr_CMP_D_D_RD_RD_0_code,
	ppc_instr_CMPI_D_D_RD_D_code,
	ppc_instr_NEGO__RD_RD_0_code,
	ppc_instr_NEGO_RD_RD_0_code,
	ppc_instr_NEG__RD_RD_0_code,
	ppc_instr_NEG_RD_RD_0_code,
	ppc_instr_DIVWUO__RD_RD_RD_0_code,
	ppc_instr_DIVWUO_RD_RD_RD_0_code,
	ppc_instr_DIVWU__RD_RD_RD_0_code,
	ppc_instr_DIVWU_RD_RD_RD_0_code,
	ppc_instr_DIVWO__RD_RD_RD_0_code,
	ppc_instr_DIVWO_RD_RD_RD_0_code,
	ppc_instr_DIVW__RD_RD_RD_0_code,
	ppc_instr_DIVW_RD_RD_RD_0_code,
	ppc_instr_MULHWU__RD_RD_RD_0_code,
	ppc_instr_MULHWU_RD_RD_RD_0_code,
	ppc_instr_MULHW__RD_RD_RD_0_code,
	ppc_instr_MULHW_RD_RD_RD_0_code,
	ppc_instr_MULLI_RD_RD_D_code,
	ppc_instr_MULLWO__RD_RD_RD_0_code,
	ppc_instr_MULLWO_RD_RD_RD_0_code,
	ppc_instr_MULLW__RD_RD_RD_0_code,
	ppc_instr_MULLW_RD_RD_RD_0_code,
	ppc_instr_SUBFZEO__RD_RD_0_code,
	ppc_instr_SUBFZEO_RD_RD_0_code,
	ppc_instr_SUBFZE__RD_RD_0_code,
	ppc_instr_SUBFZE_RD_RD_0_code,
	ppc_instr_SUBFMEO__RD_RD_0_code,
	ppc_instr_SUBFMEO_RD_RD_0_code,
	ppc_instr_SUBFME__RD_RD_0_code,
	ppc_instr_SUBFME_RD_RD_0_code,
	ppc_instr_SUBFEO__RD_RD_RD_0_code,
	ppc_instr_SUBFEO_RD_RD_RD_0_code,
	ppc_instr_SUBFE__RD_RD_RD_0_code,
	ppc_instr_SUBFE_RD_RD_RD_0_code,
	ppc_instr_SUBFCO__RD_RD_RD_0_code,
	ppc_instr_SUBFCO_RD_RD_RD_0_code,
	ppc_instr_SUBFC__RD_RD_RD_0_code,
	ppc_instr_SUBFC_RD_RD_RD_0_code,
	ppc_instr_SUBFIC_RD_RD_D_code,
	ppc_instr_SUBFO__RD_RD_RD_0_code,
	ppc_instr_SUBFO_RD_RD_RD_0_code,
	ppc_instr_SUBF__RD_RD_RD_0_code,
	ppc_instr_SUBF_RD_RD_RD_0_code,
	ppc_instr_ADDZEO__RD_RD_0_code,
	ppc_instr_ADDZEO_RD_RD_0_code,
	ppc_instr_ADDZE__RD_RD_0_code,
	ppc_instr_ADDZE_RD_RD_0_code,
	ppc_instr_ADDMEO__RD_RD_0_code,
	ppc_instr_ADDMEO_RD_RD_0_code,
	ppc_instr_ADDME__RD_RD_0_code,
	ppc_instr_ADDME_RD_RD_0_code,
	ppc_instr_ADDEO__RD_RD_RD_0_code,
	ppc_instr_ADDEO_RD_RD_RD_0_code,
	ppc_instr_ADDE__RD_RD_RD_0_code,
	ppc_instr_ADDE_RD_RD_RD_0_code,
	ppc_instr_ADDCO__RD_RD_RD_0_code,
	ppc_instr_ADDCO_RD_RD_RD_0_code,
	ppc_instr_ADDC__RD_RD_RD_0_code,
	ppc_instr_ADDC_RD_RD_RD_0_code,
	ppc_instr_ADDIC__RD_RD_D_code,
	ppc_instr_ADDIC_RD_RD_D_code,
	ppc_instr_ADDIS_RD_RD_D_code,
	ppc_instr_ADDI_RD_RD_D_code,
	ppc_instr_ADDSS_RD_RD_RD_0_code,
	ppc_instr_STSWX_RD_RD_RD_0_code,
	ppc_instr_STSWI_RD_RD_D_0_code,
	ppc_instr_STMW_RD_D_LP_RD_RP__code,
	ppc_instr_STWBRX_RD_RD_RD_0_code,
	ppc_instr_STHBRX_RD_RD_RD_0_code,
	ppc_instr_STWUX_RD_RD_RD_0_code,
	ppc_instr_STWU_RD_D_LP_RD_RP__code,
	ppc_instr_STWX_RD_RD_RD_0_code,
	ppc_instr_STW_RD_D_LP_RD_RP__code,
	ppc_instr_STHUX_RD_RD_RD_0_code,
	ppc_instr_STHU_RD_D_LP_RD_RP__code,
	ppc_instr_STHX_RD_RD_RD_0_code,
	ppc_instr_STH_RD_D_LP_RD_RP__code,
	ppc_instr_STBUX_RD_RD_RD_0_code,
	ppc_instr_STBU_RD_D_LP_RD_RP__code,
	ppc_instr_STBX_RD_RD_RD_0_code,
	ppc_instr_STB_RD_D_LP_RD_RP__code,
	ppc_instr_LSWX_RD_RD_RD_code,
	ppc_instr_LSWI_RD_RD_D_code,
	ppc_instr_LMW_RD_D_LP_RD_RP__code,
	ppc_instr_LWBRX_RD_RD_RD_0_code,
	ppc_instr_LHBRX_RD_RD_RD_0_code,
	ppc_instr_LWZUX_RD_RD_RD_0_code,
	ppc_instr_LWZU_RD_D_LP_RD_RP__code,
	ppc_instr_LWZX_RD_RD_RD_0_code,
	ppc_instr_LWZ_RD_D_LP_RD_RP__code,
	ppc_instr_LHAUX_RD_RD_RD_0_code,
	ppc_instr_LHAU_RD_D_LP_RD_RP__code,
	ppc_instr_LHAX_RD_RD_RD_0_code,
	ppc_instr_LHA_RD_D_LP_RD_RP__code,
	ppc_instr_LHZUX_RD_RD_RD_0_code,
	ppc_instr_LHZU_RD_D_LP_RD_RP__code,
	ppc_instr_LHZX_RD_RD_RD_0_code,
	ppc_instr_LHZ_RD_D_LP_RD_RP__code,
	ppc_instr_LBZUX_RD_RD_RD_0_code,
	ppc_instr_LBZU_RD_D_LP_RD_RP__code,
	ppc_instr_LBZX_RD_RD_RD_0_code,
	ppc_instr_LBZ_RD_D_LP_RD_RP__code,
	ppc_instr_SC_code,
	ppc_instr_BCLRL_D_D_code,
	ppc_instr_BCLR_D_D_code,
	ppc_instr_BCCTRL_D_D_code,
	ppc_instr_BCCTR_D_D_code,
	ppc_instr_BCLA_D_D_D_code,
	ppc_instr_BCL_D_D_D_code,
	ppc_instr_BCA_D_D_D_code,
	ppc_instr_BC_D_D_D_code,
	ppc_instr_BLA_D_code,
	ppc_instr_BL_0X08X_code,
	ppc_instr_BA_D_code,
	ppc_instr_B_D_code
};



#if defined(__cplusplus)
}
#endif

#endif /* GLISS_PPC_INCLUDE_PPC_DECODE_TABLE_H */
