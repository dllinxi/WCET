/* Generated by gep ($(date)) copyright (c) 2008 IRIT - UPS */
#ifndef GLISS_$(PROC)_INCLUDE_$(PROC)_REGS_H
#define GLISS_$(PROC)_INCLUDE_$(PROC)_REGS_H

#include "api.h"

#ifdef __cplusplus
extern "C"  {
#endif

/* register identifier  */
typedef enum $(proc)_reg_t {
	$(PROC)_NO_REG = 0$(foreach registers)$(if !aliased),
	$(PROC)_$(NAME)_REG$(end)$(end)
} $(proc)_reg_t;


/* access type */
typedef enum $(proc)_reg_access_t {
	$(PROC)_REG_READ = 0,
	$(PROC)_REG_WRITE = 1
} $(proc)_reg_access_t;

/* register usage structure */
typedef struct $(proc)_reg_use_t {
	$(proc)reg_t id;
	unsigned short index;
	unsigned short access;	/* $(PROC)_reg_access_t */
} $(proc)_reg_use_t;

/* function declaration */
#define $(PROC)_REG_USAGE_MAX	$(REG_USAGE_MAX)
int $(proc)_register_usage($(proc)_inst_t *inst, $(proc)_reg_use_t *regs);

#ifdef __cplusplus
}
#endif

#endif /* GLISS_$(PROC)_INCLUDE_$(PROC)_REGS_H */
