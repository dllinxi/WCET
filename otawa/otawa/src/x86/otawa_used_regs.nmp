
// ****** read/write register macros ******

macro rzero(r) = \
	if r.value == 0 then -1 else rr(r.value) endif
macro CR_REG(x) = \
	((31 - (x))/4) \

macro rr(n) = \
	((READ_REG << 24) | (BANK_GPR << 16) | ((n) & 0xFFFF)) \
macro wr(n) = \
	((WRITE_REG << 24) | (BANK_GPR << 16) | ((n) & 0xFFFF)) \

// TODO		Seems to the same than rr and wr !
macro gpr_read(n) = \
	((READ_REG << 24) | (BANK_GPR << 16) | ((n) & 0xFFFF)) \
macro gpr_write(n) = \
	((WRITE_REG << 24) | (BANK_GPR << 16) | ((n) & 0xFFFF)) \

macro gpr_read_range(l, u) = \
	((READ_RANGE << 24) | (BANK_GPR << 16) | (((l) & 0xFF) << 8) | ((u) & 0xFF)) \
macro gpr_write_range(l, u) = \
	((WRITE_RANGE << 24) | (BANK_GPR << 16) | (((l) & 0xFF) << 8) | ((u) & 0xFF)) \
macro cr_read(n) = \
	((READ_REG << 24) | (BANK_CR << 16) | ((n) & 0xFFFF)) \
macro cr_write(n) = \
	((WRITE_REG << 24) | (BANK_CR << 16) | ((n) & 0xFFFF)) \
macro lr_read = \
	((READ_REG << 24) | (BANK_LR << 16)) \
macro lr_write = \
	((WRITE_REG << 24) | (BANK_LR << 16)) \
macro ctr_read = \
	((READ_REG << 24) | (BANK_CTR << 16)) \
macro ctr_write = \
	((WRITE_REG << 24) | (BANK_CTR << 16)) \
macro xer_read = \
	((READ_REG << 24) | (BANK_XER << 16)) \
macro xer_write = \
	((WRITE_REG << 24) | (BANK_XER << 16)) \
macro cr_read_range(l, u) = \
	((READ_RANGE << 24) | (BANK_CR << 16) | (((l) & 0xFF) << 8) | ((u) & 0xFF)) \
macro cr_write_range(l, u) = \
	((WRITE_RANGE << 24) | (BANK_CR << 16) | (((l) & 0xFF) << 8) | ((u) & 0xFF)) \


// ****** normal instruction set ******

extend branch_link, branch_link_abs
	otawa_used_regs = "USED_REGS"(lr_write, END_REG)
extend bran_cond_rel
	otawa_used_regs = "USED_REGS"(
		if !BO<2..2> then ctr_write else NO_REG endif,
		ctr_read,
		cr_read((31 - BI) >> 2),
	END_REG)
extend bran_cond_abs
	otawa_used_regs = "USED_REGS"(if !BO<2..2> then ctr_write else NO_REG endif, END_REG)
extend bran_cond_link,bran_cond_link_abs, branch_cond_ctr, branch_cond_ctr_link
	otawa_used_regs = "USED_REGS"(if !BO<2..2> then ctr_write else NO_REG endif, lr_write, END_REG)
extend branch_cond_lr
	otawa_used_regs = "USED_REGS"(
		if !BO<2..2> then ctr_write else NO_REG endif,
		ctr_read,
		lr_read,
		cr_read((31 - BI) >> 2),
		END_REG)
extend branch_cond_lr_link
	otawa_used_regs = "USED_REGS"(
		if !BO<2..2> then ctr_write else NO_REG endif,
		ctr_read,
		lr_write,
		lr_read,
		cr_read((31 - BI) >> 2),
		END_REG)
extend sys_call
	otawa_used_regs = "USED_REGS"(END_REG)

extend lb_zero, lhw_zero, lhw_alg, lw_zero
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_write(rd), END_REG)
extend lb_zero_indexed, lhw_zero_indexed, lhw_alg_indexed, lw_zero_indexed
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), gpr_write(rd), END_REG)
extend lb_zero_update, lhw_zero_update, lhw_alg_update, lw_zero_update
   otawa_used_regs = "USED_REGS"(gpr_read(ra), gpr_write(ra), gpr_write(rd), END_REG)
extend lb_zero_update_indexed, lhw_zero_update_indexed, lhw_alg_update_indexed, lw_zero_update_indexed
	otawa_used_regs = "USED_REGS"(gpr_read(ra), gpr_write(ra), gpr_read(rb.value), gpr_write(rd), END_REG)
extend lhw_br_index, lw_br_index
   otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), gpr_write(rd), END_REG)
extend int_load_multiple
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_write_range(rd, 31), gpr_read(rd), END_REG)
extend lstw_imm
	otawa_used_regs = "USED_REGS"(rzero(ra), END_REG)	// !!TOFIX!!
extend lstw_index
    otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), END_REG)	// !!TOFIX!!

extend st_byte, st_half_word, st_word
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rs), END_REG)
extend st_byte_indexed, st_half_word_indexed, st_word_indexed
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), gpr_read(rs), END_REG)
extend st_byte_update, st_half_word_update, st_word_update
   otawa_used_regs = "USED_REGS"(gpr_read(ra), gpr_write(ra), gpr_read(rs), END_REG)
extend st_byte_update_indexed, st_half_word_update_indexed, st_word_update_indexed
   otawa_used_regs = "USED_REGS"(gpr_read(ra), gpr_write(ra), gpr_read(rb.value), gpr_read(rs), END_REG)
extend sthw_br_index, stw_br_index, stw_br_index
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), gpr_read(rs), END_REG)
extend int_store_multiple
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rs), gpr_read_range(rs, 31), END_REG)
extend ststw_imm
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rs), END_REG)

extend add
	otawa_used_regs =
		"USED_REGS"(
			gpr_read(ra.value),
			gpr_read(rb.value),
			gpr_write(rd),
			if Oe then xer_write else NO_REG endif,
			if Rc then cr_write(7) else NO_REG endif,
			END_REG)
extend add_imm, add_imm_shifted
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_write(rd), END_REG)
extend add_imm_carry
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, END_REG)
extend add_imm_carry_record
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend add_carrying, add_carry_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend add_carry_cr_update, add_carry_overflow_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend add_extend, add_extend_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, xer_read, END_REG)
extend add_extend_cr_update, add_extd_overflow_cr_upd
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, xer_read, cr_write(7), END_REG)
extend add_me, add_me_overflow, add_ze, add_ze_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, xer_read, END_REG)
extend add_me_cr_update, add_me_overflow_cr_update, add_ze_cr_update, add_ze_overflow_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, xer_read, cr_write(7), END_REG)

extend sub
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), END_REG)
extend sub_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), cr_write(7), END_REG)
extend sub_overflow_enable
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend sub_crup_overen
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend sub_imm_carry_rec
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, END_REG)
extend sub_carrying
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend sub_carry_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend sub_carry_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend sub_carry_overflow_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend sub_extend
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_read, xer_write, END_REG)
extend sub_extend_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_read, xer_write, cr_write(7), END_REG)
extend sub_extend_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_read, xer_write, END_REG)
extend sub_extd_overflow_cr_upd
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_read, xer_write, cr_write(7), END_REG)
extend sub_me, sub_me_overflow, sub_ze, sub_ze_overflow
   otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_read, xer_write, END_REG)
extend sub_me_cr_update, sub_me_overflow_cr_update, sub_ze_cr_update, sub_ze_overflow_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_read, xer_write, cr_write(7), END_REG)

extend mult_lw
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), END_REG)
extend mult_lw_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), cr_write(7), END_REG)
extend mult_lw_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend mult_lw_overflow_cr_upd
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)
extend mult_low_imm
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), END_REG)
extend mult_hi, mult_hi_us
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), END_REG)
extend mult_hi_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), cr_write(7), END_REG)

extend divw, divwus
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), END_REG)
extend divw_cr_update, divwus_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), cr_write(7), END_REG)
extend divw_overflow, divwus_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, END_REG)
extend divw_overflow_cr_upd, divwus_overflow_cr_upd
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), gpr_write(rd), xer_write, cr_write(7), END_REG)

extend neg
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), END_REG)
extend neg_cr_update
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), cr_write(7), END_REG)
extend neg_overflow
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, END_REG)
extend neg_overflow_cr_upd
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_write(rd), xer_write, cr_write(7), END_REG)

extend cmp_imm
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), xer_read, cr_write(7 - crfd), END_REG)
extend cmp
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), xer_read, cr_write(7 - crfd), END_REG)
extend cmp_log_imm
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), xer_read, cr_write(7 - crfd), END_REG)
extend cmp_log
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), xer_read, cr_write(7 - crfd), END_REG)

extend or, orc, and, andc, xor, nor, nand, eqv
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), END_REG)
extend or_cr_update, orc_cr_update, and_cr_update, andc_cr_update, xor_cr_update, nor_cr_update, nand_cr_update, eqv_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), cr_write(7), END_REG)
extend or_imm, or_imm_shift, xor_imm, xor_imm_shift
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), END_REG)
extend and_imm, and_imm_shift
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), cr_write(7), END_REG)

extend extsb, extsh
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs), END_REG)
extend extsb_cr_update, extsh_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs), cr_write(7), END_REG)

extend cntlzw, rlwinm
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), END_REG)
extend cntlzw_cr_update, rlwinm_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), cr_write(7), END_REG)
extend rlwnm
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb), gpr_read(rs.value), END_REG)
extend rlwimi
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), END_REG)
extend rlwnm_cr_update 
extend rlwimi_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), cr_write(7), END_REG)
extend slw, srw
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), END_REG)
extend slw_cr_update, srw_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), cr_write(7), END_REG)
extend srawi
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), xer_write, END_REG)
extend srawi_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rs.value), xer_write, cr_write(7), END_REG)
extend sraw
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), xer_write, END_REG)
extend sraw_cr_update
	otawa_used_regs = "USED_REGS"(gpr_write(ra), gpr_read(rb.value), gpr_read(rs.value), xer_write, cr_write(7), END_REG)

extend isel
	oatwa_used_regs = "USED_REGS"(gpr_write(rD), gpr_read(rB), cr_read(CR_REG(crb)), END_REG)

extend cr_and, cr_or, cr_xor, cr_nand, cr_nor, cr_eqv, cr_and_comp, cr_or_comp
	otawa_used_regs = "USED_REGS"(cr_read(CR_REG(crba)), cr_read(CR_REG(crbb)), cr_write(CR_REG(crbd)), END_REG)
extend mov_cr_field
	otawa_used_regs = "USED_REGS"(cr_read(7-crfs), cr_write(7-crfd), END_REG)
extend mov_to_cr_field
	otawa_used_regs = "USED_REGS"(gpr_read(rs.value),
		if crm<0..0> then cr_write(0) else NO_REG endif, if crm<1..1> then cr_write(1) else NO_REG endif,
		if crm<2..2> then cr_write(2) else NO_REG endif, if crm<3..3> then cr_write(3) else NO_REG endif,
		if crm<4..4> then cr_write(4) else NO_REG endif, if crm<5..5> then cr_write(5) else NO_REG endif,
		if crm<6..6> then cr_write(6) else NO_REG endif, if crm<7..7> then cr_write(7) else NO_REG endif,
	END_REG)
extend mov_to_cr_xer
	otawa_used_regs = "USED_REGS"(cr_write(7-crfd), xer_read, xer_write, END_REG)

extend mov_from_cr
	otawa_used_regs = "USED_REGS"(gpr_write(rd), cr_read_range(0, 7), END_REG)
extend mov_to_spr
	otawa_used_regs = "USED_REGS"(gpr_read(rs),
		switch ( spr ) {
		case 1 << 5 : xer_write
		case 8 << 5: lr_write
		case 9 << 5: ctr_write
		default : NO_REG },
	END_REG)
extend mov_from_spr
	otawa_used_regs = "USED_REGS"(gpr_write(rd),
		switch ( spr ) {
		case 1 << 5 : xer_read
		case 8 << 5: lr_read
		case 9 << 5: ctr_read
		default : NO_REG },
	END_REG)

extend lwarx
	otawa_used_regs = "USED_REGS"(gpr_write(rd), rzero(ra), gpr_read(rb.value), END_REG)
extend stwcx
	otawa_used_regs = "USED_REGS"(rzero(ra), gpr_read(rb.value), gpr_read(rs.value),  cr_write(7), xer_read, END_REG)
extend sync
	otawa_used_regs = "USED_REGS"(END_REG)
extend tw
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), END_REG)
extend twi
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), END_REG)


// OEA extension
extend oea_mfspr
   otawa_used_regs = "USED_REGS"(gpr_write(rd.value),
	      switch ( spr ) {
		      case 1 << 5 : xer_read
		      case 8 << 5: lr_read
		      case 9 << 5: ctr_read
		      default : NO_REG },
		END_REG)
extend oea_mfmsr
   otawa_used_regs = "USED_REGS"(gpr_write(rd.value), END_REG)
extend oea_mtmsr
	otawa_used_regs = "USED_REGS"(gpr_read(rs.value), END_REG)
extend oea_mtspr
   otawa_used_regs = "USED_REGS"(gpr_read(rs),
	      switch ( spr ) {
		      case 1 << 5 : xer_write
		      case 8 << 5: lr_write
		      case 9 << 5: ctr_write
		      default : NO_REG },
		END_REG)
extend oea_mfsr
   otawa_used_regs = "USED_REGS"(gpr_write(rd.value), END_REG)
extend oea_mfsrin
   otawa_used_regs = "USED_REGS"(gpr_write(rd.value), gpr_read(rb.value), END_REG)

// VEA extension
extend vea_dcbi
	otawa_used_regs = "USED_REGS"(gpr_read(ra.value), gpr_read(rb.value), END_REG)	


// ****** VLE 16-bits ******
extend se_add, se_andc, se_mullw, se_or, se_slw, se_srw, se_sub, se_subf
	otawa_used_regs = "USED_REGS"(rr(rX.index), rr(rY.index), wr(rX.index), 0)

extend se_and
	otawa_used_regs = "USED_REGS"(rr(rX.index), rr(rY.index), wr(rX.index),
		if Rc then cr_write(0) else 0 endif, 0)

extend se_subi
	otawa_used_regs = "USED_REGS"(rr(rX.index), wr(rX.index),
		if Rc then cr_write(0) else 0 endif, 0)

extend se_addi, se_andi, se_bclri, se_bgeni, se_bseti,
se_extsb, se_extsh, se_extzb, se_extzh,
se_neg, se_not, se_slwi, se_sraw, se_srawi, se_srwi
	otawa_used_regs = "USED_REGS"(rr(rX.index), wr(rX.index), 0)

extend se_b
	otawa_used_regs = "USED_REGS"(if LK then lr_write else 0 endif, 0)

extend se_bctr
	otawa_used_regs = "USED_REGS"(ctr_read, if LK then lr_write else 0 endif, 0)

extend se_bctr
	otawa_used_regs = "USED_REGS"(lr_read, if LK then lr_write else 0 endif, 0)

extend se_bmski, se_li
	otawa_used_regs = "USED_REGS"(wr(rX.index), 0)

extend	se_btsti
	otawa_used_regs = "USED_REGS"(rr(rX.index), cr_write(0), 0)

extend se_cmp, se_cmph, se_cmphl, se_cmpl
	otawa_used_regs = "USED_REGS"(rr(rX.index), rr(rY.index), cr_write(0), 0)

extend se_cmp, se_cmpli
	otawa_used_regs = "USED_REGS"(rr(rX.index), cr_write(0), 0)

extend se_lbz, se_lhz, se_lwz
	otawa_used_regs = "USED_REGS"(rr(rX.index), wr(rZ.index), 0)

extend se_mfar
	otawa_used_regs = "USED_REGS"(rr(rY.index), wr(rX.index), 0)
	
extend se_mfctr
	otawa_used_regs = "USED_REGS"(ctr_read, wr(rX.index), 0)

extend se_mflr
	otawa_used_regs = "USED_REGS"(lr_read, wr(rX.index), 0)

extend se_mtctr
	otawa_used_regs = "USED_REGS"(ctr_write, rr(rX.index), 0)

extend se_mtlr
	otawa_used_regs = "USED_REGS"(lr_write, rr(rX.index), 0)

extend se_stb, se_sth, se_stw
	otawa_used_regs = "USED_REGS"(rr(rX.index), rr(rZ.index), 0)

	
// ****** vle 32-BITS ******

extend e_add16i, e_mulli
	otawa_used_regs = "USED_REGS"(rr(rA.index), wr(rD.index), 0)

extend e_add2i_
	otawa_used_regs = "USED_REGS"(rr(rA.index), wr(rA.index), cr_write(0), 0)

extend e_add2is, e_mull2i
	otawa_used_regs = "USED_REGS"(rr(rA.index), wr(rA.index), 0)

extend e_addi, e_subfic
	otawa_used_regs = "USED_REGS"(rr(rA.index), wr(rD.index), if Rc then cr_write(0) else 0 endif, 0)

extend e_addic
	otawa_used_regs = "USED_REGS"(rr(rA.index), wr(rD.index), xer_read, if Rc then cr_write(0) else 0 endif, 0) 

extend e_and2i_, e_and2is_
	otawa_used_regs = "USED_REGS"(rr(rD.index), wr(rD.index), cr_write(0), 0)

extend e_andi, e_ori, e_xori
	otawa_used_regs = "USED_REGS"(rr(rS.index), wr(rA.index), if Rc then cr_write(0) else 0 endif, 0)
	

extend e_b
	otawa_used_regs = "USED_REGS"(if LK then lr_read else 0 endif, 0)

extend e_bc
	otawa_used_regs = "USED_REGS"(
		if BO32<1..1> then ctr_read else cr_read((31 - BI32) >> 2) endif,
		if BO32<1..1> then ctr_write else -1 endif,
		if LK then lr_read else 0 endif, 0)
	
extend e_cmp16i, e_cmph16i, e_cmphl16i, e_cmpl16i
	otawa_used_regs = "USED_REGS"(rr(rA.index), cr_write(0), 0)
	
extend e_cmphl
	otawa_used_regs = "USED_REGS"(rr(rA.index), rr(rB.index), cr_write(crD), 0)


extend e_cmpi, e_cmpli
	otawa_used_regs = "USED_REGS"(rr(rA.index), cr_write(crD32), 0)

extend  e_crand, e_crandc, e_creqv, e_crnand, e_crnor, e_cror, e_crorc, e_crxor
	otawa_used_regs = "USED_REGS"(rr(crbA.index), rr(crbB.index), wr(crbD.index), 0)
 
 extend e_lbz, e_lha, e_lhz, e_lwz
 	otawa_used_regs = "USED_REGS"(rzero(rA), wr(rD), 0)

 extend e_lbzu, e_lhau, e_lhzu, e_lwzu
 	otawa_used_regs = "USED_REGS"(rzero(rA), wr(rD), wr(rA.value), 0)
 
extend e_li, e_lis
	otawa_used_regs = "USED_REGS"(wr(rD.index), 0)

extend e_lmw
	otawa_used_regs = "USED_REGS"(rzero(rA), gpr_write_range(rD, 31), 0)

extend e_mcrf
	otawa_used_regs = "USED_REGS"(cr_read(crS), cr_write(crD), 0)

extend e_or2i, e_or2is
	otawa_used_regs = "USED_REGS"(rr(rD.index), wr(rD.index), 0)

extend e_rlw
	otawa_used_regs = "USED_REGS"(rr(rS.index), rr(rB.index), wr(rA.index),
		if Rc then cr_write(0) else 0 endif, 0)

extend e_rlwi, e_slwi, e_srwi
	otawa_used_regs = "USED_REGS"(rr(rS.index), wr(rA.index),
		if Rc then cr_write(0) else 0 endif, 0)

extend e_rlwimi
	otawa_used_regs = "USED_REGS"(rr(rS.index), rr(rA.index), wr(rA.index), 0)

extend e_rlwinm
	otawa_used_regs = "USED_REGS"(rr(rS.index), wr(rA.index), 0)

extend e_stb, e_sth, e_stw
	otawa_used_regs = "USED_REGS"(rzero(rA), rr(rS), 0)

extend e_stbu, e_sthu, e_stwu
	otawa_used_regs = "USED_REGS"(rzero(rA), rr(rS), if rA.value == 0 then 0 else wr(rA.value) endif, 0)

extend e_stmw
	otawa_used_regs = "USED_REGS"(rzero(rA), gpr_write_range(rS, 31), 0)

