
let proc="mine"
let gliss_isize = "32"
let bit_order = "UPPERMOST"

reg pc[1, card(32)] is_pc=1
reg r[32, card(32)]
reg r64[16, card(64)] alias = r[0]
reg x[1, card(32)]
reg xx[1, card(6)] alias = x<5..0>

var t32[1, card(32)]
var t64[1, card(64)]

op init()
	action = { }

op instruction = simple | pair | field | param | assign | field2

op simple()
	syntax = "simple"
	image = "00000010 00000000 00000000 00000000"
	action = {
		"c"("t32 = r[3]<15..0>;");
		t32 = r[3]<15..0>;
		"c"("t32 = r[3]<31..16>;");
		t32 = r[3]<31..16>;
		"c"("r[3]<15..0> = t32;");
		r[3]<15..0> = t32;
		"c"("r[3]<31..16> = t32;");
		r[3]<31..16> = t32;
	}

op pair()
	syntax = "pair"
	image = "00000000 00000000 00000000 00000000"
	action = {
		"c"("t64 = r64[3];");
		t64 = r64[3];

		"c"("r64[10] = t64;");
		r64[10] = t64;

		"c"("t32 = r64[5];");
		t32 = r64[5];

		"c"("r64[5] = t32;");
		r64[5] = t32;

		"c"("t32 = r64[5]<63..32>;");
		t32 = r64[5]<63..32>;

		"c"("r64[5]<63..32> = t32;");
		r64[5]<63..32> = t32;

		"c"("t32 = r64[5]<31..0>;");
		t32 = r64[5]<31..0>;

		"c"("r64[5]<31..0> = t32;");
		r64[5]<31..0> = t32;
	}

op field()
	syntax = "field"
	image = "00000000 00000000 00000000 00000001"
	action = {
	}

op param(a: card(16))
	syntax = format("param %d", a)
	image = format("00000001 00000000 %16b", a)
	action = {
		"c"("t32 = a<7..0>;");
		t32 = a<7..0>;
		"c"("t32 = a<15..8>;");
		t32 = a<15..8>;
		"c"("a<7..0> = t32;");
		a<7..0> = t32;
		"c"("a<15..8> = t32;");
		a<15..8> = t32;
	}

op assign(a: card(16))
	syntax = format("assign %d", a)
	image = format("00000011 00000000 %16b", a)
	action = {
		t32<5..0> = a;
	}

op field2()
	syntax = "field2"
	image = "00000100 00000000 00000000 00000000"
	action = {
		t32 = xx;
		xx = 0b101010;
	}
