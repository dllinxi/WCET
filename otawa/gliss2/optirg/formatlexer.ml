let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\251\255\252\255\002\000\255\255\253\255\012\000\004\000\
    \254\255\034\000\251\255\252\255\036\000\255\255\253\255\070\000\
    \006\000\254\255\057\000\251\255\252\255\089\000\255\255\253\255\
    \104\000\009\000\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\004\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\004\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\004\000\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\000\000\000\000\255\255\255\255\
    \000\000\010\000\000\000\000\000\255\255\000\000\000\000\255\255\
    \255\255\000\000\019\000\000\000\000\000\255\255\000\000\000\000\
    \255\255\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\004\000\007\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\008\000\012\000\
    \017\000\000\000\000\000\026\000\000\000\000\000\008\000\000\000\
    \000\000\000\000\013\000\013\000\016\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\021\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\008\000\000\000\
    \017\000\022\000\022\000\026\000\000\000\000\000\008\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\005\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\025\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\000\000\000\000\000\000\000\000\014\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \017\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\026\000\000\000\023\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\011\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\007\000\009\000\
    \016\000\255\255\255\255\025\000\255\255\255\255\006\000\255\255\
    \255\255\255\255\009\000\009\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\018\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\007\000\255\255\
    \016\000\018\000\018\000\025\000\255\255\255\255\006\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\003\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\255\255\255\255\255\255\255\255\012\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\255\255\024\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\024\000\255\255\021\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\009\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\018\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec formatSize size indice liste lexbuf =
    __ocaml_lex_formatSize_rec size indice liste lexbuf 0
and __ocaml_lex_formatSize_rec size indice liste lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 9 "formatlexer.mll"
       ( formatSize  ( size + 1) indice liste lexbuf )
# 133 "formatlexer.ml"

  | 1 ->
let
# 2 "formatlexer.mll"
                          n
# 139 "formatlexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 10 "formatlexer.mll"
               ( formatSize ( (int_of_string n) + size) (indice+1) liste lexbuf )
# 143 "formatlexer.ml"

  | 2 ->
# 11 "formatlexer.mll"
              ( formatSize  size (indice + 1) (indice::liste) lexbuf )
# 148 "formatlexer.ml"

  | 3 ->
# 12 "formatlexer.mll"
         ( (size ,liste) )
# 153 "formatlexer.ml"

  | 4 ->
# 13 "formatlexer.mll"
        ( failwith "optirg : Lexer de format : Un caractère inconnu a été rencontré. " )
# 158 "formatlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_formatSize_rec size indice liste lexbuf __ocaml_lex_state

and formatClass lexbuf =
    __ocaml_lex_formatClass_rec lexbuf 9
and __ocaml_lex_formatClass_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "formatlexer.mll"
         ( "x"^(formatClass lexbuf) )
# 170 "formatlexer.ml"

  | 1 ->
let
# 2 "formatlexer.mll"
                          n
# 176 "formatlexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1)
and
# 17 "formatlexer.mll"
                pb
# 181 "formatlexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 17 "formatlexer.mll"
                   ( pb^(formatClass lexbuf) )
# 185 "formatlexer.ml"

  | 2 ->
let
# 18 "formatlexer.mll"
                ps
# 191 "formatlexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 2) in
# 18 "formatlexer.mll"
                   ( ps^(formatClass lexbuf) )
# 195 "formatlexer.ml"

  | 3 ->
# 19 "formatlexer.mll"
          ( "" )
# 200 "formatlexer.ml"

  | 4 ->
# 20 "formatlexer.mll"
         ( failwith "optirg : Lexer de format : Un caractère inconnu a été rencontré. " )
# 205 "formatlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_formatClass_rec lexbuf __ocaml_lex_state

and formatCode acc lexbuf =
    __ocaml_lex_formatCode_rec acc lexbuf 18
and __ocaml_lex_formatCode_rec acc lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 24 "formatlexer.mll"
        n
# 218 "formatlexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 24 "formatlexer.mll"
            ( let n=(int_of_char n)-(int_of_char '0') in formatCode (2 * acc + n) lexbuf )
# 222 "formatlexer.ml"

  | 1 ->
let
# 2 "formatlexer.mll"
                          n
# 228 "formatlexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 25 "formatlexer.mll"
               ( formatCode acc lexbuf (*let n=(int_of_string n) in formatCode ((2 lsl n) * acc) lexbuf*) )
# 232 "formatlexer.ml"

  | 2 ->
# 26 "formatlexer.mll"
               ( formatCode acc lexbuf)
# 237 "formatlexer.ml"

  | 3 ->
# 27 "formatlexer.mll"
          ( acc )
# 242 "formatlexer.ml"

  | 4 ->
# 28 "formatlexer.mll"
         ( failwith "optirg : Lexer de format : Un caractère inconnu a été rencontré. " )
# 247 "formatlexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_formatCode_rec acc lexbuf __ocaml_lex_state

;;

