# Default module configuration
default_modules="otawa ppc lp_solve5"
all_modules="$default_modules elm gel frontc gliss hcs12 lp_solve systemc"
otawa_web="http://www.irit.fr/recherches/APARA/MARCH/OTAWA"

function mod_elm {
	NAME=elm
	CHECK=exist
	CHECK_FILES=src/libelm.la
	DOWNLOAD=home
	SETUP=bootstrap
	BUILD=autotool
	INSTALL=autotool
	MAKE_FLAGS="-j $jobs"
	AUTOCONF_FLAGS="--with-mode=dev"
	DIST=copy
	REQUIRE="automake autoconf libtool"
}

function mod_otawa {
	NAME=otawa
	DOWNLOAD=home
	SETUP=bootstrap
	BUILD=autotool
	INSTALL=autotool
	AUTOCONF_FLAGS="--with-mode=dev"
	DIST=copy
	REQUIRE="elm gel"
	USE="systemc ppc hcs12 lp_solve5 lp_solve frontc"
}


# Architectures
function mod_gliss {
	NAME=gliss
	DOWNLOAD=home
	BUILD=make
	DIST=copy
}


function mod_ppc {
	NAME=ppc
	DOWNLOAD=home
	BUILD=make
	MAKE_FLAGS='OPT="-DISS_DISASM -DISS_TRACE_MEMORY" GEP_OPTS="-a user0 int8 -a category int8"'
	DIST=copy
	REQUIRE="gliss gel"
}

function mod_hcs12 {
	NAME=hcs12
	DOWNLOAD=home
	BUILD=make
	MAKE_FLAGS='OPT=-DISS_DISASM GEP_OPTS="-a otawa_kind uint32 -a time string -a time_select uint8 -a time_select2 uint8"'
	DIST=copy
	REQUIRE="gliss"
}

function mod_arm {
	NAME=arm
	DOWNLOAD=home
	VERSION=STABLE
	PATCH=fun
	BUILD=make
	MAKE_FLAGS='OPT=-DISS_DISASM'
	DIST=copy
	REQUIRE="gliss"
}

function patch_arm {
	cd $basedir/$NAME
	cat goodies/arm_param/arm.nmp | sed -e 's/include "thumb.nmp"//' -e 's/| THUMB//'> arm.nmp
	cp Makefile Makefile.old
	cat Makefile.old | sed -e 's/\(@if test -d $(OUTPUT)\/\)debug;/\1.debug;/' > Makefile
}


# ILP solvers
function mod_lp_solve {
	NAME=lp_solve
	DOWNLOAD=wget
	WGET_ADDRESS="$otawa_web/extern"
	WGET_PACKAGE=lp_solve_4.0.tar.gz
	BUILD=make
	MAKE_FLAGS=Makefile.linux
	DIST=copy
}

function patch_lp_solve5 {
	patch -p0 <<EOF
diff -Naur lp_solve_5.5.old/lpsolve55/ccc lp_solve_5.5/lpsolve55/ccc
--- lp_solve_5.5/lpsolve55/ccc       2007-07-27 10:34:13.000000000 +0200
+++ lp_solve_5.5.new/lpsolve55/ccc  2005-06-11 21:27:18.000000000 +0200
@@ -7,7 +7,7 @@
 then def='-dy -K PIC -DNOLONGLONG'
      dl=-lc
 else dl=-ldl
-     so=y
+#     so=y
 fi
 
 opts='-O3'
EOF
}

function mod_lp_solve5 {
	NAME=lp_solve5
	DOWNLOAD=wget
	WGET_ADDRESS="$otawa_web/extern"
	WGET_PACKAGE=lp_solve_5.5.0.10_source.tar.gz
	WGET_DIR=lp_solve_5.5
	PATCH=fun
	BUILD=cmd
	BUILD_CMD="(cd lpsolve55; sh ccc)"
	CLEAN=none
	DIST=copy
}



# Utilities
function mod_frontc {
	NAME=frontc
	DOWNLOAD=wget
	WGET_ADDRESS="http://www.irit.fr/recherches/ARCHI/MARCH/frontc/"
	WGET_PACKAGE="Frontc-3.2.tgz"
	BUILD=make
	INSTALL=make
	DIST=copy
}

function mod_gel {
	NAME=gel
	DOWNLOAD=home
	SETUP=bootstrap
	BUILD=autotool
	INSTALL=autotool
	AUTOCONF_FLAGS=""
	DIST="copy"
	REQUIRE="automake autoconf libtool"
}


# External dependencies
function mod_automake {
	NAME=automake
	VERSION=1.7
	CHECK=tool
}

function mod_autoconf {
	NAME=autoconf
	VERSION=2.59
	CHECK=tool
}

function mod_libtool {
	NAME=libtool
	VERSION=1.5.12
	CHECK=tool
}


# systemc module
function mod_systemc {
	NAME=systemc
	DESCRIPTION="C++ library for hardware simulation"
	VARIABLES="    --with-systemc=PATH -- path to the systemc source directory"
	DOWNLOAD=link
	LINKPATH="$systemc_path"
}
options="$options systemc"
function option_systemc {
	if [ "$1" = "systemc" ]; then
		added_modules="$added_modules systemc"
		systemc_path="$2"
	fi
}
function help_systemc {
	echo "    -with-systemc=PATH: path to systemc source"
}

